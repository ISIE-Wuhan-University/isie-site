(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})((typeof self !== 'undefined' ? self : this), function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./dist/gdal3WebAssembly.js":
/*!**********************************!*\
  !*** ./dist/gdal3WebAssembly.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar CModule = function () {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return function (CModule) {\n    CModule = CModule || {};\n    var Module = typeof CModule !== \"undefined\" ? CModule : {};\n\n    if (!Module.expectedDataFileDownloads) {\n      Module.expectedDataFileDownloads = 0;\n      Module.finishedDataFileDownloads = 0;\n    }\n\n    Module.expectedDataFileDownloads++;\n\n    (function () {\n      var loadPackage = function loadPackage(metadata) {\n        var PACKAGE_PATH;\n\n        if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") {\n          PACKAGE_PATH = window[\"encodeURIComponent\"](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf(\"/\")) + \"/\");\n        } else if (typeof location !== \"undefined\") {\n          PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf(\"/\")) + \"/\");\n        } else {\n          throw \"using preloaded data can only be done on a web page or in a web worker\";\n        }\n\n        var PACKAGE_NAME = \"gdal3WebAssembly.data\";\n        var REMOTE_PACKAGE_BASE = \"gdal3WebAssembly.data\";\n\n        if (typeof Module[\"locateFilePackage\"] === \"function\" && !Module[\"locateFile\"]) {\n          Module[\"locateFile\"] = Module[\"locateFilePackage\"];\n          err(\"warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)\");\n        }\n\n        var REMOTE_PACKAGE_NAME = Module[\"locateFile\"] ? Module[\"locateFile\"](REMOTE_PACKAGE_BASE, \"\") : REMOTE_PACKAGE_BASE;\n        var REMOTE_PACKAGE_SIZE = metadata[\"remote_package_size\"];\n        var PACKAGE_UUID = metadata[\"package_uuid\"];\n\n        function fetchRemotePackage(packageName, packageSize, callback, errback) {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", packageName, true);\n          xhr.responseType = \"arraybuffer\";\n\n          xhr.onprogress = function (event) {\n            var url = packageName;\n            var size = packageSize;\n            if (event.total) size = event.total;\n\n            if (event.loaded) {\n              if (!xhr.addedTotal) {\n                xhr.addedTotal = true;\n                if (!Module.dataFileDownloads) Module.dataFileDownloads = {};\n                Module.dataFileDownloads[url] = {\n                  loaded: event.loaded,\n                  total: size\n                };\n              } else {\n                Module.dataFileDownloads[url].loaded = event.loaded;\n              }\n\n              var total = 0;\n              var loaded = 0;\n              var num = 0;\n\n              for (var download in Module.dataFileDownloads) {\n                var data = Module.dataFileDownloads[download];\n                total += data.total;\n                loaded += data.loaded;\n                num++;\n              }\n\n              total = Math.ceil(total * Module.expectedDataFileDownloads / num);\n              if (Module[\"setStatus\"]) Module[\"setStatus\"](\"Downloading data... (\" + loaded + \"/\" + total + \")\");\n            } else if (!Module.dataFileDownloads) {\n              if (Module[\"setStatus\"]) Module[\"setStatus\"](\"Downloading data...\");\n            }\n          };\n\n          xhr.onerror = function (event) {\n            throw new Error(\"NetworkError for: \" + packageName);\n          };\n\n          xhr.onload = function (event) {\n            if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || xhr.status == 0 && xhr.response) {\n              var packageData = xhr.response;\n              callback(packageData);\n            } else {\n              throw new Error(xhr.statusText + \" : \" + xhr.responseURL);\n            }\n          };\n\n          xhr.send(null);\n        }\n\n        function handleError(error) {\n          console.error(\"package error:\", error);\n        }\n\n        var fetchedCallback = null;\n        var fetched = Module[\"getPreloadedPackage\"] ? Module[\"getPreloadedPackage\"](REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE) : null;\n        if (!fetched) fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, function (data) {\n          if (fetchedCallback) {\n            fetchedCallback(data);\n            fetchedCallback = null;\n          } else {\n            fetched = data;\n          }\n        }, handleError);\n\n        function runWithFS() {\n          function assert(check, msg) {\n            if (!check) throw msg + new Error().stack;\n          }\n\n          Module[\"FS_createPath\"](\"/\", \"usr\", true, true);\n          Module[\"FS_createPath\"](\"/usr\", \"share\", true, true);\n          Module[\"FS_createPath\"](\"/usr/share\", \"gdal\", true, true);\n          Module[\"FS_createPath\"](\"/usr/share\", \"proj\", true, true);\n\n          function DataRequest(start, end, audio) {\n            this.start = start;\n            this.end = end;\n            this.audio = audio;\n          }\n\n          DataRequest.prototype = {\n            requests: {},\n            open: function open(mode, name) {\n              this.name = name;\n              this.requests[name] = this;\n              Module[\"addRunDependency\"](\"fp \" + this.name);\n            },\n            send: function send() {},\n            onload: function onload() {\n              var byteArray = this.byteArray.subarray(this.start, this.end);\n              this.finish(byteArray);\n            },\n            finish: function finish(byteArray) {\n              var that = this;\n              Module[\"FS_createDataFile\"](this.name, null, byteArray, true, true, true);\n              Module[\"removeRunDependency\"](\"fp \" + that.name);\n              this.requests[this.name] = null;\n            }\n          };\n          var files = metadata[\"files\"];\n\n          for (var i = 0; i < files.length; ++i) {\n            new DataRequest(files[i][\"start\"], files[i][\"end\"], files[i][\"audio\"]).open(\"GET\", files[i][\"filename\"]);\n          }\n\n          function processPackageData(arrayBuffer) {\n            Module.finishedDataFileDownloads++;\n            assert(arrayBuffer, \"Loading data file failed.\");\n            assert(arrayBuffer instanceof ArrayBuffer, \"bad input to processPackageData\");\n            var byteArray = new Uint8Array(arrayBuffer);\n            DataRequest.prototype.byteArray = byteArray;\n            var files = metadata[\"files\"];\n\n            for (var i = 0; i < files.length; ++i) {\n              DataRequest.prototype.requests[files[i].filename].onload();\n            }\n\n            Module[\"removeRunDependency\"](\"datafile_gdal3WebAssembly.data\");\n          }\n\n          Module[\"addRunDependency\"](\"datafile_gdal3WebAssembly.data\");\n          if (!Module.preloadResults) Module.preloadResults = {};\n          Module.preloadResults[PACKAGE_NAME] = {\n            fromCache: false\n          };\n\n          if (fetched) {\n            processPackageData(fetched);\n            fetched = null;\n          } else {\n            fetchedCallback = processPackageData;\n          }\n        }\n\n        if (Module[\"calledRun\"]) {\n          runWithFS();\n        } else {\n          if (!Module[\"preRun\"]) Module[\"preRun\"] = [];\n          Module[\"preRun\"].push(runWithFS);\n        }\n      };\n\n      loadPackage({\n        \"files\": [{\n          \"filename\": \"/usr/share/gdal/jpfgdgml_RdArea.gfs\",\n          \"start\": 0,\n          \"end\": 1515,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/plscenesconf.json\",\n          \"start\": 1515,\n          \"end\": 29219,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/header.dxf\",\n          \"start\": 29219,\n          \"end\": 35791,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/pci_datum.txt\",\n          \"start\": 35791,\n          \"end\": 70896,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/nitf_spec.xml\",\n          \"start\": 70896,\n          \"end\": 166807,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/pci_ellips.txt\",\n          \"start\": 166807,\n          \"end\": 170273,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/inspire_cp_CadastralBoundary.gfs\",\n          \"start\": 170273,\n          \"end\": 171923,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/ozi_ellips.csv\",\n          \"start\": 171923,\n          \"end\": 173272,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/ozi_datum.csv\",\n          \"start\": 173272,\n          \"end\": 181754,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/eedaconf.json\",\n          \"start\": 181754,\n          \"end\": 182133,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_RvrMgtBdry.gfs\",\n          \"start\": 182133,\n          \"end\": 183521,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_BldA.gfs\",\n          \"start\": 183521,\n          \"end\": 185022,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/vdv452.xsd\",\n          \"start\": 185022,\n          \"end\": 187964,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/s57expectedinput.csv\",\n          \"start\": 187964,\n          \"end\": 208849,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_WStrA.gfs\",\n          \"start\": 208849,\n          \"end\": 210352,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/ruian_vf_v1.gfs\",\n          \"start\": 210352,\n          \"end\": 277686,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/inspire_cp_BasicPropertyUnit.gfs\",\n          \"start\": 277686,\n          \"end\": 279426,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/GDALLogoGS.svg\",\n          \"start\": 279426,\n          \"end\": 291731,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/s57objectclasses.csv\",\n          \"start\": 291731,\n          \"end\": 345056,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/GDALLogoColor.svg\",\n          \"start\": 345056,\n          \"end\": 357361,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/pds4_template.xml\",\n          \"start\": 357361,\n          \"end\": 360734,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/default.rsc\",\n          \"start\": 360734,\n          \"end\": 824366,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_ElevPt.gfs\",\n          \"start\": 824366,\n          \"end\": 825866,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/cubewerx_extra.wkt\",\n          \"start\": 825866,\n          \"end\": 837843,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/ecw_cs.wkt\",\n          \"start\": 837843,\n          \"end\": 1201560,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/osmconf.ini\",\n          \"start\": 1201560,\n          \"end\": 1206439,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/epsg.wkt\",\n          \"start\": 1206439,\n          \"end\": 1206466,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_SBBdry.gfs\",\n          \"start\": 1206466,\n          \"end\": 1207719,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_BldL.gfs\",\n          \"start\": 1207719,\n          \"end\": 1209222,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/ruian_vf_st_v1.gfs\",\n          \"start\": 1209222,\n          \"end\": 1255194,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/gmlasconf.xml\",\n          \"start\": 1255194,\n          \"end\": 1262626,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/gt_datum.csv\",\n          \"start\": 1262626,\n          \"end\": 1278430,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/ruian_vf_st_uvoh_v1.gfs\",\n          \"start\": 1278430,\n          \"end\": 1281030,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/LICENSE.TXT\",\n          \"start\": 1281030,\n          \"end\": 1299194,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_SBAPt.gfs\",\n          \"start\": 1299194,\n          \"end\": 1300569,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/ruian_vf_ob_v1.gfs\",\n          \"start\": 1300569,\n          \"end\": 1347344,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_WL.gfs\",\n          \"start\": 1347344,\n          \"end\": 1348843,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/GDALLogoBW.svg\",\n          \"start\": 1348843,\n          \"end\": 1361865,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/gmlasconf.xsd\",\n          \"start\": 1361865,\n          \"end\": 1410609,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_RdCompt.gfs\",\n          \"start\": 1410609,\n          \"end\": 1412255,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/stateplane.csv\",\n          \"start\": 1412255,\n          \"end\": 1422615,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/trailer.dxf\",\n          \"start\": 1422615,\n          \"end\": 1424829,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/nitf_spec.xsd\",\n          \"start\": 1424829,\n          \"end\": 1431007,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/bag_template.xml\",\n          \"start\": 1431007,\n          \"end\": 1440027,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/s57attributes.csv\",\n          \"start\": 1440027,\n          \"end\": 1460028,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/vdv452.xml\",\n          \"start\": 1460028,\n          \"end\": 1485932,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_Cntr.gfs\",\n          \"start\": 1485932,\n          \"end\": 1487433,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_SBArea.gfs\",\n          \"start\": 1487433,\n          \"end\": 1488940,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_RailCL.gfs\",\n          \"start\": 1488940,\n          \"end\": 1490447,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_RdEdg.gfs\",\n          \"start\": 1490447,\n          \"end\": 1492089,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/esri_StatePlane_extra.wkt\",\n          \"start\": 1492089,\n          \"end\": 1824635,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_RdSgmtA.gfs\",\n          \"start\": 1824635,\n          \"end\": 1826279,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/seed_2d.dgn\",\n          \"start\": 1826279,\n          \"end\": 1835495,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_LeveeEdge.gfs\",\n          \"start\": 1835495,\n          \"end\": 1836881,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/netcdf_config.xsd\",\n          \"start\": 1836881,\n          \"end\": 1844466,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_RdASL.gfs\",\n          \"start\": 1844466,\n          \"end\": 1845717,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_CommBdry.gfs\",\n          \"start\": 1845717,\n          \"end\": 1847101,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/vicar.json\",\n          \"start\": 1847101,\n          \"end\": 1849508,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/s57agencies.csv\",\n          \"start\": 1849508,\n          \"end\": 1862812,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_CommPt.gfs\",\n          \"start\": 1862812,\n          \"end\": 1864447,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_RdMgtBdry.gfs\",\n          \"start\": 1864447,\n          \"end\": 1865833,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/inspire_cp_CadastralZoning.gfs\",\n          \"start\": 1865833,\n          \"end\": 1870645,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/inspire_cp_CadastralParcel.gfs\",\n          \"start\": 1870645,\n          \"end\": 1873095,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/gt_ellips.csv\",\n          \"start\": 1873095,\n          \"end\": 1874814,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/seed_3d.dgn\",\n          \"start\": 1874814,\n          \"end\": 1876862,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/gml_registry.xml\",\n          \"start\": 1876862,\n          \"end\": 1883505,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_WA.gfs\",\n          \"start\": 1883505,\n          \"end\": 1885002,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_Cstline.gfs\",\n          \"start\": 1885002,\n          \"end\": 1886511,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_GCP.gfs\",\n          \"start\": 1886511,\n          \"end\": 1889034,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/ogrvrt.xsd\",\n          \"start\": 1889034,\n          \"end\": 1914775,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_AdmPt.gfs\",\n          \"start\": 1914775,\n          \"end\": 1916408,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_AdmArea.gfs\",\n          \"start\": 1916408,\n          \"end\": 1918048,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_WStrL.gfs\",\n          \"start\": 1918048,\n          \"end\": 1919553,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/gdalvrt.xsd\",\n          \"start\": 1919553,\n          \"end\": 1946462,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/gdalicon.png\",\n          \"start\": 1946462,\n          \"end\": 1948483,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/gdalmdiminfo_output.schema.json\",\n          \"start\": 1948483,\n          \"end\": 1953793,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/jpfgdgml_AdmBdry.gfs\",\n          \"start\": 1953793,\n          \"end\": 1955175,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/gdal/pdfcomposition.xsd\",\n          \"start\": 1955175,\n          \"end\": 1989446,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/proj/ITRF2000\",\n          \"start\": 1989446,\n          \"end\": 1991545,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/proj/projjson.schema.json\",\n          \"start\": 1991545,\n          \"end\": 2023605,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/proj/nad83\",\n          \"start\": 2023605,\n          \"end\": 2040198,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/proj/ITRF2014\",\n          \"start\": 2040198,\n          \"end\": 2043666,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/proj/other.extra\",\n          \"start\": 2043666,\n          \"end\": 2047581,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/proj/nad27\",\n          \"start\": 2047581,\n          \"end\": 2067116,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/proj/null\",\n          \"start\": 2067116,\n          \"end\": 2067348,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/proj/nad.lst\",\n          \"start\": 2067348,\n          \"end\": 2073733,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/proj/GL27\",\n          \"start\": 2073733,\n          \"end\": 2074461,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/proj/world\",\n          \"start\": 2074461,\n          \"end\": 2081540,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/proj/CH\",\n          \"start\": 2081540,\n          \"end\": 2082723,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/proj/ITRF2008\",\n          \"start\": 2082723,\n          \"end\": 2086383,\n          \"audio\": 0\n        }, {\n          \"filename\": \"/usr/share/proj/proj.db\",\n          \"start\": 2086383,\n          \"end\": 8254959,\n          \"audio\": 0\n        }],\n        \"remote_package_size\": 8254959,\n        \"package_uuid\": \"3b514882-cc6e-4c38-92d2-dbac2949d831\"\n      });\n    })();\n\n    var moduleOverrides = {};\n    var key;\n\n    for (key in Module) {\n      if (Module.hasOwnProperty(key)) {\n        moduleOverrides[key] = Module[key];\n      }\n    }\n\n    var arguments_ = [];\n    var thisProgram = \"./this.program\";\n\n    var quit_ = function quit_(status, toThrow) {\n      throw toThrow;\n    };\n\n    var ENVIRONMENT_IS_WEB = false;\n    var ENVIRONMENT_IS_WORKER = false;\n    var ENVIRONMENT_IS_NODE = false;\n    var ENVIRONMENT_IS_SHELL = false;\n    ENVIRONMENT_IS_WEB = (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\";\n    ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n    ENVIRONMENT_IS_NODE = (typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) === \"object\" && _typeof(process.versions) === \"object\" && typeof process.versions.node === \"string\";\n    ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n    var scriptDirectory = \"\";\n\n    function locateFile(path) {\n      if (Module[\"locateFile\"]) {\n        return Module[\"locateFile\"](path, scriptDirectory);\n      }\n\n      return scriptDirectory + path;\n    }\n\n    var read_, readAsync, readBinary, setWindowTitle;\n    var nodeFS;\n    var nodePath;\n\n    if (ENVIRONMENT_IS_NODE) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = require(\"path\").dirname(scriptDirectory) + \"/\";\n      } else {\n        scriptDirectory = __dirname + \"/\";\n      }\n\n      read_ = function shell_read(filename, binary) {\n        if (!nodeFS) nodeFS = require(\"fs\");\n        if (!nodePath) nodePath = require(\"path\");\n        filename = nodePath[\"normalize\"](filename);\n        return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n      };\n\n      readBinary = function readBinary(filename) {\n        var ret = read_(filename, true);\n\n        if (!ret.buffer) {\n          ret = new Uint8Array(ret);\n        }\n\n        assert(ret.buffer);\n        return ret;\n      };\n\n      if (process[\"argv\"].length > 1) {\n        thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n      }\n\n      arguments_ = process[\"argv\"].slice(2);\n      process[\"on\"](\"uncaughtException\", function (ex) {\n        if (!(ex instanceof ExitStatus)) {\n          throw ex;\n        }\n      });\n      process[\"on\"](\"unhandledRejection\", abort);\n\n      quit_ = function quit_(status) {\n        process[\"exit\"](status);\n      };\n\n      Module[\"inspect\"] = function () {\n        return \"[Emscripten Module object]\";\n      };\n    } else if (ENVIRONMENT_IS_SHELL) {\n      if (typeof read != \"undefined\") {\n        read_ = function shell_read(f) {\n          return read(f);\n        };\n      }\n\n      readBinary = function readBinary(f) {\n        var data;\n\n        if (typeof readbuffer === \"function\") {\n          return new Uint8Array(readbuffer(f));\n        }\n\n        data = read(f, \"binary\");\n        assert(_typeof(data) === \"object\");\n        return data;\n      };\n\n      if (typeof scriptArgs != \"undefined\") {\n        arguments_ = scriptArgs;\n      } else if (typeof arguments != \"undefined\") {\n        arguments_ = arguments;\n      }\n\n      if (typeof quit === \"function\") {\n        quit_ = function quit_(status) {\n          quit(status);\n        };\n      }\n\n      if (typeof print !== \"undefined\") {\n        if (typeof console === \"undefined\") console = {};\n        console.log = print;\n        console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\n      }\n    } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n\n      if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n      } else {\n        scriptDirectory = \"\";\n      }\n\n      {\n        read_ = function shell_read(url) {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = function readBinary(url) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            xhr.responseType = \"arraybuffer\";\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n\n        readAsync = function readAsync(url, onload, onerror) {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, true);\n          xhr.responseType = \"arraybuffer\";\n\n          xhr.onload = function xhr_onload() {\n            if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n              onload(xhr.response);\n              return;\n            }\n\n            onerror();\n          };\n\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n\n      setWindowTitle = function setWindowTitle(title) {\n        document.title = title;\n      };\n    } else {}\n\n    var out = Module[\"print\"] || console.log.bind(console);\n    var err = Module[\"printErr\"] || console.warn.bind(console);\n\n    for (key in moduleOverrides) {\n      if (moduleOverrides.hasOwnProperty(key)) {\n        Module[key] = moduleOverrides[key];\n      }\n    }\n\n    moduleOverrides = null;\n    if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n    if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n    if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n\n    function dynamicAlloc(size) {\n      var ret = HEAP32[DYNAMICTOP_PTR >> 2];\n      var end = ret + size + 15 & -16;\n      HEAP32[DYNAMICTOP_PTR >> 2] = end;\n      return ret;\n    }\n\n    function convertJsFunctionToWasm(func, sig) {\n      if (typeof WebAssembly.Function === \"function\") {\n        var typeNames = {\n          \"i\": \"i32\",\n          \"j\": \"i64\",\n          \"f\": \"f32\",\n          \"d\": \"f64\"\n        };\n        var type = {\n          parameters: [],\n          results: sig[0] == \"v\" ? [] : [typeNames[sig[0]]]\n        };\n\n        for (var i = 1; i < sig.length; ++i) {\n          type.parameters.push(typeNames[sig[i]]);\n        }\n\n        return new WebAssembly.Function(type, func);\n      }\n\n      var typeSection = [1, 0, 1, 96];\n      var sigRet = sig.slice(0, 1);\n      var sigParam = sig.slice(1);\n      var typeCodes = {\n        \"i\": 127,\n        \"j\": 126,\n        \"f\": 125,\n        \"d\": 124\n      };\n      typeSection.push(sigParam.length);\n\n      for (var i = 0; i < sigParam.length; ++i) {\n        typeSection.push(typeCodes[sigParam[i]]);\n      }\n\n      if (sigRet == \"v\") {\n        typeSection.push(0);\n      } else {\n        typeSection = typeSection.concat([1, typeCodes[sigRet]]);\n      }\n\n      typeSection[1] = typeSection.length - 2;\n      var bytes = new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0].concat(typeSection, [2, 7, 1, 1, 101, 1, 102, 0, 0, 7, 5, 1, 1, 102, 0, 0]));\n      var module = new WebAssembly.Module(bytes);\n      var instance = new WebAssembly.Instance(module, {\n        \"e\": {\n          \"f\": func\n        }\n      });\n      var wrappedFunc = instance.exports[\"f\"];\n      return wrappedFunc;\n    }\n\n    var freeTableIndexes = [];\n    var functionsInTableMap;\n\n    function addFunctionWasm(func, sig) {\n      var table = wasmTable;\n\n      if (!functionsInTableMap) {\n        functionsInTableMap = new WeakMap();\n\n        for (var i = 0; i < table.length; i++) {\n          var item = table.get(i);\n\n          if (item) {\n            functionsInTableMap.set(item, i);\n          }\n        }\n      }\n\n      if (functionsInTableMap.has(func)) {\n        return functionsInTableMap.get(func);\n      }\n\n      var ret;\n\n      if (freeTableIndexes.length) {\n        ret = freeTableIndexes.pop();\n      } else {\n        ret = table.length;\n\n        try {\n          table.grow(1);\n        } catch (err) {\n          if (!(err instanceof RangeError)) {\n            throw err;\n          }\n\n          throw \"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\";\n        }\n      }\n\n      try {\n        table.set(ret, func);\n      } catch (err) {\n        if (!(err instanceof TypeError)) {\n          throw err;\n        }\n\n        assert(typeof sig !== \"undefined\", \"Missing signature argument to addFunction\");\n        var wrapped = convertJsFunctionToWasm(func, sig);\n        table.set(ret, wrapped);\n      }\n\n      functionsInTableMap[func] = ret;\n      return ret;\n    }\n\n    function addFunction(func, sig) {\n      return addFunctionWasm(func, sig);\n    }\n\n    var tempRet0 = 0;\n\n    var setTempRet0 = function setTempRet0(value) {\n      tempRet0 = value;\n    };\n\n    var getTempRet0 = function getTempRet0() {\n      return tempRet0;\n    };\n\n    var wasmBinary;\n    if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n    var noExitRuntime;\n    if (Module[\"noExitRuntime\"]) noExitRuntime = Module[\"noExitRuntime\"];\n\n    if ((typeof WebAssembly === \"undefined\" ? \"undefined\" : _typeof(WebAssembly)) !== \"object\") {\n      err(\"no native wasm support detected\");\n    }\n\n    function setValue(ptr, value, type, noSafe) {\n      type = type || \"i8\";\n      if (type.charAt(type.length - 1) === \"*\") type = \"i32\";\n\n      switch (type) {\n        case \"i1\":\n          HEAP8[ptr >> 0] = value;\n          break;\n\n        case \"i8\":\n          HEAP8[ptr >> 0] = value;\n          break;\n\n        case \"i16\":\n          HEAP16[ptr >> 1] = value;\n          break;\n\n        case \"i32\":\n          HEAP32[ptr >> 2] = value;\n          break;\n\n        case \"i64\":\n          tempI64 = [value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];\n          break;\n\n        case \"float\":\n          HEAPF32[ptr >> 2] = value;\n          break;\n\n        case \"double\":\n          HEAPF64[ptr >> 3] = value;\n          break;\n\n        default:\n          abort(\"invalid type for setValue: \" + type);\n      }\n    }\n\n    function getValue(ptr, type, noSafe) {\n      type = type || \"i8\";\n      if (type.charAt(type.length - 1) === \"*\") type = \"i32\";\n\n      switch (type) {\n        case \"i1\":\n          return HEAP8[ptr >> 0];\n\n        case \"i8\":\n          return HEAP8[ptr >> 0];\n\n        case \"i16\":\n          return HEAP16[ptr >> 1];\n\n        case \"i32\":\n          return HEAP32[ptr >> 2];\n\n        case \"i64\":\n          return HEAP32[ptr >> 2];\n\n        case \"float\":\n          return HEAPF32[ptr >> 2];\n\n        case \"double\":\n          return HEAPF64[ptr >> 3];\n\n        default:\n          abort(\"invalid type for getValue: \" + type);\n      }\n\n      return null;\n    }\n\n    var wasmMemory;\n    var wasmTable = new WebAssembly.Table({\n      \"initial\": 20396,\n      \"maximum\": 20396 + 200,\n      \"element\": \"anyfunc\"\n    });\n    var ABORT = false;\n    var EXITSTATUS = 0;\n\n    function assert(condition, text) {\n      if (!condition) {\n        abort(\"Assertion failed: \" + text);\n      }\n    }\n\n    function getCFunc(ident) {\n      var func = Module[\"_\" + ident];\n      assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\n      return func;\n    }\n\n    function ccall(ident, returnType, argTypes, args, opts) {\n      var toC = {\n        \"string\": function string(str) {\n          var ret = 0;\n\n          if (str !== null && str !== undefined && str !== 0) {\n            var len = (str.length << 2) + 1;\n            ret = stackAlloc(len);\n            stringToUTF8(str, ret, len);\n          }\n\n          return ret;\n        },\n        \"array\": function array(arr) {\n          var ret = stackAlloc(arr.length);\n          writeArrayToMemory(arr, ret);\n          return ret;\n        }\n      };\n\n      function convertReturnValue(ret) {\n        if (returnType === \"string\") return UTF8ToString(ret);\n        if (returnType === \"boolean\") return Boolean(ret);\n        return ret;\n      }\n\n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n\n          if (converter) {\n            if (stack === 0) stack = stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n\n      var ret = func.apply(null, cArgs);\n      ret = convertReturnValue(ret);\n      if (stack !== 0) stackRestore(stack);\n      return ret;\n    }\n\n    function cwrap(ident, returnType, argTypes, opts) {\n      argTypes = argTypes || [];\n      var numericArgs = argTypes.every(function (type) {\n        return type === \"number\";\n      });\n      var numericRet = returnType !== \"string\";\n\n      if (numericRet && numericArgs && !opts) {\n        return getCFunc(ident);\n      }\n\n      return function () {\n        return ccall(ident, returnType, argTypes, arguments, opts);\n      };\n    }\n\n    function getMemory(size) {\n      if (!runtimeInitialized) return dynamicAlloc(size);\n      return _malloc(size);\n    }\n\n    var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\n    function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n\n      while (heap[endPtr] && !(endPtr >= endIdx)) {\n        ++endPtr;\n      }\n\n      if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n        return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n      } else {\n        var str = \"\";\n\n        while (idx < endPtr) {\n          var u0 = heap[idx++];\n\n          if (!(u0 & 128)) {\n            str += String.fromCharCode(u0);\n            continue;\n          }\n\n          var u1 = heap[idx++] & 63;\n\n          if ((u0 & 224) == 192) {\n            str += String.fromCharCode((u0 & 31) << 6 | u1);\n            continue;\n          }\n\n          var u2 = heap[idx++] & 63;\n\n          if ((u0 & 240) == 224) {\n            u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n          } else {\n            u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;\n          }\n\n          if (u0 < 65536) {\n            str += String.fromCharCode(u0);\n          } else {\n            var ch = u0 - 65536;\n            str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n          }\n        }\n      }\n\n      return str;\n    }\n\n    function UTF8ToString(ptr, maxBytesToRead) {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n    }\n\n    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      if (!(maxBytesToWrite > 0)) return 0;\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n\n        if (u >= 55296 && u <= 57343) {\n          var u1 = str.charCodeAt(++i);\n          u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n        }\n\n        if (u <= 127) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 2047) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 192 | u >> 6;\n          heap[outIdx++] = 128 | u & 63;\n        } else if (u <= 65535) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 224 | u >> 12;\n          heap[outIdx++] = 128 | u >> 6 & 63;\n          heap[outIdx++] = 128 | u & 63;\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 240 | u >> 18;\n          heap[outIdx++] = 128 | u >> 12 & 63;\n          heap[outIdx++] = 128 | u >> 6 & 63;\n          heap[outIdx++] = 128 | u & 63;\n        }\n      }\n\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    }\n\n    function lengthBytesUTF8(str) {\n      var len = 0;\n\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n        if (u <= 127) ++len;else if (u <= 2047) len += 2;else if (u <= 65535) len += 3;else len += 4;\n      }\n\n      return len;\n    }\n\n    var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\n    function allocateUTF8(str) {\n      var size = lengthBytesUTF8(str) + 1;\n\n      var ret = _malloc(size);\n\n      if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n      return ret;\n    }\n\n    function writeArrayToMemory(array, buffer) {\n      HEAP8.set(array, buffer);\n    }\n\n    function writeAsciiToMemory(str, buffer, dontAddNull) {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n\n      if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n    }\n\n    var WASM_PAGE_SIZE = 65536;\n\n    function alignUp(x, multiple) {\n      if (x % multiple > 0) {\n        x += multiple - x % multiple;\n      }\n\n      return x;\n    }\n\n    var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\n    function updateGlobalBufferAndViews(buf) {\n      buffer = buf;\n      Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n      Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n      Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n      Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n      Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n      Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n      Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n      Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n    }\n\n    var DYNAMIC_BASE = 8173136,\n        DYNAMICTOP_PTR = 2930080;\n    var INITIAL_INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 536870912;\n\n    if (Module[\"wasmMemory\"]) {\n      wasmMemory = Module[\"wasmMemory\"];\n    } else {\n      wasmMemory = new WebAssembly.Memory({\n        \"initial\": INITIAL_INITIAL_MEMORY / WASM_PAGE_SIZE,\n        \"maximum\": 2147483648 / WASM_PAGE_SIZE\n      });\n    }\n\n    if (wasmMemory) {\n      buffer = wasmMemory.buffer;\n    }\n\n    INITIAL_INITIAL_MEMORY = buffer.byteLength;\n    updateGlobalBufferAndViews(buffer);\n    HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;\n\n    function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        var callback = callbacks.shift();\n\n        if (typeof callback == \"function\") {\n          callback(Module);\n          continue;\n        }\n\n        var func = callback.func;\n\n        if (typeof func === \"number\") {\n          if (callback.arg === undefined) {\n            Module[\"dynCall_v\"](func);\n          } else {\n            Module[\"dynCall_vi\"](func, callback.arg);\n          }\n        } else {\n          func(callback.arg === undefined ? null : callback.arg);\n        }\n      }\n    }\n\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATMAIN__ = [];\n    var __ATEXIT__ = [];\n    var __ATPOSTRUN__ = [];\n    var runtimeInitialized = false;\n    var runtimeExited = false;\n\n    function preRun() {\n      if (Module[\"preRun\"]) {\n        if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n\n        while (Module[\"preRun\"].length) {\n          addOnPreRun(Module[\"preRun\"].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function initRuntime() {\n      runtimeInitialized = true;\n      if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init();\n      TTY.init();\n      PIPEFS.root = FS.mount(PIPEFS, {}, null);\n      SOCKFS.root = FS.mount(SOCKFS, {}, null);\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function preMain() {\n      FS.ignorePermissions = false;\n      callRuntimeCallbacks(__ATMAIN__);\n    }\n\n    function exitRuntime() {\n      runtimeExited = true;\n    }\n\n    function postRun() {\n      if (Module[\"postRun\"]) {\n        if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n\n        while (Module[\"postRun\"].length) {\n          addOnPostRun(Module[\"postRun\"].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    var Math_abs = Math.abs;\n    var Math_ceil = Math.ceil;\n    var Math_floor = Math.floor;\n    var Math_min = Math.min;\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n\n    function addRunDependency(id) {\n      runDependencies++;\n\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    Module[\"preloadedImages\"] = {};\n    Module[\"preloadedAudios\"] = {};\n\n    function abort(what) {\n      if (Module[\"onAbort\"]) {\n        Module[\"onAbort\"](what);\n      }\n\n      what += \"\";\n      out(what);\n      err(what);\n      ABORT = true;\n      EXITSTATUS = 1;\n      what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n      throw new WebAssembly.RuntimeError(what);\n    }\n\n    function hasPrefix(str, prefix) {\n      return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;\n    }\n\n    var dataURIPrefix = \"data:application/octet-stream;base64,\";\n\n    function isDataURI(filename) {\n      return hasPrefix(filename, dataURIPrefix);\n    }\n\n    var fileURIPrefix = \"file://\";\n\n    function isFileURI(filename) {\n      return hasPrefix(filename, fileURIPrefix);\n    }\n\n    var wasmBinaryFile = \"gdal3WebAssembly.wasm\";\n\n    if (!isDataURI(wasmBinaryFile)) {\n      wasmBinaryFile = locateFile(wasmBinaryFile);\n    }\n\n    function getBinary() {\n      try {\n        if (wasmBinary) {\n          return new Uint8Array(wasmBinary);\n        }\n\n        if (readBinary) {\n          return readBinary(wasmBinaryFile);\n        } else {\n          throw \"both async and sync fetching of the wasm failed\";\n        }\n      } catch (err) {\n        abort(err);\n      }\n    }\n\n    function getBinaryPromise() {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n        return fetch(wasmBinaryFile, {\n          credentials: \"same-origin\"\n        }).then(function (response) {\n          if (!response[\"ok\"]) {\n            throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n          }\n\n          return response[\"arrayBuffer\"]();\n        })[\"catch\"](function () {\n          return getBinary();\n        });\n      }\n\n      return new Promise(function (resolve, reject) {\n        resolve(getBinary());\n      });\n    }\n\n    function createWasm() {\n      var info = {\n        \"a\": asmLibraryArg\n      };\n\n      function receiveInstance(instance, module) {\n        var exports = instance.exports;\n        Module[\"asm\"] = exports;\n        removeRunDependency(\"wasm-instantiate\");\n      }\n\n      addRunDependency(\"wasm-instantiate\");\n\n      function receiveInstantiatedSource(output) {\n        receiveInstance(output[\"instance\"]);\n      }\n\n      function instantiateArrayBuffer(receiver) {\n        return getBinaryPromise().then(function (binary) {\n          return WebAssembly.instantiate(binary, info);\n        }).then(receiver, function (reason) {\n          err(\"failed to asynchronously prepare wasm: \" + reason);\n          abort(reason);\n        });\n      }\n\n      function instantiateAsync() {\n        if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n          fetch(wasmBinaryFile, {\n            credentials: \"same-origin\"\n          }).then(function (response) {\n            var result = WebAssembly.instantiateStreaming(response, info);\n            return result.then(receiveInstantiatedSource, function (reason) {\n              err(\"wasm streaming compile failed: \" + reason);\n              err(\"falling back to ArrayBuffer instantiation\");\n              instantiateArrayBuffer(receiveInstantiatedSource);\n            });\n          });\n        } else {\n          return instantiateArrayBuffer(receiveInstantiatedSource);\n        }\n      }\n\n      if (Module[\"instantiateWasm\"]) {\n        try {\n          var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n          return exports;\n        } catch (e) {\n          err(\"Module.instantiateWasm callback failed with error: \" + e);\n          return false;\n        }\n      }\n\n      instantiateAsync();\n      return {};\n    }\n\n    var tempDouble;\n    var tempI64;\n\n    __ATINIT__.push({\n      func: function func() {\n        ___wasm_call_ctors();\n      }\n    });\n\n    function demangle(func) {\n      return func;\n    }\n\n    function demangleAll(text) {\n      var regex = /\\b_Z[\\w\\d_]+/g;\n      return text.replace(regex, function (x) {\n        var y = demangle(x);\n        return x === y ? x : y + \" [\" + x + \"]\";\n      });\n    }\n\n    function jsStackTrace() {\n      var err = new Error();\n\n      if (!err.stack) {\n        try {\n          throw new Error();\n        } catch (e) {\n          err = e;\n        }\n\n        if (!err.stack) {\n          return \"(no stack trace available)\";\n        }\n      }\n\n      return err.stack.toString();\n    }\n\n    function stackTrace() {\n      var js = jsStackTrace();\n      if (Module[\"extraStackTrace\"]) js += \"\\n\" + Module[\"extraStackTrace\"]();\n      return demangleAll(js);\n    }\n\n    function ___assert_fail(condition, filename, line, func) {\n      abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"]);\n    }\n\n    function ___cxa_allocate_exception(size) {\n      return _malloc(size);\n    }\n\n    function _atexit(func, arg) {\n      __ATEXIT__.unshift({\n        func: func,\n        arg: arg\n      });\n    }\n\n    var ___exception_infos = {};\n    var ___exception_caught = [];\n\n    function ___exception_addRef(ptr) {\n      if (!ptr) return;\n      var info = ___exception_infos[ptr];\n      info.refcount++;\n    }\n\n    function ___exception_deAdjust(adjusted) {\n      if (!adjusted || ___exception_infos[adjusted]) return adjusted;\n\n      for (var key in ___exception_infos) {\n        var ptr = +key;\n        var adj = ___exception_infos[ptr].adjusted;\n        var len = adj.length;\n\n        for (var i = 0; i < len; i++) {\n          if (adj[i] === adjusted) {\n            return ptr;\n          }\n        }\n      }\n\n      return adjusted;\n    }\n\n    function ___cxa_begin_catch(ptr) {\n      var info = ___exception_infos[ptr];\n\n      if (info && !info.caught) {\n        info.caught = true;\n        __ZSt18uncaught_exceptionv.uncaught_exceptions--;\n      }\n\n      if (info) info.rethrown = false;\n\n      ___exception_caught.push(ptr);\n\n      ___exception_addRef(___exception_deAdjust(ptr));\n\n      return ptr;\n    }\n\n    var ___exception_last = 0;\n\n    function ___cxa_free_exception(ptr) {\n      try {\n        return _free(ptr);\n      } catch (e) {}\n    }\n\n    function ___exception_decRef(ptr) {\n      if (!ptr) return;\n      var info = ___exception_infos[ptr];\n      info.refcount--;\n\n      if (info.refcount === 0 && !info.rethrown) {\n        if (info.destructor) {\n          Module[\"dynCall_ii\"](info.destructor, ptr);\n        }\n\n        delete ___exception_infos[ptr];\n\n        ___cxa_free_exception(ptr);\n      }\n    }\n\n    function ___cxa_end_catch() {\n      _setThrew(0);\n\n      var ptr = ___exception_caught.pop();\n\n      if (ptr) {\n        ___exception_decRef(___exception_deAdjust(ptr));\n\n        ___exception_last = 0;\n      }\n    }\n\n    function ___cxa_find_matching_catch_2() {\n      var thrown = ___exception_last;\n\n      if (!thrown) {\n        return (setTempRet0(0), 0) | 0;\n      }\n\n      var info = ___exception_infos[thrown];\n      var throwntype = info.type;\n\n      if (!throwntype) {\n        return (setTempRet0(0), thrown) | 0;\n      }\n\n      var typeArray = Array.prototype.slice.call(arguments);\n\n      var pointer = ___cxa_is_pointer_type(throwntype);\n\n      var buffer = 2930240;\n      HEAP32[buffer >> 2] = thrown;\n      thrown = buffer;\n\n      for (var i = 0; i < typeArray.length; i++) {\n        if (typeArray[i] && ___cxa_can_catch(typeArray[i], throwntype, thrown)) {\n          thrown = HEAP32[thrown >> 2];\n          info.adjusted.push(thrown);\n          return (setTempRet0(typeArray[i]), thrown) | 0;\n        }\n      }\n\n      thrown = HEAP32[thrown >> 2];\n      return (setTempRet0(throwntype), thrown) | 0;\n    }\n\n    function ___cxa_find_matching_catch_3() {\n      var thrown = ___exception_last;\n\n      if (!thrown) {\n        return (setTempRet0(0), 0) | 0;\n      }\n\n      var info = ___exception_infos[thrown];\n      var throwntype = info.type;\n\n      if (!throwntype) {\n        return (setTempRet0(0), thrown) | 0;\n      }\n\n      var typeArray = Array.prototype.slice.call(arguments);\n\n      var pointer = ___cxa_is_pointer_type(throwntype);\n\n      var buffer = 2930240;\n      HEAP32[buffer >> 2] = thrown;\n      thrown = buffer;\n\n      for (var i = 0; i < typeArray.length; i++) {\n        if (typeArray[i] && ___cxa_can_catch(typeArray[i], throwntype, thrown)) {\n          thrown = HEAP32[thrown >> 2];\n          info.adjusted.push(thrown);\n          return (setTempRet0(typeArray[i]), thrown) | 0;\n        }\n      }\n\n      thrown = HEAP32[thrown >> 2];\n      return (setTempRet0(throwntype), thrown) | 0;\n    }\n\n    function ___cxa_find_matching_catch_4() {\n      var thrown = ___exception_last;\n\n      if (!thrown) {\n        return (setTempRet0(0), 0) | 0;\n      }\n\n      var info = ___exception_infos[thrown];\n      var throwntype = info.type;\n\n      if (!throwntype) {\n        return (setTempRet0(0), thrown) | 0;\n      }\n\n      var typeArray = Array.prototype.slice.call(arguments);\n\n      var pointer = ___cxa_is_pointer_type(throwntype);\n\n      var buffer = 2930240;\n      HEAP32[buffer >> 2] = thrown;\n      thrown = buffer;\n\n      for (var i = 0; i < typeArray.length; i++) {\n        if (typeArray[i] && ___cxa_can_catch(typeArray[i], throwntype, thrown)) {\n          thrown = HEAP32[thrown >> 2];\n          info.adjusted.push(thrown);\n          return (setTempRet0(typeArray[i]), thrown) | 0;\n        }\n      }\n\n      thrown = HEAP32[thrown >> 2];\n      return (setTempRet0(throwntype), thrown) | 0;\n    }\n\n    function ___cxa_rethrow() {\n      var ptr = ___exception_caught.pop();\n\n      ptr = ___exception_deAdjust(ptr);\n\n      if (!___exception_infos[ptr].rethrown) {\n        ___exception_caught.push(ptr);\n\n        ___exception_infos[ptr].rethrown = true;\n      }\n\n      ___exception_last = ptr;\n      throw ptr;\n    }\n\n    function ___cxa_thread_atexit(a0, a1) {\n      return _atexit(a0, a1);\n    }\n\n    function ___cxa_throw(ptr, type, destructor) {\n      ___exception_infos[ptr] = {\n        ptr: ptr,\n        adjusted: [ptr],\n        type: type,\n        destructor: destructor,\n        refcount: 0,\n        caught: false,\n        rethrown: false\n      };\n      ___exception_last = ptr;\n\n      if (!(\"uncaught_exception\" in __ZSt18uncaught_exceptionv)) {\n        __ZSt18uncaught_exceptionv.uncaught_exceptions = 1;\n      } else {\n        __ZSt18uncaught_exceptionv.uncaught_exceptions++;\n      }\n\n      throw ptr;\n    }\n\n    function ___cxa_uncaught_exceptions() {\n      return __ZSt18uncaught_exceptionv.uncaught_exceptions;\n    }\n\n    function setErrNo(value) {\n      HEAP32[___errno_location() >> 2] = value;\n      return value;\n    }\n\n    function ___map_file(pathname, size) {\n      setErrNo(63);\n      return -1;\n    }\n\n    function ___resumeException(ptr) {\n      if (!___exception_last) {\n        ___exception_last = ptr;\n      }\n\n      throw ptr;\n    }\n\n    var PATH = {\n      splitPath: function splitPath(filename) {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: function normalizeArray(parts, allowAboveRoot) {\n        var up = 0;\n\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n\n          if (last === \".\") {\n            parts.splice(i, 1);\n          } else if (last === \"..\") {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift(\"..\");\n          }\n        }\n\n        return parts;\n      },\n      normalize: function normalize(path) {\n        var isAbsolute = path.charAt(0) === \"/\",\n            trailingSlash = path.substr(-1) === \"/\";\n        path = PATH.normalizeArray(path.split(\"/\").filter(function (p) {\n          return !!p;\n        }), !isAbsolute).join(\"/\");\n\n        if (!path && !isAbsolute) {\n          path = \".\";\n        }\n\n        if (path && trailingSlash) {\n          path += \"/\";\n        }\n\n        return (isAbsolute ? \"/\" : \"\") + path;\n      },\n      dirname: function dirname(path) {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n\n        if (!root && !dir) {\n          return \".\";\n        }\n\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n\n        return root + dir;\n      },\n      basename: function basename(path) {\n        if (path === \"/\") return \"/\";\n        var lastSlash = path.lastIndexOf(\"/\");\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      extname: function extname(path) {\n        return PATH.splitPath(path)[3];\n      },\n      join: function join() {\n        var paths = Array.prototype.slice.call(arguments, 0);\n        return PATH.normalize(paths.join(\"/\"));\n      },\n      join2: function join2(l, r) {\n        return PATH.normalize(l + \"/\" + r);\n      }\n    };\n    var PATH_FS = {\n      resolve: function resolve() {\n        var resolvedPath = \"\",\n            resolvedAbsolute = false;\n\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? arguments[i] : FS.cwd();\n\n          if (typeof path !== \"string\") {\n            throw new TypeError(\"Arguments to path.resolve must be strings\");\n          } else if (!path) {\n            return \"\";\n          }\n\n          resolvedPath = path + \"/\" + resolvedPath;\n          resolvedAbsolute = path.charAt(0) === \"/\";\n        }\n\n        resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function (p) {\n          return !!p;\n        }), !resolvedAbsolute).join(\"/\");\n        return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n      },\n      relative: function relative(from, to) {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n\n        function trim(arr) {\n          var start = 0;\n\n          for (; start < arr.length; start++) {\n            if (arr[start] !== \"\") break;\n          }\n\n          var end = arr.length - 1;\n\n          for (; end >= 0; end--) {\n            if (arr[end] !== \"\") break;\n          }\n\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n\n        var fromParts = trim(from.split(\"/\"));\n        var toParts = trim(to.split(\"/\"));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n\n        var outputParts = [];\n\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push(\"..\");\n        }\n\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join(\"/\");\n      }\n    };\n    var TTY = {\n      ttys: [],\n      init: function init() {},\n      shutdown: function shutdown() {},\n      register: function register(dev, ops) {\n        TTY.ttys[dev] = {\n          input: [],\n          output: [],\n          ops: ops\n        };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open: function open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close: function close(stream) {\n          stream.tty.ops.flush(stream.tty);\n        },\n        flush: function flush(stream) {\n          stream.tty.ops.flush(stream.tty);\n        },\n        read: function read(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n\n          var bytesRead = 0;\n\n          for (var i = 0; i < length; i++) {\n            var result;\n\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n\n          return bytesRead;\n        },\n        write: function write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n\n          return i;\n        }\n      },\n      default_tty_ops: {\n        get_char: function get_char(tty) {\n          if (!tty.input.length) {\n            var result = null;\n\n            if (ENVIRONMENT_IS_NODE) {\n              var BUFSIZE = 256;\n              var buf = Buffer.alloc ? Buffer.alloc(BUFSIZE) : new Buffer(BUFSIZE);\n              var bytesRead = 0;\n\n              try {\n                bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);\n              } catch (e) {\n                if (e.toString().indexOf(\"EOF\") != -1) bytesRead = 0;else throw e;\n              }\n\n              if (bytesRead > 0) {\n                result = buf.slice(0, bytesRead).toString(\"utf-8\");\n              } else {\n                result = null;\n              }\n            } else if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n              result = window.prompt(\"Input: \");\n\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            } else if (typeof readline == \"function\") {\n              result = readline();\n\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            }\n\n            if (!result) {\n              return null;\n            }\n\n            tty.input = intArrayFromString(result, true);\n          }\n\n          return tty.input.shift();\n        },\n        put_char: function put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        flush: function flush(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }\n      },\n      default_tty1_ops: {\n        put_char: function put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        flush: function flush(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }\n      }\n    };\n    var MEMFS = {\n      ops_table: null,\n      mount: function mount(_mount) {\n        return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n      },\n      createNode: function createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek\n              }\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync\n              }\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink\n              },\n              stream: {}\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: FS.chrdev_stream_ops\n            }\n          };\n        }\n\n        var node = FS.createNode(parent, name, mode, dev);\n\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n\n        node.timestamp = Date.now();\n\n        if (parent) {\n          parent.contents[name] = node;\n        }\n\n        return node;\n      },\n      getFileDataAsRegularArray: function getFileDataAsRegularArray(node) {\n        if (node.contents && node.contents.subarray) {\n          var arr = [];\n\n          for (var i = 0; i < node.usedBytes; ++i) {\n            arr.push(node.contents[i]);\n          }\n\n          return arr;\n        }\n\n        return node.contents;\n      },\n      getFileDataAsTypedArray: function getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage: function expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n        return;\n      },\n      resizeFileStorage: function resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n          return;\n        }\n\n        if (!node.contents || node.contents.subarray) {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n          }\n\n          node.usedBytes = newSize;\n          return;\n        }\n\n        if (!node.contents) node.contents = [];\n        if (node.contents.length > newSize) node.contents.length = newSize;else while (node.contents.length < newSize) {\n          node.contents.push(0);\n        }\n        node.usedBytes = newSize;\n      },\n      node_ops: {\n        getattr: function getattr(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr: function setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup: function lookup(parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod: function mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename: function rename(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n\n          delete old_node.parent.contents[old_node.name];\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          old_node.parent = new_dir;\n        },\n        unlink: function unlink(parent, name) {\n          delete parent.contents[name];\n        },\n        rmdir: function rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n\n          delete parent.contents[name];\n        },\n        readdir: function readdir(node) {\n          var entries = [\".\", \"..\"];\n\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n\n            entries.push(key);\n          }\n\n          return entries;\n        },\n        symlink: function symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink: function readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n\n          return node.link;\n        }\n      },\n      stream_ops: {\n        read: function read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          }\n\n          return size;\n        },\n        write: function write(stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position);else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek: function llseek(stream, offset, whence) {\n          var position = offset;\n\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n\n          return position;\n        },\n        allocate: function allocate(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },\n        mmap: function mmap(stream, buffer, offset, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n\n          if (!(flags & 2) && contents.buffer === buffer.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n\n            allocated = true;\n            var fromHeap = buffer.buffer == HEAP8.buffer;\n            ptr = _malloc(length);\n\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n\n            (fromHeap ? HEAP8 : buffer).set(contents, ptr);\n          }\n\n          return {\n            ptr: ptr,\n            allocated: allocated\n          };\n        },\n        msync: function msync(stream, buffer, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n\n          if (mmapFlags & 2) {\n            return 0;\n          }\n\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          return 0;\n        }\n      }\n    };\n    var ERRNO_CODES = {\n      EPERM: 63,\n      ENOENT: 44,\n      ESRCH: 71,\n      EINTR: 27,\n      EIO: 29,\n      ENXIO: 60,\n      E2BIG: 1,\n      ENOEXEC: 45,\n      EBADF: 8,\n      ECHILD: 12,\n      EAGAIN: 6,\n      EWOULDBLOCK: 6,\n      ENOMEM: 48,\n      EACCES: 2,\n      EFAULT: 21,\n      ENOTBLK: 105,\n      EBUSY: 10,\n      EEXIST: 20,\n      EXDEV: 75,\n      ENODEV: 43,\n      ENOTDIR: 54,\n      EISDIR: 31,\n      EINVAL: 28,\n      ENFILE: 41,\n      EMFILE: 33,\n      ENOTTY: 59,\n      ETXTBSY: 74,\n      EFBIG: 22,\n      ENOSPC: 51,\n      ESPIPE: 70,\n      EROFS: 69,\n      EMLINK: 34,\n      EPIPE: 64,\n      EDOM: 18,\n      ERANGE: 68,\n      ENOMSG: 49,\n      EIDRM: 24,\n      ECHRNG: 106,\n      EL2NSYNC: 156,\n      EL3HLT: 107,\n      EL3RST: 108,\n      ELNRNG: 109,\n      EUNATCH: 110,\n      ENOCSI: 111,\n      EL2HLT: 112,\n      EDEADLK: 16,\n      ENOLCK: 46,\n      EBADE: 113,\n      EBADR: 114,\n      EXFULL: 115,\n      ENOANO: 104,\n      EBADRQC: 103,\n      EBADSLT: 102,\n      EDEADLOCK: 16,\n      EBFONT: 101,\n      ENOSTR: 100,\n      ENODATA: 116,\n      ETIME: 117,\n      ENOSR: 118,\n      ENONET: 119,\n      ENOPKG: 120,\n      EREMOTE: 121,\n      ENOLINK: 47,\n      EADV: 122,\n      ESRMNT: 123,\n      ECOMM: 124,\n      EPROTO: 65,\n      EMULTIHOP: 36,\n      EDOTDOT: 125,\n      EBADMSG: 9,\n      ENOTUNIQ: 126,\n      EBADFD: 127,\n      EREMCHG: 128,\n      ELIBACC: 129,\n      ELIBBAD: 130,\n      ELIBSCN: 131,\n      ELIBMAX: 132,\n      ELIBEXEC: 133,\n      ENOSYS: 52,\n      ENOTEMPTY: 55,\n      ENAMETOOLONG: 37,\n      ELOOP: 32,\n      EOPNOTSUPP: 138,\n      EPFNOSUPPORT: 139,\n      ECONNRESET: 15,\n      ENOBUFS: 42,\n      EAFNOSUPPORT: 5,\n      EPROTOTYPE: 67,\n      ENOTSOCK: 57,\n      ENOPROTOOPT: 50,\n      ESHUTDOWN: 140,\n      ECONNREFUSED: 14,\n      EADDRINUSE: 3,\n      ECONNABORTED: 13,\n      ENETUNREACH: 40,\n      ENETDOWN: 38,\n      ETIMEDOUT: 73,\n      EHOSTDOWN: 142,\n      EHOSTUNREACH: 23,\n      EINPROGRESS: 26,\n      EALREADY: 7,\n      EDESTADDRREQ: 17,\n      EMSGSIZE: 35,\n      EPROTONOSUPPORT: 66,\n      ESOCKTNOSUPPORT: 137,\n      EADDRNOTAVAIL: 4,\n      ENETRESET: 39,\n      EISCONN: 30,\n      ENOTCONN: 53,\n      ETOOMANYREFS: 141,\n      EUSERS: 136,\n      EDQUOT: 19,\n      ESTALE: 72,\n      ENOTSUP: 138,\n      ENOMEDIUM: 148,\n      EILSEQ: 25,\n      EOVERFLOW: 61,\n      ECANCELED: 11,\n      ENOTRECOVERABLE: 56,\n      EOWNERDEAD: 62,\n      ESTRPIPE: 135\n    };\n    var NODEFS = {\n      isWindows: false,\n      staticInit: function staticInit() {\n        NODEFS.isWindows = !!process.platform.match(/^win/);\n        var flags = process[\"binding\"](\"constants\");\n\n        if (flags[\"fs\"]) {\n          flags = flags[\"fs\"];\n        }\n\n        NODEFS.flagsForNodeMap = {\n          1024: flags[\"O_APPEND\"],\n          64: flags[\"O_CREAT\"],\n          128: flags[\"O_EXCL\"],\n          0: flags[\"O_RDONLY\"],\n          2: flags[\"O_RDWR\"],\n          4096: flags[\"O_SYNC\"],\n          512: flags[\"O_TRUNC\"],\n          1: flags[\"O_WRONLY\"]\n        };\n      },\n      bufferFrom: function bufferFrom(arrayBuffer) {\n        return Buffer[\"alloc\"] ? Buffer.from(arrayBuffer) : new Buffer(arrayBuffer);\n      },\n      convertNodeCode: function convertNodeCode(e) {\n        var code = e.code;\n        return ERRNO_CODES[code];\n      },\n      mount: function mount(_mount2) {\n        return NODEFS.createNode(null, \"/\", NODEFS.getMode(_mount2.opts.root), 0);\n      },\n      createNode: function createNode(parent, name, mode, dev) {\n        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node = FS.createNode(parent, name, mode);\n        node.node_ops = NODEFS.node_ops;\n        node.stream_ops = NODEFS.stream_ops;\n        return node;\n      },\n      getMode: function getMode(path) {\n        var stat;\n\n        try {\n          stat = fs.lstatSync(path);\n\n          if (NODEFS.isWindows) {\n            stat.mode = stat.mode | (stat.mode & 292) >> 2;\n          }\n        } catch (e) {\n          if (!e.code) throw e;\n          throw new FS.ErrnoError(NODEFS.convertNodeCode(e));\n        }\n\n        return stat.mode;\n      },\n      realPath: function realPath(node) {\n        var parts = [];\n\n        while (node.parent !== node) {\n          parts.push(node.name);\n          node = node.parent;\n        }\n\n        parts.push(node.mount.opts.root);\n        parts.reverse();\n        return PATH.join.apply(null, parts);\n      },\n      flagsForNode: function flagsForNode(flags) {\n        flags &= ~2097152;\n        flags &= ~2048;\n        flags &= ~32768;\n        flags &= ~524288;\n        var newFlags = 0;\n\n        for (var k in NODEFS.flagsForNodeMap) {\n          if (flags & k) {\n            newFlags |= NODEFS.flagsForNodeMap[k];\n            flags ^= k;\n          }\n        }\n\n        if (!flags) {\n          return newFlags;\n        } else {\n          throw new FS.ErrnoError(28);\n        }\n      },\n      node_ops: {\n        getattr: function getattr(node) {\n          var path = NODEFS.realPath(node);\n          var stat;\n\n          try {\n            stat = fs.lstatSync(path);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(NODEFS.convertNodeCode(e));\n          }\n\n          if (NODEFS.isWindows && !stat.blksize) {\n            stat.blksize = 4096;\n          }\n\n          if (NODEFS.isWindows && !stat.blocks) {\n            stat.blocks = (stat.size + stat.blksize - 1) / stat.blksize | 0;\n          }\n\n          return {\n            dev: stat.dev,\n            ino: stat.ino,\n            mode: stat.mode,\n            nlink: stat.nlink,\n            uid: stat.uid,\n            gid: stat.gid,\n            rdev: stat.rdev,\n            size: stat.size,\n            atime: stat.atime,\n            mtime: stat.mtime,\n            ctime: stat.ctime,\n            blksize: stat.blksize,\n            blocks: stat.blocks\n          };\n        },\n        setattr: function setattr(node, attr) {\n          var path = NODEFS.realPath(node);\n\n          try {\n            if (attr.mode !== undefined) {\n              fs.chmodSync(path, attr.mode);\n              node.mode = attr.mode;\n            }\n\n            if (attr.timestamp !== undefined) {\n              var date = new Date(attr.timestamp);\n              fs.utimesSync(path, date, date);\n            }\n\n            if (attr.size !== undefined) {\n              fs.truncateSync(path, attr.size);\n            }\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(NODEFS.convertNodeCode(e));\n          }\n        },\n        lookup: function lookup(parent, name) {\n          var path = PATH.join2(NODEFS.realPath(parent), name);\n          var mode = NODEFS.getMode(path);\n          return NODEFS.createNode(parent, name, mode);\n        },\n        mknod: function mknod(parent, name, mode, dev) {\n          var node = NODEFS.createNode(parent, name, mode, dev);\n          var path = NODEFS.realPath(node);\n\n          try {\n            if (FS.isDir(node.mode)) {\n              fs.mkdirSync(path, node.mode);\n            } else {\n              fs.writeFileSync(path, \"\", {\n                mode: node.mode\n              });\n            }\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(NODEFS.convertNodeCode(e));\n          }\n\n          return node;\n        },\n        rename: function rename(oldNode, newDir, newName) {\n          var oldPath = NODEFS.realPath(oldNode);\n          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);\n\n          try {\n            fs.renameSync(oldPath, newPath);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(NODEFS.convertNodeCode(e));\n          }\n\n          oldNode.name = newName;\n        },\n        unlink: function unlink(parent, name) {\n          var path = PATH.join2(NODEFS.realPath(parent), name);\n\n          try {\n            fs.unlinkSync(path);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(NODEFS.convertNodeCode(e));\n          }\n        },\n        rmdir: function rmdir(parent, name) {\n          var path = PATH.join2(NODEFS.realPath(parent), name);\n\n          try {\n            fs.rmdirSync(path);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(NODEFS.convertNodeCode(e));\n          }\n        },\n        readdir: function readdir(node) {\n          var path = NODEFS.realPath(node);\n\n          try {\n            return fs.readdirSync(path);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(NODEFS.convertNodeCode(e));\n          }\n        },\n        symlink: function symlink(parent, newName, oldPath) {\n          var newPath = PATH.join2(NODEFS.realPath(parent), newName);\n\n          try {\n            fs.symlinkSync(oldPath, newPath);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(NODEFS.convertNodeCode(e));\n          }\n        },\n        readlink: function readlink(node) {\n          var path = NODEFS.realPath(node);\n\n          try {\n            path = fs.readlinkSync(path);\n            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);\n            return path;\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(NODEFS.convertNodeCode(e));\n          }\n        }\n      },\n      stream_ops: {\n        open: function open(stream) {\n          var path = NODEFS.realPath(stream.node);\n\n          try {\n            if (FS.isFile(stream.node.mode)) {\n              stream.nfd = fs.openSync(path, NODEFS.flagsForNode(stream.flags));\n            }\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(NODEFS.convertNodeCode(e));\n          }\n        },\n        close: function close(stream) {\n          try {\n            if (FS.isFile(stream.node.mode) && stream.nfd) {\n              fs.closeSync(stream.nfd);\n            }\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(NODEFS.convertNodeCode(e));\n          }\n        },\n        read: function read(stream, buffer, offset, length, position) {\n          if (length === 0) return 0;\n\n          try {\n            return fs.readSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);\n          } catch (e) {\n            throw new FS.ErrnoError(NODEFS.convertNodeCode(e));\n          }\n        },\n        write: function write(stream, buffer, offset, length, position) {\n          try {\n            return fs.writeSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);\n          } catch (e) {\n            throw new FS.ErrnoError(NODEFS.convertNodeCode(e));\n          }\n        },\n        llseek: function llseek(stream, offset, whence) {\n          var position = offset;\n\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              try {\n                var stat = fs.fstatSync(stream.nfd);\n                position += stat.size;\n              } catch (e) {\n                throw new FS.ErrnoError(NODEFS.convertNodeCode(e));\n              }\n            }\n          }\n\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n\n          return position;\n        },\n        mmap: function mmap(stream, buffer, offset, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n\n          var ptr = _malloc(length);\n\n          assert(offset === 0);\n          NODEFS.stream_ops.read(stream, buffer, ptr + offset, length, position);\n          return {\n            ptr: ptr,\n            allocated: true\n          };\n        },\n        msync: function msync(stream, buffer, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n\n          if (mmapFlags & 2) {\n            return 0;\n          }\n\n          var bytesWritten = NODEFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          return 0;\n        }\n      }\n    };\n    var WORKERFS = {\n      DIR_MODE: 16895,\n      FILE_MODE: 33279,\n      reader: null,\n      mount: function mount(_mount3) {\n        assert(ENVIRONMENT_IS_WORKER);\n        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();\n        var root = WORKERFS.createNode(null, \"/\", WORKERFS.DIR_MODE, 0);\n        var createdParents = {};\n\n        function ensureParent(path) {\n          var parts = path.split(\"/\");\n          var parent = root;\n\n          for (var i = 0; i < parts.length - 1; i++) {\n            var curr = parts.slice(0, i + 1).join(\"/\");\n\n            if (!createdParents[curr]) {\n              createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);\n            }\n\n            parent = createdParents[curr];\n          }\n\n          return parent;\n        }\n\n        function base(path) {\n          var parts = path.split(\"/\");\n          return parts[parts.length - 1];\n        }\n\n        Array.prototype.forEach.call(_mount3.opts[\"files\"] || [], function (file) {\n          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);\n        });\n        (_mount3.opts[\"blobs\"] || []).forEach(function (obj) {\n          WORKERFS.createNode(ensureParent(obj[\"name\"]), base(obj[\"name\"]), WORKERFS.FILE_MODE, 0, obj[\"data\"]);\n        });\n        (_mount3.opts[\"packages\"] || []).forEach(function (pack) {\n          pack[\"metadata\"].files.forEach(function (file) {\n            var name = file.filename.substr(1);\n            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack[\"blob\"].slice(file.start, file.end));\n          });\n        });\n        return root;\n      },\n      createNode: function createNode(parent, name, mode, dev, contents, mtime) {\n        var node = FS.createNode(parent, name, mode);\n        node.mode = mode;\n        node.node_ops = WORKERFS.node_ops;\n        node.stream_ops = WORKERFS.stream_ops;\n        node.timestamp = (mtime || new Date()).getTime();\n        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);\n\n        if (mode === WORKERFS.FILE_MODE) {\n          node.size = contents.size;\n          node.contents = contents;\n        } else {\n          node.size = 4096;\n          node.contents = {};\n        }\n\n        if (parent) {\n          parent.contents[name] = node;\n        }\n\n        return node;\n      },\n      node_ops: {\n        getattr: function getattr(node) {\n          return {\n            dev: 1,\n            ino: node.id,\n            mode: node.mode,\n            nlink: 1,\n            uid: 0,\n            gid: 0,\n            rdev: undefined,\n            size: node.size,\n            atime: new Date(node.timestamp),\n            mtime: new Date(node.timestamp),\n            ctime: new Date(node.timestamp),\n            blksize: 4096,\n            blocks: Math.ceil(node.size / 4096)\n          };\n        },\n        setattr: function setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n        },\n        lookup: function lookup(parent, name) {\n          throw new FS.ErrnoError(44);\n        },\n        mknod: function mknod(parent, name, mode, dev) {\n          throw new FS.ErrnoError(63);\n        },\n        rename: function rename(oldNode, newDir, newName) {\n          throw new FS.ErrnoError(63);\n        },\n        unlink: function unlink(parent, name) {\n          throw new FS.ErrnoError(63);\n        },\n        rmdir: function rmdir(parent, name) {\n          throw new FS.ErrnoError(63);\n        },\n        readdir: function readdir(node) {\n          var entries = [\".\", \"..\"];\n\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n\n            entries.push(key);\n          }\n\n          return entries;\n        },\n        symlink: function symlink(parent, newName, oldPath) {\n          throw new FS.ErrnoError(63);\n        },\n        readlink: function readlink(node) {\n          throw new FS.ErrnoError(63);\n        }\n      },\n      stream_ops: {\n        read: function read(stream, buffer, offset, length, position) {\n          if (position >= stream.node.size) return 0;\n          var chunk = stream.node.contents.slice(position, position + length);\n          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);\n          buffer.set(new Uint8Array(ab), offset);\n          return chunk.size;\n        },\n        write: function write(stream, buffer, offset, length, position) {\n          throw new FS.ErrnoError(29);\n        },\n        llseek: function llseek(stream, offset, whence) {\n          var position = offset;\n\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.size;\n            }\n          }\n\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n\n          return position;\n        }\n      }\n    };\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: \"/\",\n      initialized: false,\n      ignorePermissions: true,\n      trackingDelegate: {},\n      tracking: {\n        openFlags: {\n          READ: 1,\n          WRITE: 2\n        }\n      },\n      ErrnoError: null,\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      handleFSError: function handleFSError(e) {\n        if (!(e instanceof FS.ErrnoError)) throw e + \" : \" + stackTrace();\n        return setErrNo(e.errno);\n      },\n      lookupPath: function lookupPath(path, opts) {\n        path = PATH_FS.resolve(FS.cwd(), path);\n        opts = opts || {};\n        if (!path) return {\n          path: \"\",\n          node: null\n        };\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0\n        };\n\n        for (var key in defaults) {\n          if (opts[key] === undefined) {\n            opts[key] = defaults[key];\n          }\n        }\n\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n\n        var parts = PATH.normalizeArray(path.split(\"/\").filter(function (p) {\n          return !!p;\n        }), false);\n        var current = FS.root;\n        var current_path = \"/\";\n\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n\n          if (islast && opts.parent) {\n            break;\n          }\n\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          if (FS.isMountpoint(current)) {\n            if (!islast || islast && opts.follow_mount) {\n              current = current.mounted.root;\n            }\n          }\n\n          if (!islast || opts.follow) {\n            var count = 0;\n\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count\n              });\n              current = lookup.node;\n\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n\n        return {\n          path: current_path,\n          node: current\n        };\n      },\n      getPath: function getPath(node) {\n        var path;\n\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n          }\n\n          path = path ? node.name + \"/\" + path : node.name;\n          node = node.parent;\n        }\n      },\n      hashName: function hashName(parentid, name) {\n        var hash = 0;\n\n        for (var i = 0; i < name.length; i++) {\n          hash = (hash << 5) - hash + name.charCodeAt(i) | 0;\n        }\n\n        return (parentid + hash >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode: function hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode: function hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode: function lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n\n        var hash = FS.hashName(parent.id, name);\n\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n\n        return FS.lookup(parent, name);\n      },\n      createNode: function createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n        FS.hashAddNode(node);\n        return node;\n      },\n      destroyNode: function destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n      isRoot: function isRoot(node) {\n        return node === node.parent;\n      },\n      isMountpoint: function isMountpoint(node) {\n        return !!node.mounted;\n      },\n      isFile: function isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n      isDir: function isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n      isLink: function isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev: function isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev: function isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO: function isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n      isSocket: function isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n      flagModes: {\n        \"r\": 0,\n        \"rs\": 1052672,\n        \"r+\": 2,\n        \"w\": 577,\n        \"wx\": 705,\n        \"xw\": 705,\n        \"w+\": 578,\n        \"wx+\": 706,\n        \"xw+\": 706,\n        \"a\": 1089,\n        \"ax\": 1217,\n        \"xa\": 1217,\n        \"a+\": 1090,\n        \"ax+\": 1218,\n        \"xa+\": 1218\n      },\n      modeStringToFlags: function modeStringToFlags(str) {\n        var flags = FS.flagModes[str];\n\n        if (typeof flags === \"undefined\") {\n          throw new Error(\"Unknown file open mode: \" + str);\n        }\n\n        return flags;\n      },\n      flagsToPermissionString: function flagsToPermissionString(flag) {\n        var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n\n        if (flag & 512) {\n          perms += \"w\";\n        }\n\n        return perms;\n      },\n      nodePermissions: function nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n\n        if (perms.indexOf(\"r\") !== -1 && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.indexOf(\"w\") !== -1 && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.indexOf(\"x\") !== -1 && !(node.mode & 73)) {\n          return 2;\n        }\n\n        return 0;\n      },\n      mayLookup: function mayLookup(dir) {\n        var errCode = FS.nodePermissions(dir, \"x\");\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate: function mayCreate(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n\n        return FS.nodePermissions(dir, \"wx\");\n      },\n      mayDelete: function mayDelete(dir, name, isdir) {\n        var node;\n\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n\n        var errCode = FS.nodePermissions(dir, \"wx\");\n\n        if (errCode) {\n          return errCode;\n        }\n\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n\n        return 0;\n      },\n      mayOpen: function mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n            return 31;\n          }\n        }\n\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd: function nextfd(fd_start, fd_end) {\n        fd_start = fd_start || 0;\n        fd_end = fd_end || FS.MAX_OPEN_FDS;\n\n        for (var fd = fd_start; fd <= fd_end; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n\n        throw new FS.ErrnoError(33);\n      },\n      getStream: function getStream(fd) {\n        return FS.streams[fd];\n      },\n      createStream: function createStream(stream, fd_start, fd_end) {\n        if (!FS.FSStream) {\n          FS.FSStream = function () {};\n\n          FS.FSStream.prototype = {\n            object: {\n              get: function get() {\n                return this.node;\n              },\n              set: function set(val) {\n                this.node = val;\n              }\n            },\n            isRead: {\n              get: function get() {\n                return (this.flags & 2097155) !== 1;\n              }\n            },\n            isWrite: {\n              get: function get() {\n                return (this.flags & 2097155) !== 0;\n              }\n            },\n            isAppend: {\n              get: function get() {\n                return this.flags & 1024;\n              }\n            }\n          };\n        }\n\n        var newStream = new FS.FSStream();\n\n        for (var p in stream) {\n          newStream[p] = stream[p];\n        }\n\n        stream = newStream;\n        var fd = FS.nextfd(fd_start, fd_end);\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream: function closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n      chrdev_stream_ops: {\n        open: function open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },\n        llseek: function llseek() {\n          throw new FS.ErrnoError(70);\n        }\n      },\n      major: function major(dev) {\n        return dev >> 8;\n      },\n      minor: function minor(dev) {\n        return dev & 255;\n      },\n      makedev: function makedev(ma, mi) {\n        return ma << 8 | mi;\n      },\n      registerDevice: function registerDevice(dev, ops) {\n        FS.devices[dev] = {\n          stream_ops: ops\n        };\n      },\n      getDevice: function getDevice(dev) {\n        return FS.devices[dev];\n      },\n      getMounts: function getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n\n        while (check.length) {\n          var m = check.pop();\n          mounts.push(m);\n          check.push.apply(check, m.mounts);\n        }\n\n        return mounts;\n      },\n      syncfs: function syncfs(populate, callback) {\n        if (typeof populate === \"function\") {\n          callback = populate;\n          populate = false;\n        }\n\n        FS.syncFSRequests++;\n\n        if (FS.syncFSRequests > 1) {\n          err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n        }\n\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n\n            return;\n          }\n\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n\n        mounts.forEach(function (mount) {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount: function mount(type, opts, mountpoint) {\n        var root = mountpoint === \"/\";\n        var pseudo = !mountpoint;\n        var node;\n\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, {\n            follow_mount: false\n          });\n          mountpoint = lookup.path;\n          node = lookup.node;\n\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n\n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: []\n        };\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n\n        return mountRoot;\n      },\n      unmount: function unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, {\n          follow_mount: false\n        });\n\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n        Object.keys(FS.nameTable).forEach(function (hash) {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            var next = current.name_next;\n\n            if (mounts.indexOf(current.mount) !== -1) {\n              FS.destroyNode(current);\n            }\n\n            current = next;\n          }\n        });\n        node.mounted = null;\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup: function lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod: function mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n\n        if (!name || name === \".\" || name === \"..\") {\n          throw new FS.ErrnoError(28);\n        }\n\n        var errCode = FS.mayCreate(parent, name);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create: function create(path, mode) {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir: function mkdir(path, mode) {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree: function mkdirTree(path, mode) {\n        var dirs = path.split(\"/\");\n        var d = \"\";\n\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += \"/\" + dirs[i];\n\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev: function mkdev(path, mode, dev) {\n        if (typeof dev === \"undefined\") {\n          dev = mode;\n          mode = 438;\n        }\n\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink: function symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n\n        var lookup = FS.lookupPath(newpath, {\n          parent: true\n        });\n        var parent = lookup.node;\n\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename: function rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        var lookup, old_dir, new_dir;\n\n        try {\n          lookup = FS.lookupPath(old_path, {\n            parent: true\n          });\n          old_dir = lookup.node;\n          lookup = FS.lookupPath(new_path, {\n            parent: true\n          });\n          new_dir = lookup.node;\n        } catch (e) {\n          throw new FS.ErrnoError(10);\n        }\n\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n\n        var old_node = FS.lookupNode(old_dir, old_name);\n        var relative = PATH_FS.relative(old_path, new_dirname);\n\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(28);\n        }\n\n        relative = PATH_FS.relative(new_path, old_dirname);\n\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(55);\n        }\n\n        var new_node;\n\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n\n        if (old_node === new_node) {\n          return;\n        }\n\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n\n        if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n          throw new FS.ErrnoError(10);\n        }\n\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, \"w\");\n\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        try {\n          if (FS.trackingDelegate[\"willMovePath\"]) {\n            FS.trackingDelegate[\"willMovePath\"](old_path, new_path);\n          }\n        } catch (e) {\n          err(\"FS.trackingDelegate['willMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n        }\n\n        FS.hashRemoveNode(old_node);\n\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n\n        try {\n          if (FS.trackingDelegate[\"onMovePath\"]) FS.trackingDelegate[\"onMovePath\"](old_path, new_path);\n        } catch (e) {\n          err(\"FS.trackingDelegate['onMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n        }\n      },\n      rmdir: function rmdir(path) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n\n        try {\n          if (FS.trackingDelegate[\"willDeletePath\"]) {\n            FS.trackingDelegate[\"willDeletePath\"](path);\n          }\n        } catch (e) {\n          err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n        }\n\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n\n        try {\n          if (FS.trackingDelegate[\"onDeletePath\"]) FS.trackingDelegate[\"onDeletePath\"](path);\n        } catch (e) {\n          err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n        }\n      },\n      readdir: function readdir(path) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        var node = lookup.node;\n\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n\n        return node.node_ops.readdir(node);\n      },\n      unlink: function unlink(path) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n\n        try {\n          if (FS.trackingDelegate[\"willDeletePath\"]) {\n            FS.trackingDelegate[\"willDeletePath\"](path);\n          }\n        } catch (e) {\n          err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n        }\n\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n\n        try {\n          if (FS.trackingDelegate[\"onDeletePath\"]) FS.trackingDelegate[\"onDeletePath\"](path);\n        } catch (e) {\n          err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n        }\n      },\n      readlink: function readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n      },\n      stat: function stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, {\n          follow: !dontFollow\n        });\n        var node = lookup.node;\n\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n\n        return node.node_ops.getattr(node);\n      },\n      lstat: function lstat(path) {\n        return FS.stat(path, true);\n      },\n      chmod: function chmod(path, mode, dontFollow) {\n        var node;\n\n        if (typeof path === \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontFollow\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n\n        node.node_ops.setattr(node, {\n          mode: mode & 4095 | node.mode & ~4095,\n          timestamp: Date.now()\n        });\n      },\n      lchmod: function lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n      fchmod: function fchmod(fd, mode) {\n        var stream = FS.getStream(fd);\n\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n\n        FS.chmod(stream.node, mode);\n      },\n      chown: function chown(path, uid, gid, dontFollow) {\n        var node;\n\n        if (typeof path === \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontFollow\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n\n        node.node_ops.setattr(node, {\n          timestamp: Date.now()\n        });\n      },\n      lchown: function lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown: function fchown(fd, uid, gid) {\n        var stream = FS.getStream(fd);\n\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate: function truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node;\n\n        if (typeof path === \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: true\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var errCode = FS.nodePermissions(node, \"w\");\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },\n      ftruncate: function ftruncate(fd, len) {\n        var stream = FS.getStream(fd);\n\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n\n        FS.truncate(stream.node, len);\n      },\n      utime: function utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime)\n        });\n      },\n      open: function open(path, flags, mode, fd_start, fd_end) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n\n        flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n        mode = typeof mode === \"undefined\" ? 438 : mode;\n\n        if (flags & 64) {\n          mode = mode & 4095 | 32768;\n        } else {\n          mode = 0;\n        }\n\n        var node;\n\n        if (_typeof(path) === \"object\") {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072)\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n\n        var created = false;\n\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        if (flags & 512) {\n          FS.truncate(node, 0);\n        }\n\n        flags &= ~(128 | 512 | 131072);\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),\n          flags: flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          ungotten: [],\n          error: false\n        }, fd_start, fd_end);\n\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n\n        if (Module[\"logReadFiles\"] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n            err(\"FS.trackingDelegate error on read file: \" + path);\n          }\n        }\n\n        try {\n          if (FS.trackingDelegate[\"onOpenFile\"]) {\n            var trackingFlags = 0;\n\n            if ((flags & 2097155) !== 1) {\n              trackingFlags |= FS.tracking.openFlags.READ;\n            }\n\n            if ((flags & 2097155) !== 0) {\n              trackingFlags |= FS.tracking.openFlags.WRITE;\n            }\n\n            FS.trackingDelegate[\"onOpenFile\"](path, trackingFlags);\n          }\n        } catch (e) {\n          err(\"FS.trackingDelegate['onOpenFile']('\" + path + \"', flags) threw an exception: \" + e.message);\n        }\n\n        return stream;\n      },\n      close: function close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (stream.getdents) stream.getdents = null;\n\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n\n        stream.fd = null;\n      },\n      isClosed: function isClosed(stream) {\n        return stream.fd === null;\n      },\n      llseek: function llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read: function read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var seeking = typeof position !== \"undefined\";\n\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write: function write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n\n        var seeking = typeof position !== \"undefined\";\n\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n\n        try {\n          if (stream.path && FS.trackingDelegate[\"onWriteToFile\"]) FS.trackingDelegate[\"onWriteToFile\"](stream.path);\n        } catch (e) {\n          err(\"FS.trackingDelegate['onWriteToFile']('\" + stream.path + \"') threw an exception: \" + e.message);\n        }\n\n        return bytesWritten;\n      },\n      allocate: function allocate(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap: function mmap(stream, buffer, offset, length, position, prot, flags) {\n        if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n          throw new FS.ErrnoError(2);\n        }\n\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n\n        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);\n      },\n      msync: function msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream || !stream.stream_ops.msync) {\n          return 0;\n        }\n\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },\n      munmap: function munmap(stream) {\n        return 0;\n      },\n      ioctl: function ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile: function readFile(path, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || \"r\";\n        opts.encoding = opts.encoding || \"binary\";\n\n        if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n\n        if (opts.encoding === \"utf8\") {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === \"binary\") {\n          ret = buf;\n        }\n\n        FS.close(stream);\n        return ret;\n      },\n      writeFile: function writeFile(path, data, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || \"w\";\n        var stream = FS.open(path, opts.flags, opts.mode);\n\n        if (typeof data === \"string\") {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error(\"Unsupported data type\");\n        }\n\n        FS.close(stream);\n      },\n      cwd: function cwd() {\n        return FS.currentPath;\n      },\n      chdir: function chdir(path) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        var errCode = FS.nodePermissions(lookup.node, \"x\");\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories: function createDefaultDirectories() {\n        FS.mkdir(\"/tmp\");\n        FS.mkdir(\"/home\");\n        FS.mkdir(\"/home/web_user\");\n      },\n      createDefaultDevices: function createDefaultDevices() {\n        FS.mkdir(\"/dev\");\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: function read() {\n            return 0;\n          },\n          write: function write(stream, buffer, offset, length, pos) {\n            return length;\n          }\n        });\n        FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n        FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n        var random_device;\n\n        if ((typeof crypto === \"undefined\" ? \"undefined\" : _typeof(crypto)) === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n          var randomBuffer = new Uint8Array(1);\n\n          random_device = function random_device() {\n            crypto.getRandomValues(randomBuffer);\n            return randomBuffer[0];\n          };\n        } else if (ENVIRONMENT_IS_NODE) {\n          try {\n            var crypto_module = require(\"crypto\");\n\n            random_device = function random_device() {\n              return crypto_module[\"randomBytes\"](1)[0];\n            };\n          } catch (e) {}\n        } else {}\n\n        if (!random_device) {\n          random_device = function random_device() {\n            abort(\"random_device\");\n          };\n        }\n\n        FS.createDevice(\"/dev\", \"random\", random_device);\n        FS.createDevice(\"/dev\", \"urandom\", random_device);\n        FS.mkdir(\"/dev/shm\");\n        FS.mkdir(\"/dev/shm/tmp\");\n      },\n      createSpecialDirectories: function createSpecialDirectories() {\n        FS.mkdir(\"/proc\");\n        FS.mkdir(\"/proc/self\");\n        FS.mkdir(\"/proc/self/fd\");\n        FS.mount({\n          mount: function mount() {\n            var node = FS.createNode(\"/proc/self\", \"fd\", 16384 | 511, 73);\n            node.node_ops = {\n              lookup: function lookup(parent, name) {\n                var fd = +name;\n                var stream = FS.getStream(fd);\n                if (!stream) throw new FS.ErrnoError(8);\n                var ret = {\n                  parent: null,\n                  mount: {\n                    mountpoint: \"fake\"\n                  },\n                  node_ops: {\n                    readlink: function readlink() {\n                      return stream.path;\n                    }\n                  }\n                };\n                ret.parent = ret;\n                return ret;\n              }\n            };\n            return node;\n          }\n        }, {}, \"/proc/self/fd\");\n      },\n      createStandardStreams: function createStandardStreams() {\n        if (Module[\"stdin\"]) {\n          FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n        }\n\n        if (Module[\"stdout\"]) {\n          FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n        }\n\n        if (Module[\"stderr\"]) {\n          FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n        } else {\n          FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n        }\n\n        var stdin = FS.open(\"/dev/stdin\", \"r\");\n        var stdout = FS.open(\"/dev/stdout\", \"w\");\n        var stderr = FS.open(\"/dev/stderr\", \"w\");\n      },\n      ensureErrnoError: function ensureErrnoError() {\n        if (FS.ErrnoError) return;\n\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          this.node = node;\n\n          this.setErrno = function (errno) {\n            this.errno = errno;\n          };\n\n          this.setErrno(errno);\n          this.message = \"FS error\";\n        };\n\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n        [44].forEach(function (code) {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = \"<generic error, no stack>\";\n        });\n      },\n      staticInit: function staticInit() {\n        FS.ensureErrnoError();\n        FS.nameTable = new Array(4096);\n        FS.mount(MEMFS, {}, \"/\");\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n        FS.filesystems = {\n          \"MEMFS\": MEMFS,\n          \"NODEFS\": NODEFS,\n          \"WORKERFS\": WORKERFS\n        };\n      },\n      init: function init(input, output, error) {\n        FS.init.initialized = true;\n        FS.ensureErrnoError();\n        Module[\"stdin\"] = input || Module[\"stdin\"];\n        Module[\"stdout\"] = output || Module[\"stdout\"];\n        Module[\"stderr\"] = error || Module[\"stderr\"];\n        FS.createStandardStreams();\n      },\n      quit: function quit() {\n        FS.init.initialized = false;\n        var fflush = Module[\"_fflush\"];\n        if (fflush) fflush(0);\n\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n\n          if (!stream) {\n            continue;\n          }\n\n          FS.close(stream);\n        }\n      },\n      getMode: function getMode(canRead, canWrite) {\n        var mode = 0;\n        if (canRead) mode |= 292 | 73;\n        if (canWrite) mode |= 146;\n        return mode;\n      },\n      joinPath: function joinPath(parts, forceRelative) {\n        var path = PATH.join.apply(null, parts);\n        if (forceRelative && path[0] == \"/\") path = path.substr(1);\n        return path;\n      },\n      absolutePath: function absolutePath(relative, base) {\n        return PATH_FS.resolve(base, relative);\n      },\n      standardizePath: function standardizePath(path) {\n        return PATH.normalize(path);\n      },\n      findObject: function findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n\n        if (ret.exists) {\n          return ret.object;\n        } else {\n          setErrNo(ret.error);\n          return null;\n        }\n      },\n      analyzePath: function analyzePath(path, dontResolveLastLink) {\n        try {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontResolveLastLink\n          });\n          path = lookup.path;\n        } catch (e) {}\n\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null\n        };\n\n        try {\n          var lookup = FS.lookupPath(path, {\n            parent: true\n          });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, {\n            follow: !dontResolveLastLink\n          });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === \"/\";\n        } catch (e) {\n          ret.error = e.errno;\n        }\n\n        return ret;\n      },\n      createFolder: function createFolder(parent, name, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.mkdir(path, mode);\n      },\n      createPath: function createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n        var parts = path.split(\"/\").reverse();\n\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n\n          parent = current;\n        }\n\n        return current;\n      },\n      createFile: function createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile: function createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name) : parent;\n        var mode = FS.getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n\n        if (data) {\n          if (typeof data === \"string\") {\n            var arr = new Array(data.length);\n\n            for (var i = 0, len = data.length; i < len; ++i) {\n              arr[i] = data.charCodeAt(i);\n            }\n\n            data = arr;\n          }\n\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, \"w\");\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n\n        return node;\n      },\n      createDevice: function createDevice(parent, name, input, output) {\n        var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        FS.registerDevice(dev, {\n          open: function open(stream) {\n            stream.seekable = false;\n          },\n          close: function close(stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read: function read(stream, buffer, offset, length, pos) {\n            var bytesRead = 0;\n\n            for (var i = 0; i < length; i++) {\n              var result;\n\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n\n            return bytesRead;\n          },\n          write: function write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n\n            return i;\n          }\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      createLink: function createLink(parent, name, target, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n        return FS.symlink(target, path);\n      },\n      forceLoadFile: function forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n        var success = true;\n\n        if (typeof XMLHttpRequest !== \"undefined\") {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else if (read_) {\n          try {\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            success = false;\n          }\n        } else {\n          throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n        }\n\n        if (!success) setErrNo(29);\n        return success;\n      },\n      createLazyFile: function createLazyFile(parent, name, url, canRead, canWrite) {\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = [];\n        }\n\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length - 1 || idx < 0) {\n            return undefined;\n          }\n\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = idx / this.chunkSize | 0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n          this.getter = getter;\n        };\n\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"HEAD\", url, false);\n          xhr.send(null);\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n          var header;\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n          var chunkSize = 1024 * 1024;\n          if (!hasByteServing) chunkSize = datalength;\n\n          var doXHR = function doXHR(from, to) {\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n            if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n            if (typeof Uint8Array != \"undefined\") xhr.responseType = \"arraybuffer\";\n\n            if (xhr.overrideMimeType) {\n              xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n            }\n\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n\n            if (xhr.response !== undefined) {\n              return new Uint8Array(xhr.response || []);\n            } else {\n              return intArrayFromString(xhr.responseText || \"\", true);\n            }\n          };\n\n          var lazyArray = this;\n          lazyArray.setDataGetter(function (chunkNum) {\n            var start = chunkNum * chunkSize;\n            var end = (chunkNum + 1) * chunkSize - 1;\n            end = Math.min(end, datalength - 1);\n\n            if (typeof lazyArray.chunks[chunkNum] === \"undefined\") {\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\n            }\n\n            if (typeof lazyArray.chunks[chunkNum] === \"undefined\") throw new Error(\"doXHR failed!\");\n            return lazyArray.chunks[chunkNum];\n          });\n\n          if (usesGzip || !datalength) {\n            chunkSize = datalength = 1;\n            datalength = this.getter(0).length;\n            chunkSize = datalength;\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n          }\n\n          this._length = datalength;\n          this._chunkSize = chunkSize;\n          this.lengthKnown = true;\n        };\n\n        if (typeof XMLHttpRequest !== \"undefined\") {\n          if (!ENVIRONMENT_IS_WORKER) throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function get() {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n\n                return this._length;\n              }\n            },\n            chunkSize: {\n              get: function get() {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n\n                return this._chunkSize;\n              }\n            }\n          });\n          var properties = {\n            isDevice: false,\n            contents: lazyArray\n          };\n        } else {\n          var properties = {\n            isDevice: false,\n            url: url\n          };\n        }\n\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function get() {\n              return this.contents.length;\n            }\n          }\n        });\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach(function (key) {\n          var fn = node.stream_ops[key];\n\n          stream_ops[key] = function forceLoadLazyFile() {\n            if (!FS.forceLoadFile(node)) {\n              throw new FS.ErrnoError(29);\n            }\n\n            return fn.apply(null, arguments);\n          };\n        });\n\n        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {\n          if (!FS.forceLoadFile(node)) {\n            throw new FS.ErrnoError(29);\n          }\n\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n\n          return size;\n        };\n\n        node.stream_ops = stream_ops;\n        return node;\n      },\n      createPreloadedFile: function createPreloadedFile(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n        Browser.init();\n        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n        var dep = getUniqueRunDependency(\"cp \" + fullname);\n\n        function processData(byteArray) {\n          function finish(byteArray) {\n            if (preFinish) preFinish();\n\n            if (!dontCreateFile) {\n              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n            }\n\n            if (onload) onload();\n            removeRunDependency(dep);\n          }\n\n          var handled = false;\n          Module[\"preloadPlugins\"].forEach(function (plugin) {\n            if (handled) return;\n\n            if (plugin[\"canHandle\"](fullname)) {\n              plugin[\"handle\"](byteArray, fullname, finish, function () {\n                if (onerror) onerror();\n                removeRunDependency(dep);\n              });\n              handled = true;\n            }\n          });\n          if (!handled) finish(byteArray);\n        }\n\n        addRunDependency(dep);\n\n        if (typeof url == \"string\") {\n          Browser.asyncLoad(url, function (byteArray) {\n            processData(byteArray);\n          }, onerror);\n        } else {\n          processData(url);\n        }\n      },\n      indexedDB: function indexedDB() {\n        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n      },\n      DB_NAME: function DB_NAME() {\n        return \"EM_FS_\" + window.location.pathname;\n      },\n      DB_VERSION: 20,\n      DB_STORE_NAME: \"FILE_DATA\",\n      saveFilesToDB: function saveFilesToDB(paths, onload, onerror) {\n        onload = onload || function () {};\n\n        onerror = onerror || function () {};\n\n        var indexedDB = FS.indexedDB();\n\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n\n        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n          out(\"creating db\");\n          var db = openRequest.result;\n          db.createObjectStore(FS.DB_STORE_NAME);\n        };\n\n        openRequest.onsuccess = function openRequest_onsuccess() {\n          var db = openRequest.result;\n          var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n              fail = 0,\n              total = paths.length;\n\n          function finish() {\n            if (fail == 0) onload();else onerror();\n          }\n\n          paths.forEach(function (path) {\n            var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n\n            putRequest.onsuccess = function putRequest_onsuccess() {\n              ok++;\n              if (ok + fail == total) finish();\n            };\n\n            putRequest.onerror = function putRequest_onerror() {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n\n        openRequest.onerror = onerror;\n      },\n      loadFilesFromDB: function loadFilesFromDB(paths, onload, onerror) {\n        onload = onload || function () {};\n\n        onerror = onerror || function () {};\n\n        var indexedDB = FS.indexedDB();\n\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n\n        openRequest.onupgradeneeded = onerror;\n\n        openRequest.onsuccess = function openRequest_onsuccess() {\n          var db = openRequest.result;\n\n          try {\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n          } catch (e) {\n            onerror(e);\n            return;\n          }\n\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n              fail = 0,\n              total = paths.length;\n\n          function finish() {\n            if (fail == 0) onload();else onerror();\n          }\n\n          paths.forEach(function (path) {\n            var getRequest = files.get(path);\n\n            getRequest.onsuccess = function getRequest_onsuccess() {\n              if (FS.analyzePath(path).exists) {\n                FS.unlink(path);\n              }\n\n              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n              ok++;\n              if (ok + fail == total) finish();\n            };\n\n            getRequest.onerror = function getRequest_onerror() {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n\n        openRequest.onerror = onerror;\n      }\n    };\n    var SYSCALLS = {\n      mappings: {},\n      DEFAULT_POLLMASK: 5,\n      umask: 511,\n      calculateAt: function calculateAt(dirfd, path) {\n        if (path[0] !== \"/\") {\n          var dir;\n\n          if (dirfd === -100) {\n            dir = FS.cwd();\n          } else {\n            var dirstream = FS.getStream(dirfd);\n            if (!dirstream) throw new FS.ErrnoError(8);\n            dir = dirstream.path;\n          }\n\n          path = PATH.join2(dir, path);\n        }\n\n        return path;\n      },\n      doStat: function doStat(func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n            return -54;\n          }\n\n          throw e;\n        }\n\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[buf + 4 >> 2] = 0;\n        HEAP32[buf + 8 >> 2] = stat.ino;\n        HEAP32[buf + 12 >> 2] = stat.mode;\n        HEAP32[buf + 16 >> 2] = stat.nlink;\n        HEAP32[buf + 20 >> 2] = stat.uid;\n        HEAP32[buf + 24 >> 2] = stat.gid;\n        HEAP32[buf + 28 >> 2] = stat.rdev;\n        HEAP32[buf + 32 >> 2] = 0;\n        tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];\n        HEAP32[buf + 48 >> 2] = 4096;\n        HEAP32[buf + 52 >> 2] = stat.blocks;\n        HEAP32[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;\n        HEAP32[buf + 60 >> 2] = 0;\n        HEAP32[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;\n        HEAP32[buf + 68 >> 2] = 0;\n        HEAP32[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;\n        HEAP32[buf + 76 >> 2] = 0;\n        tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >> 2] = tempI64[0], HEAP32[buf + 84 >> 2] = tempI64[1];\n        return 0;\n      },\n      doMsync: function doMsync(addr, stream, len, flags, offset) {\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      doMkdir: function doMkdir(path, mode) {\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === \"/\") path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      },\n      doMknod: function doMknod(path, mode, dev) {\n        switch (mode & 61440) {\n          case 32768:\n          case 8192:\n          case 24576:\n          case 4096:\n          case 49152:\n            break;\n\n          default:\n            return -28;\n        }\n\n        FS.mknod(path, mode, dev);\n        return 0;\n      },\n      doReadlink: function doReadlink(path, buf, bufsize) {\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n        HEAP8[buf + len] = endChar;\n        return len;\n      },\n      doAccess: function doAccess(path, amode) {\n        if (amode & ~7) {\n          return -28;\n        }\n\n        var node;\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        node = lookup.node;\n\n        if (!node) {\n          return -44;\n        }\n\n        var perms = \"\";\n        if (amode & 4) perms += \"r\";\n        if (amode & 2) perms += \"w\";\n        if (amode & 1) perms += \"x\";\n\n        if (perms && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n\n        return 0;\n      },\n      doDup: function doDup(path, flags, suggestFD) {\n        var suggest = FS.getStream(suggestFD);\n        if (suggest) FS.close(suggest);\n        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n      },\n      doReadv: function doReadv(stream, iov, iovcnt, offset) {\n        var ret = 0;\n\n        for (var i = 0; i < iovcnt; i++) {\n          var ptr = HEAP32[iov + i * 8 >> 2];\n          var len = HEAP32[iov + (i * 8 + 4) >> 2];\n          var curr = FS.read(stream, HEAP8, ptr, len, offset);\n          if (curr < 0) return -1;\n          ret += curr;\n          if (curr < len) break;\n        }\n\n        return ret;\n      },\n      doWritev: function doWritev(stream, iov, iovcnt, offset) {\n        var ret = 0;\n\n        for (var i = 0; i < iovcnt; i++) {\n          var ptr = HEAP32[iov + i * 8 >> 2];\n          var len = HEAP32[iov + (i * 8 + 4) >> 2];\n          var curr = FS.write(stream, HEAP8, ptr, len, offset);\n          if (curr < 0) return -1;\n          ret += curr;\n        }\n\n        return ret;\n      },\n      varargs: undefined,\n      get: function get() {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n        return ret;\n      },\n      getStr: function getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n      getStreamFromFD: function getStreamFromFD(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) throw new FS.ErrnoError(8);\n        return stream;\n      },\n      get64: function get64(low, high) {\n        return low;\n      }\n    };\n\n    function ___sys_access(path, amode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doAccess(path, amode);\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_chdir(path) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.chdir(path);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_chmod(path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.chmod(path, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_chown32(path, owner, group) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.chown(path, owner, group);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_fallocate(fd, mode, off_low, off_high, len_low, len_high) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var offset = SYSCALLS.get64(off_low, off_high);\n        var len = SYSCALLS.get64(len_low, len_high);\n        FS.allocate(stream, offset, len);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_fchmod(fd, mode) {\n      try {\n        FS.fchmod(fd, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_fchown32(fd, owner, group) {\n      try {\n        FS.fchown(fd, owner, group);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_fcntl64(fd, cmd, varargs) {\n      SYSCALLS.varargs = varargs;\n\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n\n        switch (cmd) {\n          case 0:\n            {\n              var arg = SYSCALLS.get();\n\n              if (arg < 0) {\n                return -28;\n              }\n\n              var newStream;\n              newStream = FS.open(stream.path, stream.flags, 0, arg);\n              return newStream.fd;\n            }\n\n          case 1:\n          case 2:\n            return 0;\n\n          case 3:\n            return stream.flags;\n\n          case 4:\n            {\n              var arg = SYSCALLS.get();\n              stream.flags |= arg;\n              return 0;\n            }\n\n          case 12:\n            {\n              var arg = SYSCALLS.get();\n              var offset = 0;\n              HEAP16[arg + offset >> 1] = 2;\n              return 0;\n            }\n\n          case 13:\n          case 14:\n            return 0;\n\n          case 16:\n          case 8:\n            return -28;\n\n          case 9:\n            setErrNo(28);\n            return -1;\n\n          default:\n            {\n              return -28;\n            }\n        }\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_fdatasync(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_fstat64(fd, buf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        return SYSCALLS.doStat(FS.stat, stream.path, buf);\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_ftruncate64(fd, zero, low, high) {\n      try {\n        var length = SYSCALLS.get64(low, high);\n        FS.ftruncate(fd, length);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_getcwd(buf, size) {\n      try {\n        if (size === 0) return -28;\n        var cwd = FS.cwd();\n        var cwdLengthInBytes = lengthBytesUTF8(cwd);\n        if (size < cwdLengthInBytes + 1) return -68;\n        stringToUTF8(cwd, buf, size);\n        return buf;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_getdents64(fd, dirp, count) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n\n        if (!stream.getdents) {\n          stream.getdents = FS.readdir(stream.path);\n        }\n\n        var struct_size = 280;\n        var pos = 0;\n        var off = FS.llseek(stream, 0, 1);\n        var idx = Math.floor(off / struct_size);\n\n        while (idx < stream.getdents.length && pos + struct_size <= count) {\n          var id;\n          var type;\n          var name = stream.getdents[idx];\n\n          if (name[0] === \".\") {\n            id = 1;\n            type = 4;\n          } else {\n            var child = FS.lookupNode(stream.node, name);\n            id = child.id;\n            type = FS.isChrdev(child.mode) ? 2 : FS.isDir(child.mode) ? 4 : FS.isLink(child.mode) ? 10 : 8;\n          }\n\n          tempI64 = [id >>> 0, (tempDouble = id, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[dirp + pos >> 2] = tempI64[0], HEAP32[dirp + pos + 4 >> 2] = tempI64[1];\n          tempI64 = [(idx + 1) * struct_size >>> 0, (tempDouble = (idx + 1) * struct_size, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[dirp + pos + 8 >> 2] = tempI64[0], HEAP32[dirp + pos + 12 >> 2] = tempI64[1];\n          HEAP16[dirp + pos + 16 >> 1] = 280;\n          HEAP8[dirp + pos + 18 >> 0] = type;\n          stringToUTF8(name, dirp + pos + 19, 256);\n          pos += struct_size;\n          idx += 1;\n        }\n\n        FS.llseek(stream, idx * struct_size, 0);\n        return pos;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_getegid32() {\n      return 0;\n    }\n\n    function ___sys_geteuid32() {\n      return ___sys_getegid32();\n    }\n\n    function ___sys_getpid() {\n      return 42;\n    }\n\n    function ___sys_ioctl(fd, op, varargs) {\n      SYSCALLS.varargs = varargs;\n\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n\n        switch (op) {\n          case 21509:\n          case 21505:\n            {\n              if (!stream.tty) return -59;\n              return 0;\n            }\n\n          case 21510:\n          case 21511:\n          case 21512:\n          case 21506:\n          case 21507:\n          case 21508:\n            {\n              if (!stream.tty) return -59;\n              return 0;\n            }\n\n          case 21519:\n            {\n              if (!stream.tty) return -59;\n              var argp = SYSCALLS.get();\n              HEAP32[argp >> 2] = 0;\n              return 0;\n            }\n\n          case 21520:\n            {\n              if (!stream.tty) return -59;\n              return -28;\n            }\n\n          case 21531:\n            {\n              var argp = SYSCALLS.get();\n              return FS.ioctl(stream, op, argp);\n            }\n\n          case 21523:\n            {\n              if (!stream.tty) return -59;\n              return 0;\n            }\n\n          case 21524:\n            {\n              if (!stream.tty) return -59;\n              return 0;\n            }\n\n          default:\n            abort(\"bad ioctl syscall \" + op);\n        }\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_lstat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.lstat, path, buf);\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_mkdir(path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doMkdir(path, mode);\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function syscallMmap2(addr, len, prot, flags, fd, off) {\n      off <<= 12;\n      var ptr;\n      var allocated = false;\n\n      if ((flags & 16) !== 0 && addr % 16384 !== 0) {\n        return -28;\n      }\n\n      if ((flags & 32) !== 0) {\n        ptr = _memalign(16384, len);\n        if (!ptr) return -48;\n\n        _memset(ptr, 0, len);\n\n        allocated = true;\n      } else {\n        var info = FS.getStream(fd);\n        if (!info) return -8;\n        var res = FS.mmap(info, HEAPU8, addr, len, off, prot, flags);\n        ptr = res.ptr;\n        allocated = res.allocated;\n      }\n\n      SYSCALLS.mappings[ptr] = {\n        malloc: ptr,\n        len: len,\n        allocated: allocated,\n        fd: fd,\n        prot: prot,\n        flags: flags,\n        offset: off\n      };\n      return ptr;\n    }\n\n    function ___sys_mmap2(addr, len, prot, flags, fd, off) {\n      try {\n        return syscallMmap2(addr, len, prot, flags, fd, off);\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function syscallMunmap(addr, len) {\n      if ((addr | 0) === -1 || len === 0) {\n        return -28;\n      }\n\n      var info = SYSCALLS.mappings[addr];\n      if (!info) return 0;\n\n      if (len === info.len) {\n        var stream = FS.getStream(info.fd);\n\n        if (info.prot & 2) {\n          SYSCALLS.doMsync(addr, stream, len, info.flags, info.offset);\n        }\n\n        FS.munmap(stream);\n        SYSCALLS.mappings[addr] = null;\n\n        if (info.allocated) {\n          _free(info.malloc);\n        }\n      }\n\n      return 0;\n    }\n\n    function ___sys_munmap(addr, len) {\n      try {\n        return syscallMunmap(addr, len);\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_open(path, flags, varargs) {\n      SYSCALLS.varargs = varargs;\n\n      try {\n        var pathname = SYSCALLS.getStr(path);\n        var mode = SYSCALLS.get();\n        var stream = FS.open(pathname, flags, mode);\n        return stream.fd;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    var PIPEFS = {\n      BUCKET_BUFFER_SIZE: 8192,\n      mount: function mount(_mount4) {\n        return FS.createNode(null, \"/\", 16384 | 511, 0);\n      },\n      createPipe: function createPipe() {\n        var pipe = {\n          buckets: []\n        };\n        pipe.buckets.push({\n          buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n          offset: 0,\n          roffset: 0\n        });\n        var rName = PIPEFS.nextname();\n        var wName = PIPEFS.nextname();\n        var rNode = FS.createNode(PIPEFS.root, rName, 4096, 0);\n        var wNode = FS.createNode(PIPEFS.root, wName, 4096, 0);\n        rNode.pipe = pipe;\n        wNode.pipe = pipe;\n        var readableStream = FS.createStream({\n          path: rName,\n          node: rNode,\n          flags: FS.modeStringToFlags(\"r\"),\n          seekable: false,\n          stream_ops: PIPEFS.stream_ops\n        });\n        rNode.stream = readableStream;\n        var writableStream = FS.createStream({\n          path: wName,\n          node: wNode,\n          flags: FS.modeStringToFlags(\"w\"),\n          seekable: false,\n          stream_ops: PIPEFS.stream_ops\n        });\n        wNode.stream = writableStream;\n        return {\n          readable_fd: readableStream.fd,\n          writable_fd: writableStream.fd\n        };\n      },\n      stream_ops: {\n        poll: function poll(stream) {\n          var pipe = stream.node.pipe;\n\n          if ((stream.flags & 2097155) === 1) {\n            return 256 | 4;\n          } else {\n            if (pipe.buckets.length > 0) {\n              for (var i = 0; i < pipe.buckets.length; i++) {\n                var bucket = pipe.buckets[i];\n\n                if (bucket.offset - bucket.roffset > 0) {\n                  return 64 | 1;\n                }\n              }\n            }\n          }\n\n          return 0;\n        },\n        ioctl: function ioctl(stream, request, varargs) {\n          return ERRNO_CODES.EINVAL;\n        },\n        fsync: function fsync(stream) {\n          return ERRNO_CODES.EINVAL;\n        },\n        read: function read(stream, buffer, offset, length, position) {\n          var pipe = stream.node.pipe;\n          var currentLength = 0;\n\n          for (var i = 0; i < pipe.buckets.length; i++) {\n            var bucket = pipe.buckets[i];\n            currentLength += bucket.offset - bucket.roffset;\n          }\n\n          assert(buffer instanceof ArrayBuffer || ArrayBuffer.isView(buffer));\n          var data = buffer.subarray(offset, offset + length);\n\n          if (length <= 0) {\n            return 0;\n          }\n\n          if (currentLength == 0) {\n            throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);\n          }\n\n          var toRead = Math.min(currentLength, length);\n          var totalRead = toRead;\n          var toRemove = 0;\n\n          for (var i = 0; i < pipe.buckets.length; i++) {\n            var currBucket = pipe.buckets[i];\n            var bucketSize = currBucket.offset - currBucket.roffset;\n\n            if (toRead <= bucketSize) {\n              var tmpSlice = currBucket.buffer.subarray(currBucket.roffset, currBucket.offset);\n\n              if (toRead < bucketSize) {\n                tmpSlice = tmpSlice.subarray(0, toRead);\n                currBucket.roffset += toRead;\n              } else {\n                toRemove++;\n              }\n\n              data.set(tmpSlice);\n              break;\n            } else {\n              var tmpSlice = currBucket.buffer.subarray(currBucket.roffset, currBucket.offset);\n              data.set(tmpSlice);\n              data = data.subarray(tmpSlice.byteLength);\n              toRead -= tmpSlice.byteLength;\n              toRemove++;\n            }\n          }\n\n          if (toRemove && toRemove == pipe.buckets.length) {\n            toRemove--;\n            pipe.buckets[toRemove].offset = 0;\n            pipe.buckets[toRemove].roffset = 0;\n          }\n\n          pipe.buckets.splice(0, toRemove);\n          return totalRead;\n        },\n        write: function write(stream, buffer, offset, length, position) {\n          var pipe = stream.node.pipe;\n          assert(buffer instanceof ArrayBuffer || ArrayBuffer.isView(buffer));\n          var data = buffer.subarray(offset, offset + length);\n          var dataLen = data.byteLength;\n\n          if (dataLen <= 0) {\n            return 0;\n          }\n\n          var currBucket = null;\n\n          if (pipe.buckets.length == 0) {\n            currBucket = {\n              buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n              offset: 0,\n              roffset: 0\n            };\n            pipe.buckets.push(currBucket);\n          } else {\n            currBucket = pipe.buckets[pipe.buckets.length - 1];\n          }\n\n          assert(currBucket.offset <= PIPEFS.BUCKET_BUFFER_SIZE);\n          var freeBytesInCurrBuffer = PIPEFS.BUCKET_BUFFER_SIZE - currBucket.offset;\n\n          if (freeBytesInCurrBuffer >= dataLen) {\n            currBucket.buffer.set(data, currBucket.offset);\n            currBucket.offset += dataLen;\n            return dataLen;\n          } else if (freeBytesInCurrBuffer > 0) {\n            currBucket.buffer.set(data.subarray(0, freeBytesInCurrBuffer), currBucket.offset);\n            currBucket.offset += freeBytesInCurrBuffer;\n            data = data.subarray(freeBytesInCurrBuffer, data.byteLength);\n          }\n\n          var numBuckets = data.byteLength / PIPEFS.BUCKET_BUFFER_SIZE | 0;\n          var remElements = data.byteLength % PIPEFS.BUCKET_BUFFER_SIZE;\n\n          for (var i = 0; i < numBuckets; i++) {\n            var newBucket = {\n              buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n              offset: PIPEFS.BUCKET_BUFFER_SIZE,\n              roffset: 0\n            };\n            pipe.buckets.push(newBucket);\n            newBucket.buffer.set(data.subarray(0, PIPEFS.BUCKET_BUFFER_SIZE));\n            data = data.subarray(PIPEFS.BUCKET_BUFFER_SIZE, data.byteLength);\n          }\n\n          if (remElements > 0) {\n            var newBucket = {\n              buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n              offset: data.byteLength,\n              roffset: 0\n            };\n            pipe.buckets.push(newBucket);\n            newBucket.buffer.set(data);\n          }\n\n          return dataLen;\n        },\n        close: function close(stream) {\n          var pipe = stream.node.pipe;\n          pipe.buckets = null;\n        }\n      },\n      nextname: function nextname() {\n        if (!PIPEFS.nextname.current) {\n          PIPEFS.nextname.current = 0;\n        }\n\n        return \"pipe[\" + PIPEFS.nextname.current++ + \"]\";\n      }\n    };\n\n    function ___sys_pipe(fdPtr) {\n      try {\n        if (fdPtr == 0) {\n          throw new FS.ErrnoError(21);\n        }\n\n        var res = PIPEFS.createPipe();\n        HEAP32[fdPtr >> 2] = res.readable_fd;\n        HEAP32[fdPtr + 4 >> 2] = res.writable_fd;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_prlimit64(pid, resource, new_limit, old_limit) {\n      try {\n        if (old_limit) {\n          HEAP32[old_limit >> 2] = -1;\n          HEAP32[old_limit + 4 >> 2] = -1;\n          HEAP32[old_limit + 8 >> 2] = -1;\n          HEAP32[old_limit + 12 >> 2] = -1;\n        }\n\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_read(fd, buf, count) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        return FS.read(stream, HEAP8, buf, count);\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_readlink(path, buf, bufsize) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doReadlink(path, buf, bufsize);\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_rename(old_path, new_path) {\n      try {\n        old_path = SYSCALLS.getStr(old_path);\n        new_path = SYSCALLS.getStr(new_path);\n        FS.rename(old_path, new_path);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_rmdir(path) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.rmdir(path);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    var SOCKFS = {\n      mount: function mount(_mount5) {\n        Module[\"websocket\"] = Module[\"websocket\"] && \"object\" === _typeof(Module[\"websocket\"]) ? Module[\"websocket\"] : {};\n        Module[\"websocket\"]._callbacks = {};\n\n        Module[\"websocket\"][\"on\"] = function (event, callback) {\n          if (\"function\" === typeof callback) {\n            this._callbacks[event] = callback;\n          }\n\n          return this;\n        };\n\n        Module[\"websocket\"].emit = function (event, param) {\n          if (\"function\" === typeof this._callbacks[event]) {\n            this._callbacks[event].call(this, param);\n          }\n        };\n\n        return FS.createNode(null, \"/\", 16384 | 511, 0);\n      },\n      createSocket: function createSocket(family, type, protocol) {\n        var streaming = type == 1;\n\n        if (protocol) {\n          assert(streaming == (protocol == 6));\n        }\n\n        var sock = {\n          family: family,\n          type: type,\n          protocol: protocol,\n          server: null,\n          error: null,\n          peers: {},\n          pending: [],\n          recv_queue: [],\n          sock_ops: SOCKFS.websocket_sock_ops\n        };\n        var name = SOCKFS.nextname();\n        var node = FS.createNode(SOCKFS.root, name, 49152, 0);\n        node.sock = sock;\n        var stream = FS.createStream({\n          path: name,\n          node: node,\n          flags: FS.modeStringToFlags(\"r+\"),\n          seekable: false,\n          stream_ops: SOCKFS.stream_ops\n        });\n        sock.stream = stream;\n        return sock;\n      },\n      getSocket: function getSocket(fd) {\n        var stream = FS.getStream(fd);\n\n        if (!stream || !FS.isSocket(stream.node.mode)) {\n          return null;\n        }\n\n        return stream.node.sock;\n      },\n      stream_ops: {\n        poll: function poll(stream) {\n          var sock = stream.node.sock;\n          return sock.sock_ops.poll(sock);\n        },\n        ioctl: function ioctl(stream, request, varargs) {\n          var sock = stream.node.sock;\n          return sock.sock_ops.ioctl(sock, request, varargs);\n        },\n        read: function read(stream, buffer, offset, length, position) {\n          var sock = stream.node.sock;\n          var msg = sock.sock_ops.recvmsg(sock, length);\n\n          if (!msg) {\n            return 0;\n          }\n\n          buffer.set(msg.buffer, offset);\n          return msg.buffer.length;\n        },\n        write: function write(stream, buffer, offset, length, position) {\n          var sock = stream.node.sock;\n          return sock.sock_ops.sendmsg(sock, buffer, offset, length);\n        },\n        close: function close(stream) {\n          var sock = stream.node.sock;\n          sock.sock_ops.close(sock);\n        }\n      },\n      nextname: function nextname() {\n        if (!SOCKFS.nextname.current) {\n          SOCKFS.nextname.current = 0;\n        }\n\n        return \"socket[\" + SOCKFS.nextname.current++ + \"]\";\n      },\n      websocket_sock_ops: {\n        createPeer: function createPeer(sock, addr, port) {\n          var ws;\n\n          if (_typeof(addr) === \"object\") {\n            ws = addr;\n            addr = null;\n            port = null;\n          }\n\n          if (ws) {\n            if (ws._socket) {\n              addr = ws._socket.remoteAddress;\n              port = ws._socket.remotePort;\n            } else {\n              var result = /ws[s]?:\\/\\/([^:]+):(\\d+)/.exec(ws.url);\n\n              if (!result) {\n                throw new Error(\"WebSocket URL must be in the format ws(s)://address:port\");\n              }\n\n              addr = result[1];\n              port = parseInt(result[2], 10);\n            }\n          } else {\n            try {\n              var runtimeConfig = Module[\"websocket\"] && \"object\" === _typeof(Module[\"websocket\"]);\n\n              var url = \"ws:#\".replace(\"#\", \"//\");\n\n              if (runtimeConfig) {\n                if (\"string\" === typeof Module[\"websocket\"][\"url\"]) {\n                  url = Module[\"websocket\"][\"url\"];\n                }\n              }\n\n              if (url === \"ws://\" || url === \"wss://\") {\n                var parts = addr.split(\"/\");\n                url = url + parts[0] + \":\" + port + \"/\" + parts.slice(1).join(\"/\");\n              }\n\n              var subProtocols = \"binary\";\n\n              if (runtimeConfig) {\n                if (\"string\" === typeof Module[\"websocket\"][\"subprotocol\"]) {\n                  subProtocols = Module[\"websocket\"][\"subprotocol\"];\n                }\n              }\n\n              var opts = undefined;\n\n              if (subProtocols !== \"null\") {\n                subProtocols = subProtocols.replace(/^ +| +$/g, \"\").split(/ *, */);\n                opts = ENVIRONMENT_IS_NODE ? {\n                  \"protocol\": subProtocols.toString()\n                } : subProtocols;\n              }\n\n              if (runtimeConfig && null === Module[\"websocket\"][\"subprotocol\"]) {\n                subProtocols = \"null\";\n                opts = undefined;\n              }\n\n              var WebSocketConstructor;\n\n              if (ENVIRONMENT_IS_NODE) {\n                WebSocketConstructor = require(\"ws\");\n              } else {\n                WebSocketConstructor = WebSocket;\n              }\n\n              ws = new WebSocketConstructor(url, opts);\n              ws.binaryType = \"arraybuffer\";\n            } catch (e) {\n              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);\n            }\n          }\n\n          var peer = {\n            addr: addr,\n            port: port,\n            socket: ws,\n            dgram_send_queue: []\n          };\n          SOCKFS.websocket_sock_ops.addPeer(sock, peer);\n          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);\n\n          if (sock.type === 2 && typeof sock.sport !== \"undefined\") {\n            peer.dgram_send_queue.push(new Uint8Array([255, 255, 255, 255, \"p\".charCodeAt(0), \"o\".charCodeAt(0), \"r\".charCodeAt(0), \"t\".charCodeAt(0), (sock.sport & 65280) >> 8, sock.sport & 255]));\n          }\n\n          return peer;\n        },\n        getPeer: function getPeer(sock, addr, port) {\n          return sock.peers[addr + \":\" + port];\n        },\n        addPeer: function addPeer(sock, peer) {\n          sock.peers[peer.addr + \":\" + peer.port] = peer;\n        },\n        removePeer: function removePeer(sock, peer) {\n          delete sock.peers[peer.addr + \":\" + peer.port];\n        },\n        handlePeerEvents: function handlePeerEvents(sock, peer) {\n          var first = true;\n\n          var handleOpen = function handleOpen() {\n            Module[\"websocket\"].emit(\"open\", sock.stream.fd);\n\n            try {\n              var queued = peer.dgram_send_queue.shift();\n\n              while (queued) {\n                peer.socket.send(queued);\n                queued = peer.dgram_send_queue.shift();\n              }\n            } catch (e) {\n              peer.socket.close();\n            }\n          };\n\n          function handleMessage(data) {\n            if (typeof data === \"string\") {\n              var encoder = new TextEncoder();\n              data = encoder.encode(data);\n            } else {\n              assert(data.byteLength !== undefined);\n\n              if (data.byteLength == 0) {\n                return;\n              } else {\n                data = new Uint8Array(data);\n              }\n            }\n\n            var wasfirst = first;\n            first = false;\n\n            if (wasfirst && data.length === 10 && data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 && data[4] === \"p\".charCodeAt(0) && data[5] === \"o\".charCodeAt(0) && data[6] === \"r\".charCodeAt(0) && data[7] === \"t\".charCodeAt(0)) {\n              var newport = data[8] << 8 | data[9];\n              SOCKFS.websocket_sock_ops.removePeer(sock, peer);\n              peer.port = newport;\n              SOCKFS.websocket_sock_ops.addPeer(sock, peer);\n              return;\n            }\n\n            sock.recv_queue.push({\n              addr: peer.addr,\n              port: peer.port,\n              data: data\n            });\n            Module[\"websocket\"].emit(\"message\", sock.stream.fd);\n          }\n\n          if (ENVIRONMENT_IS_NODE) {\n            peer.socket.on(\"open\", handleOpen);\n            peer.socket.on(\"message\", function (data, flags) {\n              if (!flags.binary) {\n                return;\n              }\n\n              handleMessage(new Uint8Array(data).buffer);\n            });\n            peer.socket.on(\"close\", function () {\n              Module[\"websocket\"].emit(\"close\", sock.stream.fd);\n            });\n            peer.socket.on(\"error\", function (error) {\n              sock.error = ERRNO_CODES.ECONNREFUSED;\n              Module[\"websocket\"].emit(\"error\", [sock.stream.fd, sock.error, \"ECONNREFUSED: Connection refused\"]);\n            });\n          } else {\n            peer.socket.onopen = handleOpen;\n\n            peer.socket.onclose = function () {\n              Module[\"websocket\"].emit(\"close\", sock.stream.fd);\n            };\n\n            peer.socket.onmessage = function peer_socket_onmessage(event) {\n              handleMessage(event.data);\n            };\n\n            peer.socket.onerror = function (error) {\n              sock.error = ERRNO_CODES.ECONNREFUSED;\n              Module[\"websocket\"].emit(\"error\", [sock.stream.fd, sock.error, \"ECONNREFUSED: Connection refused\"]);\n            };\n          }\n        },\n        poll: function poll(sock) {\n          if (sock.type === 1 && sock.server) {\n            return sock.pending.length ? 64 | 1 : 0;\n          }\n\n          var mask = 0;\n          var dest = sock.type === 1 ? SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) : null;\n\n          if (sock.recv_queue.length || !dest || dest && dest.socket.readyState === dest.socket.CLOSING || dest && dest.socket.readyState === dest.socket.CLOSED) {\n            mask |= 64 | 1;\n          }\n\n          if (!dest || dest && dest.socket.readyState === dest.socket.OPEN) {\n            mask |= 4;\n          }\n\n          if (dest && dest.socket.readyState === dest.socket.CLOSING || dest && dest.socket.readyState === dest.socket.CLOSED) {\n            mask |= 16;\n          }\n\n          return mask;\n        },\n        ioctl: function ioctl(sock, request, arg) {\n          switch (request) {\n            case 21531:\n              var bytes = 0;\n\n              if (sock.recv_queue.length) {\n                bytes = sock.recv_queue[0].data.length;\n              }\n\n              HEAP32[arg >> 2] = bytes;\n              return 0;\n\n            default:\n              return ERRNO_CODES.EINVAL;\n          }\n        },\n        close: function close(sock) {\n          if (sock.server) {\n            try {\n              sock.server.close();\n            } catch (e) {}\n\n            sock.server = null;\n          }\n\n          var peers = Object.keys(sock.peers);\n\n          for (var i = 0; i < peers.length; i++) {\n            var peer = sock.peers[peers[i]];\n\n            try {\n              peer.socket.close();\n            } catch (e) {}\n\n            SOCKFS.websocket_sock_ops.removePeer(sock, peer);\n          }\n\n          return 0;\n        },\n        bind: function bind(sock, addr, port) {\n          if (typeof sock.saddr !== \"undefined\" || typeof sock.sport !== \"undefined\") {\n            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n          }\n\n          sock.saddr = addr;\n          sock.sport = port;\n\n          if (sock.type === 2) {\n            if (sock.server) {\n              sock.server.close();\n              sock.server = null;\n            }\n\n            try {\n              sock.sock_ops.listen(sock, 0);\n            } catch (e) {\n              if (!(e instanceof FS.ErrnoError)) throw e;\n              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;\n            }\n          }\n        },\n        connect: function connect(sock, addr, port) {\n          if (sock.server) {\n            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);\n          }\n\n          if (typeof sock.daddr !== \"undefined\" && typeof sock.dport !== \"undefined\") {\n            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);\n\n            if (dest) {\n              if (dest.socket.readyState === dest.socket.CONNECTING) {\n                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);\n              } else {\n                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);\n              }\n            }\n          }\n\n          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);\n          sock.daddr = peer.addr;\n          sock.dport = peer.port;\n          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);\n        },\n        listen: function listen(sock, backlog) {\n          if (!ENVIRONMENT_IS_NODE) {\n            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);\n          }\n\n          if (sock.server) {\n            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n          }\n\n          var WebSocketServer = require(\"ws\").Server;\n\n          var host = sock.saddr;\n          sock.server = new WebSocketServer({\n            host: host,\n            port: sock.sport\n          });\n          Module[\"websocket\"].emit(\"listen\", sock.stream.fd);\n          sock.server.on(\"connection\", function (ws) {\n            if (sock.type === 1) {\n              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);\n              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);\n              newsock.daddr = peer.addr;\n              newsock.dport = peer.port;\n              sock.pending.push(newsock);\n              Module[\"websocket\"].emit(\"connection\", newsock.stream.fd);\n            } else {\n              SOCKFS.websocket_sock_ops.createPeer(sock, ws);\n              Module[\"websocket\"].emit(\"connection\", sock.stream.fd);\n            }\n          });\n          sock.server.on(\"closed\", function () {\n            Module[\"websocket\"].emit(\"close\", sock.stream.fd);\n            sock.server = null;\n          });\n          sock.server.on(\"error\", function (error) {\n            sock.error = ERRNO_CODES.EHOSTUNREACH;\n            Module[\"websocket\"].emit(\"error\", [sock.stream.fd, sock.error, \"EHOSTUNREACH: Host is unreachable\"]);\n          });\n        },\n        accept: function accept(listensock) {\n          if (!listensock.server) {\n            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n          }\n\n          var newsock = listensock.pending.shift();\n          newsock.stream.flags = listensock.stream.flags;\n          return newsock;\n        },\n        getname: function getname(sock, peer) {\n          var addr, port;\n\n          if (peer) {\n            if (sock.daddr === undefined || sock.dport === undefined) {\n              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);\n            }\n\n            addr = sock.daddr;\n            port = sock.dport;\n          } else {\n            addr = sock.saddr || 0;\n            port = sock.sport || 0;\n          }\n\n          return {\n            addr: addr,\n            port: port\n          };\n        },\n        sendmsg: function sendmsg(sock, buffer, offset, length, addr, port) {\n          if (sock.type === 2) {\n            if (addr === undefined || port === undefined) {\n              addr = sock.daddr;\n              port = sock.dport;\n            }\n\n            if (addr === undefined || port === undefined) {\n              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);\n            }\n          } else {\n            addr = sock.daddr;\n            port = sock.dport;\n          }\n\n          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);\n\n          if (sock.type === 1) {\n            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {\n              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);\n            } else if (dest.socket.readyState === dest.socket.CONNECTING) {\n              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);\n            }\n          }\n\n          if (ArrayBuffer.isView(buffer)) {\n            offset += buffer.byteOffset;\n            buffer = buffer.buffer;\n          }\n\n          var data;\n          data = buffer.slice(offset, offset + length);\n\n          if (sock.type === 2) {\n            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {\n              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {\n                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);\n              }\n\n              dest.dgram_send_queue.push(data);\n              return length;\n            }\n          }\n\n          try {\n            dest.socket.send(data);\n            return length;\n          } catch (e) {\n            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n          }\n        },\n        recvmsg: function recvmsg(sock, length) {\n          if (sock.type === 1 && sock.server) {\n            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);\n          }\n\n          var queued = sock.recv_queue.shift();\n\n          if (!queued) {\n            if (sock.type === 1) {\n              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);\n\n              if (!dest) {\n                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);\n              } else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {\n                return null;\n              } else {\n                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);\n              }\n            } else {\n              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);\n            }\n          }\n\n          var queuedLength = queued.data.byteLength || queued.data.length;\n          var queuedOffset = queued.data.byteOffset || 0;\n          var queuedBuffer = queued.data.buffer || queued.data;\n          var bytesRead = Math.min(length, queuedLength);\n          var res = {\n            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),\n            addr: queued.addr,\n            port: queued.port\n          };\n\n          if (sock.type === 1 && bytesRead < queuedLength) {\n            var bytesRemaining = queuedLength - bytesRead;\n            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);\n            sock.recv_queue.unshift(queued);\n          }\n\n          return res;\n        }\n      }\n    };\n\n    function __inet_pton4_raw(str) {\n      var b = str.split(\".\");\n\n      for (var i = 0; i < 4; i++) {\n        var tmp = Number(b[i]);\n        if (isNaN(tmp)) return null;\n        b[i] = tmp;\n      }\n\n      return (b[0] | b[1] << 8 | b[2] << 16 | b[3] << 24) >>> 0;\n    }\n\n    function jstoi_q(str) {\n      return parseInt(str);\n    }\n\n    function __inet_pton6_raw(str) {\n      var words;\n      var w, offset, z;\n      var valid6regx = /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i;\n      var parts = [];\n\n      if (!valid6regx.test(str)) {\n        return null;\n      }\n\n      if (str === \"::\") {\n        return [0, 0, 0, 0, 0, 0, 0, 0];\n      }\n\n      if (str.indexOf(\"::\") === 0) {\n        str = str.replace(\"::\", \"Z:\");\n      } else {\n        str = str.replace(\"::\", \":Z:\");\n      }\n\n      if (str.indexOf(\".\") > 0) {\n        str = str.replace(new RegExp(\"[.]\", \"g\"), \":\");\n        words = str.split(\":\");\n        words[words.length - 4] = jstoi_q(words[words.length - 4]) + jstoi_q(words[words.length - 3]) * 256;\n        words[words.length - 3] = jstoi_q(words[words.length - 2]) + jstoi_q(words[words.length - 1]) * 256;\n        words = words.slice(0, words.length - 2);\n      } else {\n        words = str.split(\":\");\n      }\n\n      offset = 0;\n      z = 0;\n\n      for (w = 0; w < words.length; w++) {\n        if (typeof words[w] === \"string\") {\n          if (words[w] === \"Z\") {\n            for (z = 0; z < 8 - words.length + 1; z++) {\n              parts[w + z] = 0;\n            }\n\n            offset = z - 1;\n          } else {\n            parts[w + offset] = _htons(parseInt(words[w], 16));\n          }\n        } else {\n          parts[w + offset] = words[w];\n        }\n      }\n\n      return [parts[1] << 16 | parts[0], parts[3] << 16 | parts[2], parts[5] << 16 | parts[4], parts[7] << 16 | parts[6]];\n    }\n\n    var DNS = {\n      address_map: {\n        id: 1,\n        addrs: {},\n        names: {}\n      },\n      lookup_name: function lookup_name(name) {\n        var res = __inet_pton4_raw(name);\n\n        if (res !== null) {\n          return name;\n        }\n\n        res = __inet_pton6_raw(name);\n\n        if (res !== null) {\n          return name;\n        }\n\n        var addr;\n\n        if (DNS.address_map.addrs[name]) {\n          addr = DNS.address_map.addrs[name];\n        } else {\n          var id = DNS.address_map.id++;\n          assert(id < 65535, \"exceeded max address mappings of 65535\");\n          addr = \"172.29.\" + (id & 255) + \".\" + (id & 65280);\n          DNS.address_map.names[addr] = name;\n          DNS.address_map.addrs[name] = addr;\n        }\n\n        return addr;\n      },\n      lookup_addr: function lookup_addr(addr) {\n        if (DNS.address_map.names[addr]) {\n          return DNS.address_map.names[addr];\n        }\n\n        return null;\n      }\n    };\n\n    function __inet_ntop4_raw(addr) {\n      return (addr & 255) + \".\" + (addr >> 8 & 255) + \".\" + (addr >> 16 & 255) + \".\" + (addr >> 24 & 255);\n    }\n\n    function __inet_ntop6_raw(ints) {\n      var str = \"\";\n      var word = 0;\n      var longest = 0;\n      var lastzero = 0;\n      var zstart = 0;\n      var len = 0;\n      var i = 0;\n      var parts = [ints[0] & 65535, ints[0] >> 16, ints[1] & 65535, ints[1] >> 16, ints[2] & 65535, ints[2] >> 16, ints[3] & 65535, ints[3] >> 16];\n      var hasipv4 = true;\n      var v4part = \"\";\n\n      for (i = 0; i < 5; i++) {\n        if (parts[i] !== 0) {\n          hasipv4 = false;\n          break;\n        }\n      }\n\n      if (hasipv4) {\n        v4part = __inet_ntop4_raw(parts[6] | parts[7] << 16);\n\n        if (parts[5] === -1) {\n          str = \"::ffff:\";\n          str += v4part;\n          return str;\n        }\n\n        if (parts[5] === 0) {\n          str = \"::\";\n          if (v4part === \"0.0.0.0\") v4part = \"\";\n          if (v4part === \"0.0.0.1\") v4part = \"1\";\n          str += v4part;\n          return str;\n        }\n      }\n\n      for (word = 0; word < 8; word++) {\n        if (parts[word] === 0) {\n          if (word - lastzero > 1) {\n            len = 0;\n          }\n\n          lastzero = word;\n          len++;\n        }\n\n        if (len > longest) {\n          longest = len;\n          zstart = word - longest + 1;\n        }\n      }\n\n      for (word = 0; word < 8; word++) {\n        if (longest > 1) {\n          if (parts[word] === 0 && word >= zstart && word < zstart + longest) {\n            if (word === zstart) {\n              str += \":\";\n              if (zstart === 0) str += \":\";\n            }\n\n            continue;\n          }\n        }\n\n        str += Number(_ntohs(parts[word] & 65535)).toString(16);\n        str += word < 7 ? \":\" : \"\";\n      }\n\n      return str;\n    }\n\n    function __read_sockaddr(sa, salen) {\n      var family = HEAP16[sa >> 1];\n\n      var port = _ntohs(HEAPU16[sa + 2 >> 1]);\n\n      var addr;\n\n      switch (family) {\n        case 2:\n          if (salen !== 16) {\n            return {\n              errno: 28\n            };\n          }\n\n          addr = HEAP32[sa + 4 >> 2];\n          addr = __inet_ntop4_raw(addr);\n          break;\n\n        case 10:\n          if (salen !== 28) {\n            return {\n              errno: 28\n            };\n          }\n\n          addr = [HEAP32[sa + 8 >> 2], HEAP32[sa + 12 >> 2], HEAP32[sa + 16 >> 2], HEAP32[sa + 20 >> 2]];\n          addr = __inet_ntop6_raw(addr);\n          break;\n\n        default:\n          return {\n            errno: 5\n          };\n      }\n\n      return {\n        family: family,\n        addr: addr,\n        port: port\n      };\n    }\n\n    function __write_sockaddr(sa, family, addr, port) {\n      switch (family) {\n        case 2:\n          addr = __inet_pton4_raw(addr);\n          HEAP16[sa >> 1] = family;\n          HEAP32[sa + 4 >> 2] = addr;\n          HEAP16[sa + 2 >> 1] = _htons(port);\n          break;\n\n        case 10:\n          addr = __inet_pton6_raw(addr);\n          HEAP32[sa >> 2] = family;\n          HEAP32[sa + 8 >> 2] = addr[0];\n          HEAP32[sa + 12 >> 2] = addr[1];\n          HEAP32[sa + 16 >> 2] = addr[2];\n          HEAP32[sa + 20 >> 2] = addr[3];\n          HEAP16[sa + 2 >> 1] = _htons(port);\n          HEAP32[sa + 4 >> 2] = 0;\n          HEAP32[sa + 24 >> 2] = 0;\n          break;\n\n        default:\n          return {\n            errno: 5\n          };\n      }\n\n      return {};\n    }\n\n    function ___sys_socketcall(call, socketvararg) {\n      try {\n        SYSCALLS.varargs = socketvararg;\n\n        var getSocketFromFD = function getSocketFromFD() {\n          var socket = SOCKFS.getSocket(SYSCALLS.get());\n          if (!socket) throw new FS.ErrnoError(8);\n          return socket;\n        };\n\n        var getSocketAddress = function getSocketAddress(allowNull) {\n          var addrp = SYSCALLS.get(),\n              addrlen = SYSCALLS.get();\n          if (allowNull && addrp === 0) return null;\n\n          var info = __read_sockaddr(addrp, addrlen);\n\n          if (info.errno) throw new FS.ErrnoError(info.errno);\n          info.addr = DNS.lookup_addr(info.addr) || info.addr;\n          return info;\n        };\n\n        switch (call) {\n          case 1:\n            {\n              var domain = SYSCALLS.get(),\n                  type = SYSCALLS.get(),\n                  protocol = SYSCALLS.get();\n              var sock = SOCKFS.createSocket(domain, type, protocol);\n              return sock.stream.fd;\n            }\n\n          case 2:\n            {\n              var sock = getSocketFromFD(),\n                  info = getSocketAddress();\n              sock.sock_ops.bind(sock, info.addr, info.port);\n              return 0;\n            }\n\n          case 3:\n            {\n              var sock = getSocketFromFD(),\n                  info = getSocketAddress();\n              sock.sock_ops.connect(sock, info.addr, info.port);\n              return 0;\n            }\n\n          case 4:\n            {\n              var sock = getSocketFromFD(),\n                  backlog = SYSCALLS.get();\n              sock.sock_ops.listen(sock, backlog);\n              return 0;\n            }\n\n          case 5:\n            {\n              var sock = getSocketFromFD(),\n                  addr = SYSCALLS.get(),\n                  addrlen = SYSCALLS.get();\n              var newsock = sock.sock_ops.accept(sock);\n\n              if (addr) {\n                var res = __write_sockaddr(addr, newsock.family, DNS.lookup_name(newsock.daddr), newsock.dport);\n              }\n\n              return newsock.stream.fd;\n            }\n\n          case 6:\n            {\n              var sock = getSocketFromFD(),\n                  addr = SYSCALLS.get(),\n                  addrlen = SYSCALLS.get();\n\n              var res = __write_sockaddr(addr, sock.family, DNS.lookup_name(sock.saddr || \"0.0.0.0\"), sock.sport);\n\n              return 0;\n            }\n\n          case 7:\n            {\n              var sock = getSocketFromFD(),\n                  addr = SYSCALLS.get(),\n                  addrlen = SYSCALLS.get();\n\n              if (!sock.daddr) {\n                return -53;\n              }\n\n              var res = __write_sockaddr(addr, sock.family, DNS.lookup_name(sock.daddr), sock.dport);\n\n              return 0;\n            }\n\n          case 11:\n            {\n              var sock = getSocketFromFD(),\n                  message = SYSCALLS.get(),\n                  length = SYSCALLS.get(),\n                  flags = SYSCALLS.get(),\n                  dest = getSocketAddress(true);\n\n              if (!dest) {\n                return FS.write(sock.stream, HEAP8, message, length);\n              } else {\n                return sock.sock_ops.sendmsg(sock, HEAP8, message, length, dest.addr, dest.port);\n              }\n            }\n\n          case 12:\n            {\n              var sock = getSocketFromFD(),\n                  buf = SYSCALLS.get(),\n                  len = SYSCALLS.get(),\n                  flags = SYSCALLS.get(),\n                  addr = SYSCALLS.get(),\n                  addrlen = SYSCALLS.get();\n              var msg = sock.sock_ops.recvmsg(sock, len);\n              if (!msg) return 0;\n\n              if (addr) {\n                var res = __write_sockaddr(addr, sock.family, DNS.lookup_name(msg.addr), msg.port);\n              }\n\n              HEAPU8.set(msg.buffer, buf);\n              return msg.buffer.byteLength;\n            }\n\n          case 14:\n            {\n              return -50;\n            }\n\n          case 15:\n            {\n              var sock = getSocketFromFD(),\n                  level = SYSCALLS.get(),\n                  optname = SYSCALLS.get(),\n                  optval = SYSCALLS.get(),\n                  optlen = SYSCALLS.get();\n\n              if (level === 1) {\n                if (optname === 4) {\n                  HEAP32[optval >> 2] = sock.error;\n                  HEAP32[optlen >> 2] = 4;\n                  sock.error = null;\n                  return 0;\n                }\n              }\n\n              return -50;\n            }\n\n          case 16:\n            {\n              var sock = getSocketFromFD(),\n                  message = SYSCALLS.get(),\n                  flags = SYSCALLS.get();\n              var iov = HEAP32[message + 8 >> 2];\n              var num = HEAP32[message + 12 >> 2];\n              var addr, port;\n              var name = HEAP32[message >> 2];\n              var namelen = HEAP32[message + 4 >> 2];\n\n              if (name) {\n                var info = __read_sockaddr(name, namelen);\n\n                if (info.errno) return -info.errno;\n                port = info.port;\n                addr = DNS.lookup_addr(info.addr) || info.addr;\n              }\n\n              var total = 0;\n\n              for (var i = 0; i < num; i++) {\n                total += HEAP32[iov + (8 * i + 4) >> 2];\n              }\n\n              var view = new Uint8Array(total);\n              var offset = 0;\n\n              for (var i = 0; i < num; i++) {\n                var iovbase = HEAP32[iov + (8 * i + 0) >> 2];\n                var iovlen = HEAP32[iov + (8 * i + 4) >> 2];\n\n                for (var j = 0; j < iovlen; j++) {\n                  view[offset++] = HEAP8[iovbase + j >> 0];\n                }\n              }\n\n              return sock.sock_ops.sendmsg(sock, view, 0, total, addr, port);\n            }\n\n          case 17:\n            {\n              var sock = getSocketFromFD(),\n                  message = SYSCALLS.get(),\n                  flags = SYSCALLS.get();\n              var iov = HEAP32[message + 8 >> 2];\n              var num = HEAP32[message + 12 >> 2];\n              var total = 0;\n\n              for (var i = 0; i < num; i++) {\n                total += HEAP32[iov + (8 * i + 4) >> 2];\n              }\n\n              var msg = sock.sock_ops.recvmsg(sock, total);\n              if (!msg) return 0;\n              var name = HEAP32[message >> 2];\n\n              if (name) {\n                var res = __write_sockaddr(name, sock.family, DNS.lookup_name(msg.addr), msg.port);\n              }\n\n              var bytesRead = 0;\n              var bytesRemaining = msg.buffer.byteLength;\n\n              for (var i = 0; bytesRemaining > 0 && i < num; i++) {\n                var iovbase = HEAP32[iov + (8 * i + 0) >> 2];\n                var iovlen = HEAP32[iov + (8 * i + 4) >> 2];\n\n                if (!iovlen) {\n                  continue;\n                }\n\n                var length = Math.min(iovlen, bytesRemaining);\n                var buf = msg.buffer.subarray(bytesRead, bytesRead + length);\n                HEAPU8.set(buf, iovbase + bytesRead);\n                bytesRead += length;\n                bytesRemaining -= length;\n              }\n\n              return bytesRead;\n            }\n\n          default:\n            {\n              return -52;\n            }\n        }\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_stat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_statfs64(path, size, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        HEAP32[buf + 4 >> 2] = 4096;\n        HEAP32[buf + 40 >> 2] = 4096;\n        HEAP32[buf + 8 >> 2] = 1e6;\n        HEAP32[buf + 12 >> 2] = 5e5;\n        HEAP32[buf + 16 >> 2] = 5e5;\n        HEAP32[buf + 20 >> 2] = FS.nextInode;\n        HEAP32[buf + 24 >> 2] = 1e6;\n        HEAP32[buf + 28 >> 2] = 42;\n        HEAP32[buf + 44 >> 2] = 2;\n        HEAP32[buf + 36 >> 2] = 255;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_ugetrlimit(resource, rlim) {\n      try {\n        HEAP32[rlim >> 2] = -1;\n        HEAP32[rlim + 4 >> 2] = -1;\n        HEAP32[rlim + 8 >> 2] = -1;\n        HEAP32[rlim + 12 >> 2] = -1;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_uname(buf) {\n      try {\n        if (!buf) return -21;\n        var layout = {\n          \"__size__\": 390,\n          \"sysname\": 0,\n          \"nodename\": 65,\n          \"release\": 130,\n          \"version\": 195,\n          \"machine\": 260,\n          \"domainname\": 325\n        };\n\n        var copyString = function copyString(element, value) {\n          var offset = layout[element];\n          writeAsciiToMemory(value, buf + offset);\n        };\n\n        copyString(\"sysname\", \"Emscripten\");\n        copyString(\"nodename\", \"emscripten\");\n        copyString(\"release\", \"1.0\");\n        copyString(\"version\", \"#1\");\n        copyString(\"machine\", \"x86-JS\");\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___sys_unlink(path) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.unlink(path);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function _exit(status) {\n      exit(status);\n    }\n\n    function __exit(a0) {\n      return _exit(a0);\n    }\n\n    function _abort() {\n      abort();\n    }\n\n    function _clock() {\n      if (_clock.start === undefined) _clock.start = Date.now();\n      return (Date.now() - _clock.start) * (1e6 / 1e3) | 0;\n    }\n\n    var ___tm_current = 2930096;\n\n    var ___tm_timezone = (stringToUTF8(\"GMT\", 2930144, 4), 2930144);\n\n    function _tzset() {\n      if (_tzset.called) return;\n      _tzset.called = true;\n      HEAP32[__get_timezone() >> 2] = new Date().getTimezoneOffset() * 60;\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      HEAP32[__get_daylight() >> 2] = Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());\n\n      function extractZone(date) {\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n        return match ? match[1] : \"GMT\";\n      }\n\n      var winterName = extractZone(winter);\n      var summerName = extractZone(summer);\n      var winterNamePtr = allocateUTF8(winterName);\n      var summerNamePtr = allocateUTF8(summerName);\n\n      if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {\n        HEAP32[__get_tzname() >> 2] = winterNamePtr;\n        HEAP32[__get_tzname() + 4 >> 2] = summerNamePtr;\n      } else {\n        HEAP32[__get_tzname() >> 2] = summerNamePtr;\n        HEAP32[__get_tzname() + 4 >> 2] = winterNamePtr;\n      }\n    }\n\n    function _localtime_r(time, tmPtr) {\n      _tzset();\n\n      var date = new Date(HEAP32[time >> 2] * 1e3);\n      HEAP32[tmPtr >> 2] = date.getSeconds();\n      HEAP32[tmPtr + 4 >> 2] = date.getMinutes();\n      HEAP32[tmPtr + 8 >> 2] = date.getHours();\n      HEAP32[tmPtr + 12 >> 2] = date.getDate();\n      HEAP32[tmPtr + 16 >> 2] = date.getMonth();\n      HEAP32[tmPtr + 20 >> 2] = date.getFullYear() - 1900;\n      HEAP32[tmPtr + 24 >> 2] = date.getDay();\n      var start = new Date(date.getFullYear(), 0, 1);\n      var yday = (date.getTime() - start.getTime()) / (1e3 * 60 * 60 * 24) | 0;\n      HEAP32[tmPtr + 28 >> 2] = yday;\n      HEAP32[tmPtr + 36 >> 2] = -(date.getTimezoneOffset() * 60);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n      HEAP32[tmPtr + 32 >> 2] = dst;\n      var zonePtr = HEAP32[__get_tzname() + (dst ? 4 : 0) >> 2];\n      HEAP32[tmPtr + 40 >> 2] = zonePtr;\n      return tmPtr;\n    }\n\n    function _mktime(tmPtr) {\n      _tzset();\n\n      var date = new Date(HEAP32[tmPtr + 20 >> 2] + 1900, HEAP32[tmPtr + 16 >> 2], HEAP32[tmPtr + 12 >> 2], HEAP32[tmPtr + 8 >> 2], HEAP32[tmPtr + 4 >> 2], HEAP32[tmPtr >> 2], 0);\n      var dst = HEAP32[tmPtr + 32 >> 2];\n      var guessedOffset = date.getTimezoneOffset();\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dstOffset = Math.min(winterOffset, summerOffset);\n\n      if (dst < 0) {\n        HEAP32[tmPtr + 32 >> 2] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\n      } else if (dst > 0 != (dstOffset == guessedOffset)) {\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\n        date.setTime(date.getTime() + (trueOffset - guessedOffset) * 6e4);\n      }\n\n      HEAP32[tmPtr + 24 >> 2] = date.getDay();\n      var yday = (date.getTime() - start.getTime()) / (1e3 * 60 * 60 * 24) | 0;\n      HEAP32[tmPtr + 28 >> 2] = yday;\n      return date.getTime() / 1e3 | 0;\n    }\n\n    function _asctime_r(tmPtr, buf) {\n      var date = {\n        tm_sec: HEAP32[tmPtr >> 2],\n        tm_min: HEAP32[tmPtr + 4 >> 2],\n        tm_hour: HEAP32[tmPtr + 8 >> 2],\n        tm_mday: HEAP32[tmPtr + 12 >> 2],\n        tm_mon: HEAP32[tmPtr + 16 >> 2],\n        tm_year: HEAP32[tmPtr + 20 >> 2],\n        tm_wday: HEAP32[tmPtr + 24 >> 2]\n      };\n      var days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n      var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      var s = days[date.tm_wday] + \" \" + months[date.tm_mon] + (date.tm_mday < 10 ? \"  \" : \" \") + date.tm_mday + (date.tm_hour < 10 ? \" 0\" : \" \") + date.tm_hour + (date.tm_min < 10 ? \":0\" : \":\") + date.tm_min + (date.tm_sec < 10 ? \":0\" : \":\") + date.tm_sec + \" \" + (1900 + date.tm_year) + \"\\n\";\n      stringToUTF8(s, buf, 26);\n      return buf;\n    }\n\n    function _ctime_r(time, buf) {\n      var stack = stackSave();\n\n      var rv = _asctime_r(_localtime_r(time, stackAlloc(44)), buf);\n\n      stackRestore(stack);\n      return rv;\n    }\n\n    function _ctime(timer) {\n      return _ctime_r(timer, ___tm_current);\n    }\n\n    function _dlerror() {\n      abort(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\");\n    }\n\n    function _dlopen(filename, flag) {\n      abort(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\");\n    }\n\n    function _dlsym(handle, symbol) {\n      abort(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\");\n    }\n\n    var setjmpId = 0;\n\n    function _saveSetjmp(env, label, table, size) {\n      env = env | 0;\n      label = label | 0;\n      table = table | 0;\n      size = size | 0;\n      var i = 0;\n      setjmpId = setjmpId + 1 | 0;\n      HEAP32[env >> 2] = setjmpId;\n\n      while ((i | 0) < (size | 0)) {\n        if ((HEAP32[table + (i << 3) >> 2] | 0) == 0) {\n          HEAP32[table + (i << 3) >> 2] = setjmpId;\n          HEAP32[table + ((i << 3) + 4) >> 2] = label;\n          HEAP32[table + ((i << 3) + 8) >> 2] = 0;\n          setTempRet0(size | 0);\n          return table | 0;\n        }\n\n        i = i + 1 | 0;\n      }\n\n      size = size * 2 | 0;\n      table = _realloc(table | 0, 8 * (size + 1 | 0) | 0) | 0;\n      table = _saveSetjmp(env | 0, label | 0, table | 0, size | 0) | 0;\n      setTempRet0(size | 0);\n      return table | 0;\n    }\n\n    function _testSetjmp(id, table, size) {\n      id = id | 0;\n      table = table | 0;\n      size = size | 0;\n      var i = 0,\n          curr = 0;\n\n      while ((i | 0) < (size | 0)) {\n        curr = HEAP32[table + (i << 3) >> 2] | 0;\n        if ((curr | 0) == 0) break;\n\n        if ((curr | 0) == (id | 0)) {\n          return HEAP32[table + ((i << 3) + 4) >> 2] | 0;\n        }\n\n        i = i + 1 | 0;\n      }\n\n      return 0;\n    }\n\n    function _longjmp(env, value) {\n      _setThrew(env, value || 1);\n\n      throw \"longjmp\";\n    }\n\n    function _emscripten_longjmp(env, value) {\n      _longjmp(env, value);\n    }\n\n    function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.copyWithin(dest, src, src + num);\n    }\n\n    function _emscripten_get_heap_size() {\n      return HEAPU8.length;\n    }\n\n    function emscripten_realloc_buffer(size) {\n      try {\n        wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        return 1;\n      } catch (e) {}\n    }\n\n    function _emscripten_resize_heap(requestedSize) {\n      var oldSize = _emscripten_get_heap_size();\n\n      var PAGE_MULTIPLE = 65536;\n      var maxHeapSize = 2147483648;\n\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n\n      var minHeapSize = 16777216;\n\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), PAGE_MULTIPLE));\n        var replacement = emscripten_realloc_buffer(newSize);\n\n        if (replacement) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    var ENV = {};\n\n    function __getExecutableName() {\n      return thisProgram || \"./this.program\";\n    }\n\n    function getEnvStrings() {\n      if (!getEnvStrings.strings) {\n        var env = {\n          \"USER\": \"web_user\",\n          \"LOGNAME\": \"web_user\",\n          \"PATH\": \"/\",\n          \"PWD\": \"/\",\n          \"HOME\": \"/home/web_user\",\n          \"LANG\": ((typeof navigator === \"undefined\" ? \"undefined\" : _typeof(navigator)) === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\",\n          \"_\": __getExecutableName()\n        };\n\n        for (var x in ENV) {\n          env[x] = ENV[x];\n        }\n\n        var strings = [];\n\n        for (var x in env) {\n          strings.push(x + \"=\" + env[x]);\n        }\n\n        getEnvStrings.strings = strings;\n      }\n\n      return getEnvStrings.strings;\n    }\n\n    function _environ_get(__environ, environ_buf) {\n      var bufSize = 0;\n      getEnvStrings().forEach(function (string, i) {\n        var ptr = environ_buf + bufSize;\n        HEAP32[__environ + i * 4 >> 2] = ptr;\n        writeAsciiToMemory(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    }\n\n    function _environ_sizes_get(penviron_count, penviron_buf_size) {\n      var strings = getEnvStrings();\n      HEAP32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach(function (string) {\n        bufSize += string.length + 1;\n      });\n      HEAP32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    }\n\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n\n    function _fd_fdstat_get(fd, pbuf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var type = stream.tty ? 2 : FS.isDir(stream.mode) ? 3 : FS.isLink(stream.mode) ? 7 : 4;\n        HEAP8[pbuf >> 0] = type;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n        HEAP32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n\n    function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var HIGH_OFFSET = 4294967296;\n        var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n        var DOUBLE_LIMIT = 9007199254740992;\n\n        if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n          return -61;\n        }\n\n        FS.llseek(stream, offset, whence);\n        tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];\n        if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n        HEAP32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n\n    function _fork() {\n      setErrNo(6);\n      return -1;\n    }\n\n    function _getTempRet0() {\n      return getTempRet0() | 0;\n    }\n\n    function _gethostbyname(name) {\n      name = UTF8ToString(name);\n\n      var ret = _malloc(20);\n\n      var nameBuf = _malloc(name.length + 1);\n\n      stringToUTF8(name, nameBuf, name.length + 1);\n      HEAP32[ret >> 2] = nameBuf;\n\n      var aliasesBuf = _malloc(4);\n\n      HEAP32[aliasesBuf >> 2] = 0;\n      HEAP32[ret + 4 >> 2] = aliasesBuf;\n      var afinet = 2;\n      HEAP32[ret + 8 >> 2] = afinet;\n      HEAP32[ret + 12 >> 2] = 4;\n\n      var addrListBuf = _malloc(12);\n\n      HEAP32[addrListBuf >> 2] = addrListBuf + 8;\n      HEAP32[addrListBuf + 4 >> 2] = 0;\n      HEAP32[addrListBuf + 8 >> 2] = __inet_pton4_raw(DNS.lookup_name(name));\n      HEAP32[ret + 16 >> 2] = addrListBuf;\n      return ret;\n    }\n\n    function _gettimeofday(ptr) {\n      var now = Date.now();\n      HEAP32[ptr >> 2] = now / 1e3 | 0;\n      HEAP32[ptr + 4 >> 2] = now % 1e3 * 1e3 | 0;\n      return 0;\n    }\n\n    function _inet_addr(ptr) {\n      var addr = __inet_pton4_raw(UTF8ToString(ptr));\n\n      if (addr === null) {\n        return -1;\n      }\n\n      return addr;\n    }\n\n    function _llvm_eh_typeid_for(type) {\n      return type;\n    }\n\n    function _localtime(time) {\n      return _localtime_r(time, ___tm_current);\n    }\n\n    var _emscripten_get_now;\n\n    if (ENVIRONMENT_IS_NODE) {\n      _emscripten_get_now = function _emscripten_get_now() {\n        var t = process[\"hrtime\"]();\n        return t[0] * 1e3 + t[1] / 1e6;\n      };\n    } else if (typeof dateNow !== \"undefined\") {\n      _emscripten_get_now = dateNow;\n    } else _emscripten_get_now = function _emscripten_get_now() {\n      return performance.now();\n    };\n\n    function _usleep(useconds) {\n      var start = _emscripten_get_now();\n\n      while (_emscripten_get_now() - start < useconds / 1e3) {}\n    }\n\n    function _nanosleep(rqtp, rmtp) {\n      if (rqtp === 0) {\n        setErrNo(28);\n        return -1;\n      }\n\n      var seconds = HEAP32[rqtp >> 2];\n      var nanoseconds = HEAP32[rqtp + 4 >> 2];\n\n      if (nanoseconds < 0 || nanoseconds > 999999999 || seconds < 0) {\n        setErrNo(28);\n        return -1;\n      }\n\n      if (rmtp !== 0) {\n        HEAP32[rmtp >> 2] = 0;\n        HEAP32[rmtp + 4 >> 2] = 0;\n      }\n\n      return _usleep(seconds * 1e6 + nanoseconds / 1e3);\n    }\n\n    function _posix_spawn_file_actions_addclose() {\n      err(\"missing function: posix_spawn_file_actions_addclose\");\n      abort(-1);\n    }\n\n    function _posix_spawn_file_actions_adddup2() {\n      err(\"missing function: posix_spawn_file_actions_adddup2\");\n      abort(-1);\n    }\n\n    function _posix_spawn_file_actions_destroy() {\n      err(\"missing function: posix_spawn_file_actions_destroy\");\n      abort(-1);\n    }\n\n    function _posix_spawn_file_actions_init() {\n      err(\"missing function: posix_spawn_file_actions_init\");\n      abort(-1);\n    }\n\n    function _posix_spawnp() {\n      return _fork();\n    }\n\n    function _pthread_attr_init(attr) {\n      return 0;\n    }\n\n    function _pthread_attr_setdetachstate() {}\n\n    function _pthread_create() {\n      return 6;\n    }\n\n    function _pthread_join() {}\n\n    function _pthread_mutexattr_init() {}\n\n    function _pthread_mutexattr_settype() {}\n\n    function _pthread_spin_destroy() {\n      return 0;\n    }\n\n    function _pthread_spin_init() {\n      return 0;\n    }\n\n    function _pthread_spin_lock() {\n      return 0;\n    }\n\n    function _pthread_spin_unlock() {\n      return 0;\n    }\n\n    function _round(d) {\n      d = +d;\n      return d >= +0 ? +Math_floor(d + +.5) : +Math_ceil(d - +.5);\n    }\n\n    function _roundf(d) {\n      d = +d;\n      return d >= +0 ? +Math_floor(d + +.5) : +Math_ceil(d - +.5);\n    }\n\n    function _setTempRet0($i) {\n      setTempRet0($i | 0);\n    }\n\n    var __sigalrm_handler = 0;\n\n    function _signal(sig, func) {\n      if (sig == 14) {\n        __sigalrm_handler = func;\n      } else {}\n\n      return 0;\n    }\n\n    function __isLeapYear(year) {\n      return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    }\n\n    function __arraySum(array, index) {\n      var sum = 0;\n\n      for (var i = 0; i <= index; sum += array[i++]) {}\n\n      return sum;\n    }\n\n    var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    function __addDays(date, days) {\n      var newDate = new Date(date.getTime());\n\n      while (days > 0) {\n        var leap = __isLeapYear(newDate.getFullYear());\n\n        var currentMonth = newDate.getMonth();\n        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n\n        if (days > daysInCurrentMonth - newDate.getDate()) {\n          days -= daysInCurrentMonth - newDate.getDate() + 1;\n          newDate.setDate(1);\n\n          if (currentMonth < 11) {\n            newDate.setMonth(currentMonth + 1);\n          } else {\n            newDate.setMonth(0);\n            newDate.setFullYear(newDate.getFullYear() + 1);\n          }\n        } else {\n          newDate.setDate(newDate.getDate() + days);\n          return newDate;\n        }\n      }\n\n      return newDate;\n    }\n\n    function _strftime(s, maxsize, format, tm) {\n      var tm_zone = HEAP32[tm + 40 >> 2];\n      var date = {\n        tm_sec: HEAP32[tm >> 2],\n        tm_min: HEAP32[tm + 4 >> 2],\n        tm_hour: HEAP32[tm + 8 >> 2],\n        tm_mday: HEAP32[tm + 12 >> 2],\n        tm_mon: HEAP32[tm + 16 >> 2],\n        tm_year: HEAP32[tm + 20 >> 2],\n        tm_wday: HEAP32[tm + 24 >> 2],\n        tm_yday: HEAP32[tm + 28 >> 2],\n        tm_isdst: HEAP32[tm + 32 >> 2],\n        tm_gmtoff: HEAP32[tm + 36 >> 2],\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n      };\n      var pattern = UTF8ToString(format);\n      var EXPANSION_RULES_1 = {\n        \"%c\": \"%a %b %d %H:%M:%S %Y\",\n        \"%D\": \"%m/%d/%y\",\n        \"%F\": \"%Y-%m-%d\",\n        \"%h\": \"%b\",\n        \"%r\": \"%I:%M:%S %p\",\n        \"%R\": \"%H:%M\",\n        \"%T\": \"%H:%M:%S\",\n        \"%x\": \"%m/%d/%y\",\n        \"%X\": \"%H:%M:%S\",\n        \"%Ec\": \"%c\",\n        \"%EC\": \"%C\",\n        \"%Ex\": \"%m/%d/%y\",\n        \"%EX\": \"%H:%M:%S\",\n        \"%Ey\": \"%y\",\n        \"%EY\": \"%Y\",\n        \"%Od\": \"%d\",\n        \"%Oe\": \"%e\",\n        \"%OH\": \"%H\",\n        \"%OI\": \"%I\",\n        \"%Om\": \"%m\",\n        \"%OM\": \"%M\",\n        \"%OS\": \"%S\",\n        \"%Ou\": \"%u\",\n        \"%OU\": \"%U\",\n        \"%OV\": \"%V\",\n        \"%Ow\": \"%w\",\n        \"%OW\": \"%W\",\n        \"%Oy\": \"%y\"\n      };\n\n      for (var rule in EXPANSION_RULES_1) {\n        pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n      }\n\n      var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n      function leadingSomething(value, digits, character) {\n        var str = typeof value === \"number\" ? value.toString() : value || \"\";\n\n        while (str.length < digits) {\n          str = character[0] + str;\n        }\n\n        return str;\n      }\n\n      function leadingNulls(value, digits) {\n        return leadingSomething(value, digits, \"0\");\n      }\n\n      function compareByDay(date1, date2) {\n        function sgn(value) {\n          return value < 0 ? -1 : value > 0 ? 1 : 0;\n        }\n\n        var compare;\n\n        if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n          if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n            compare = sgn(date1.getDate() - date2.getDate());\n          }\n        }\n\n        return compare;\n      }\n\n      function getFirstWeekStartDate(janFourth) {\n        switch (janFourth.getDay()) {\n          case 0:\n            return new Date(janFourth.getFullYear() - 1, 11, 29);\n\n          case 1:\n            return janFourth;\n\n          case 2:\n            return new Date(janFourth.getFullYear(), 0, 3);\n\n          case 3:\n            return new Date(janFourth.getFullYear(), 0, 2);\n\n          case 4:\n            return new Date(janFourth.getFullYear(), 0, 1);\n\n          case 5:\n            return new Date(janFourth.getFullYear() - 1, 11, 31);\n\n          case 6:\n            return new Date(janFourth.getFullYear() - 1, 11, 30);\n        }\n      }\n\n      function getWeekBasedYear(date) {\n        var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n\n        var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n        var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n        var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n        var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n\n        if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n          if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n            return thisDate.getFullYear() + 1;\n          } else {\n            return thisDate.getFullYear();\n          }\n        } else {\n          return thisDate.getFullYear() - 1;\n        }\n      }\n\n      var EXPANSION_RULES_2 = {\n        \"%a\": function a(date) {\n          return WEEKDAYS[date.tm_wday].substring(0, 3);\n        },\n        \"%A\": function A(date) {\n          return WEEKDAYS[date.tm_wday];\n        },\n        \"%b\": function b(date) {\n          return MONTHS[date.tm_mon].substring(0, 3);\n        },\n        \"%B\": function B(date) {\n          return MONTHS[date.tm_mon];\n        },\n        \"%C\": function C(date) {\n          var year = date.tm_year + 1900;\n          return leadingNulls(year / 100 | 0, 2);\n        },\n        \"%d\": function d(date) {\n          return leadingNulls(date.tm_mday, 2);\n        },\n        \"%e\": function e(date) {\n          return leadingSomething(date.tm_mday, 2, \" \");\n        },\n        \"%g\": function g(date) {\n          return getWeekBasedYear(date).toString().substring(2);\n        },\n        \"%G\": function G(date) {\n          return getWeekBasedYear(date);\n        },\n        \"%H\": function H(date) {\n          return leadingNulls(date.tm_hour, 2);\n        },\n        \"%I\": function I(date) {\n          var twelveHour = date.tm_hour;\n          if (twelveHour == 0) twelveHour = 12;else if (twelveHour > 12) twelveHour -= 12;\n          return leadingNulls(twelveHour, 2);\n        },\n        \"%j\": function j(date) {\n          return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);\n        },\n        \"%m\": function m(date) {\n          return leadingNulls(date.tm_mon + 1, 2);\n        },\n        \"%M\": function M(date) {\n          return leadingNulls(date.tm_min, 2);\n        },\n        \"%n\": function n() {\n          return \"\\n\";\n        },\n        \"%p\": function p(date) {\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\n            return \"AM\";\n          } else {\n            return \"PM\";\n          }\n        },\n        \"%S\": function S(date) {\n          return leadingNulls(date.tm_sec, 2);\n        },\n        \"%t\": function t() {\n          return \"\\t\";\n        },\n        \"%u\": function u(date) {\n          return date.tm_wday || 7;\n        },\n        \"%U\": function U(date) {\n          var janFirst = new Date(date.tm_year + 1900, 0, 1);\n          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n          var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);\n\n          if (compareByDay(firstSunday, endDate) < 0) {\n            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n            var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n            var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n            return leadingNulls(Math.ceil(days / 7), 2);\n          }\n\n          return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\n        },\n        \"%V\": function V(date) {\n          var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);\n          var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);\n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n\n          var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n\n          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n            return \"53\";\n          }\n\n          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n            return \"01\";\n          }\n\n          var daysDifference;\n\n          if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {\n            daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();\n          } else {\n            daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();\n          }\n\n          return leadingNulls(Math.ceil(daysDifference / 7), 2);\n        },\n        \"%w\": function w(date) {\n          return date.tm_wday;\n        },\n        \"%W\": function W(date) {\n          var janFirst = new Date(date.tm_year, 0, 1);\n          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n          var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);\n\n          if (compareByDay(firstMonday, endDate) < 0) {\n            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n            var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n            var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n            return leadingNulls(Math.ceil(days / 7), 2);\n          }\n\n          return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\n        },\n        \"%y\": function y(date) {\n          return (date.tm_year + 1900).toString().substring(2);\n        },\n        \"%Y\": function Y(date) {\n          return date.tm_year + 1900;\n        },\n        \"%z\": function z(date) {\n          var off = date.tm_gmtoff;\n          var ahead = off >= 0;\n          off = Math.abs(off) / 60;\n          off = off / 60 * 100 + off % 60;\n          return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n        },\n        \"%Z\": function Z(date) {\n          return date.tm_zone;\n        },\n        \"%%\": function _() {\n          return \"%\";\n        }\n      };\n\n      for (var rule in EXPANSION_RULES_2) {\n        if (pattern.indexOf(rule) >= 0) {\n          pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n        }\n      }\n\n      var bytes = intArrayFromString(pattern, false);\n\n      if (bytes.length > maxsize) {\n        return 0;\n      }\n\n      writeArrayToMemory(bytes, s);\n      return bytes.length - 1;\n    }\n\n    function _strftime_l(s, maxsize, format, tm) {\n      return _strftime(s, maxsize, format, tm);\n    }\n\n    function _sysconf(name) {\n      switch (name) {\n        case 30:\n          return 16384;\n\n        case 85:\n          var maxHeapSize = 2147483648;\n          return maxHeapSize / 16384;\n\n        case 132:\n        case 133:\n        case 12:\n        case 137:\n        case 138:\n        case 15:\n        case 235:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 149:\n        case 13:\n        case 10:\n        case 236:\n        case 153:\n        case 9:\n        case 21:\n        case 22:\n        case 159:\n        case 154:\n        case 14:\n        case 77:\n        case 78:\n        case 139:\n        case 80:\n        case 81:\n        case 82:\n        case 68:\n        case 67:\n        case 164:\n        case 11:\n        case 29:\n        case 47:\n        case 48:\n        case 95:\n        case 52:\n        case 51:\n        case 46:\n        case 79:\n          return 200809;\n\n        case 27:\n        case 246:\n        case 127:\n        case 128:\n        case 23:\n        case 24:\n        case 160:\n        case 161:\n        case 181:\n        case 182:\n        case 242:\n        case 183:\n        case 184:\n        case 243:\n        case 244:\n        case 245:\n        case 165:\n        case 178:\n        case 179:\n        case 49:\n        case 50:\n        case 168:\n        case 169:\n        case 175:\n        case 170:\n        case 171:\n        case 172:\n        case 97:\n        case 76:\n        case 32:\n        case 173:\n        case 35:\n          return -1;\n\n        case 176:\n        case 177:\n        case 7:\n        case 155:\n        case 8:\n        case 157:\n        case 125:\n        case 126:\n        case 92:\n        case 93:\n        case 129:\n        case 130:\n        case 131:\n        case 94:\n        case 91:\n          return 1;\n\n        case 74:\n        case 60:\n        case 69:\n        case 70:\n        case 4:\n          return 1024;\n\n        case 31:\n        case 42:\n        case 72:\n          return 32;\n\n        case 87:\n        case 26:\n        case 33:\n          return 2147483647;\n\n        case 34:\n        case 1:\n          return 47839;\n\n        case 38:\n        case 36:\n          return 99;\n\n        case 43:\n        case 37:\n          return 2048;\n\n        case 0:\n          return 2097152;\n\n        case 3:\n          return 65536;\n\n        case 28:\n          return 32768;\n\n        case 44:\n          return 32767;\n\n        case 75:\n          return 16384;\n\n        case 39:\n          return 1e3;\n\n        case 89:\n          return 700;\n\n        case 71:\n          return 256;\n\n        case 40:\n          return 255;\n\n        case 2:\n          return 100;\n\n        case 180:\n          return 64;\n\n        case 25:\n          return 20;\n\n        case 5:\n          return 16;\n\n        case 6:\n          return 6;\n\n        case 73:\n          return 4;\n\n        case 84:\n          {\n            if ((typeof navigator === \"undefined\" ? \"undefined\" : _typeof(navigator)) === \"object\") return navigator[\"hardwareConcurrency\"] || 1;\n            return 1;\n          }\n      }\n\n      setErrNo(28);\n      return -1;\n    }\n\n    function _time(ptr) {\n      var ret = Date.now() / 1e3 | 0;\n\n      if (ptr) {\n        HEAP32[ptr >> 2] = ret;\n      }\n\n      return ret;\n    }\n\n    function _utimes(path, times) {\n      var time;\n\n      if (times) {\n        var offset = 8 + 0;\n        time = HEAP32[times + offset >> 2] * 1e3;\n        offset = 8 + 4;\n        time += HEAP32[times + offset >> 2] / 1e3;\n      } else {\n        time = Date.now();\n      }\n\n      path = UTF8ToString(path);\n\n      try {\n        FS.utime(path, time, time);\n        return 0;\n      } catch (e) {\n        FS.handleFSError(e);\n        return -1;\n      }\n    }\n\n    function _wait(stat_loc) {\n      setErrNo(12);\n      return -1;\n    }\n\n    function _waitpid(a0) {\n      return _wait(a0);\n    }\n\n    var FSNode = function FSNode(parent, name, mode, rdev) {\n      if (!parent) {\n        parent = this;\n      }\n\n      this.parent = parent;\n      this.mount = parent.mount;\n      this.mounted = null;\n      this.id = FS.nextInode++;\n      this.name = name;\n      this.mode = mode;\n      this.node_ops = {};\n      this.stream_ops = {};\n      this.rdev = rdev;\n    };\n\n    var readMode = 292 | 73;\n    var writeMode = 146;\n    Object.defineProperties(FSNode.prototype, {\n      read: {\n        get: function get() {\n          return (this.mode & readMode) === readMode;\n        },\n        set: function set(val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        }\n      },\n      write: {\n        get: function get() {\n          return (this.mode & writeMode) === writeMode;\n        },\n        set: function set(val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        }\n      },\n      isFolder: {\n        get: function get() {\n          return FS.isDir(this.mode);\n        }\n      },\n      isDevice: {\n        get: function get() {\n          return FS.isChrdev(this.mode);\n        }\n      }\n    });\n    FS.FSNode = FSNode;\n    FS.staticInit();\n    Module[\"FS_createFolder\"] = FS.createFolder;\n    Module[\"FS_createPath\"] = FS.createPath;\n    Module[\"FS_createDataFile\"] = FS.createDataFile;\n    Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n    Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n    Module[\"FS_createLink\"] = FS.createLink;\n    Module[\"FS_createDevice\"] = FS.createDevice;\n    Module[\"FS_unlink\"] = FS.unlink;\n\n    if (ENVIRONMENT_IS_NODE) {\n      var fs = require(\"fs\");\n\n      var NODEJS_PATH = require(\"path\");\n\n      NODEFS.staticInit();\n    }\n\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n\n    var asmLibraryArg = {\n      \"r\": ___assert_fail,\n      \"n\": ___cxa_allocate_exception,\n      \"s\": ___cxa_begin_catch,\n      \"B\": ___cxa_end_catch,\n      \"b\": ___cxa_find_matching_catch_2,\n      \"k\": ___cxa_find_matching_catch_3,\n      \"D\": ___cxa_find_matching_catch_4,\n      \"o\": ___cxa_free_exception,\n      \"Nb\": ___cxa_rethrow,\n      \"wb\": ___cxa_thread_atexit,\n      \"O\": ___cxa_throw,\n      \"Nc\": ___cxa_uncaught_exceptions,\n      \"Mc\": ___map_file,\n      \"f\": ___resumeException,\n      \"Xe\": ___sys_access,\n      \"Ic\": ___sys_chdir,\n      \"Ue\": ___sys_chmod,\n      \"Qe\": ___sys_chown32,\n      \"Te\": ___sys_fallocate,\n      \"Ve\": ___sys_fchmod,\n      \"Re\": ___sys_fchown32,\n      \"za\": ___sys_fcntl64,\n      \"$e\": ___sys_fdatasync,\n      \"pf\": ___sys_fstat64,\n      \"We\": ___sys_ftruncate64,\n      \"Jc\": ___sys_getcwd,\n      \"Le\": ___sys_getdents64,\n      \"Pe\": ___sys_geteuid32,\n      \"Ga\": ___sys_getpid,\n      \"Gc\": ___sys_ioctl,\n      \"Oe\": ___sys_lstat64,\n      \"Se\": ___sys_mkdir,\n      \"Ec\": ___sys_mmap2,\n      \"Lc\": ___sys_munmap,\n      \"yc\": ___sys_open,\n      \"Fe\": ___sys_pipe,\n      \"ee\": ___sys_prlimit64,\n      \"Fc\": ___sys_read,\n      \"Ac\": ___sys_readlink,\n      \"je\": ___sys_rename,\n      \"nf\": ___sys_rmdir,\n      \"$a\": ___sys_socketcall,\n      \"xc\": ___sys_stat64,\n      \"ie\": ___sys_statfs64,\n      \"de\": ___sys_ugetrlimit,\n      \"af\": ___sys_uname,\n      \"of\": ___sys_unlink,\n      \"De\": __exit,\n      \"Fa\": _abort,\n      \"vc\": _clock,\n      \"Kb\": _ctime,\n      \"oe\": _dlerror,\n      \"jc\": _dlopen,\n      \"ic\": _dlsym,\n      \"K\": _emscripten_longjmp,\n      \"zd\": _emscripten_memcpy_big,\n      \"Ge\": _emscripten_resize_heap,\n      \"Kd\": _environ_get,\n      \"Vd\": _environ_sizes_get,\n      \"Da\": _exit,\n      \"Za\": _fd_close,\n      \"Mb\": _fd_fdstat_get,\n      \"Dc\": _fd_read,\n      \"be\": _fd_seek,\n      \"ub\": _fd_write,\n      \"Ee\": _fork,\n      \"a\": _getTempRet0,\n      \"pe\": _gethostbyname,\n      \"Na\": _gettimeofday,\n      \"qe\": _inet_addr,\n      \"Ib\": invoke_ddd,\n      \"sc\": invoke_ddii,\n      \"q\": invoke_di,\n      \"Ca\": invoke_did,\n      \"C\": invoke_dii,\n      \"Hb\": invoke_diid,\n      \"u\": invoke_diidi,\n      \"F\": invoke_diii,\n      \"Oa\": invoke_diiiiii,\n      \"gb\": invoke_fifi,\n      \"_a\": invoke_fifiifiii,\n      \"fb\": invoke_fiii,\n      \"ce\": invoke_fiiifiii,\n      \"E\": invoke_i,\n      \"oa\": invoke_id,\n      \"Zb\": invoke_idddddddddi,\n      \"qa\": invoke_iddddii,\n      \"ka\": invoke_iddii,\n      \"S\": invoke_idi,\n      \"$\": invoke_idii,\n      \"c\": invoke_ii,\n      \"G\": invoke_iid,\n      \"db\": invoke_iidd,\n      \"ga\": invoke_iiddd,\n      \"R\": invoke_iidddd,\n      \"T\": invoke_iiddddd,\n      \"ba\": invoke_iidddddd,\n      \"ta\": invoke_iiddddddd,\n      \"qb\": invoke_iidddddddd,\n      \"zc\": invoke_iidddddiiiddddd,\n      \"rb\": invoke_iiddddiiii,\n      \"Hc\": invoke_iidddi,\n      \"ib\": invoke_iiddi,\n      \"Bc\": invoke_iiddii,\n      \"Qa\": invoke_iiddiii,\n      \"re\": invoke_iiddiiiiii,\n      \"A\": invoke_iidi,\n      \"gf\": invoke_iifiii,\n      \"d\": invoke_iii,\n      \"H\": invoke_iiid,\n      \"ac\": invoke_iiidd,\n      \"da\": invoke_iiiddd,\n      \"Cc\": invoke_iiidddddd,\n      \"Sa\": invoke_iiidddddddd,\n      \"Gb\": invoke_iiidddddddddddi,\n      \"Ma\": invoke_iiiddddddddid,\n      \"mc\": invoke_iiiddddii,\n      \"qc\": invoke_iiiddddiii,\n      \"ve\": invoke_iiidddiii,\n      \"rc\": invoke_iiiddii,\n      \"lf\": invoke_iiiddiii,\n      \"Ia\": invoke_iiidi,\n      \"ya\": invoke_iiidii,\n      \"Jb\": invoke_iiidiifii,\n      \"Z\": invoke_iiidiii,\n      \"nc\": invoke_iiidiiiiii,\n      \"e\": invoke_iiii,\n      \"W\": invoke_iiiid,\n      \"He\": invoke_iiiidd,\n      \"we\": invoke_iiiiddd,\n      \"mb\": invoke_iiiiddddd,\n      \"ec\": invoke_iiiidddddiiidi,\n      \"lc\": invoke_iiiiddddiiiiiii,\n      \"ab\": invoke_iiiidddi,\n      \"nb\": invoke_iiiidddiidiiiddiiii,\n      \"Db\": invoke_iiiidddiiii,\n      \"Ta\": invoke_iiiiddi,\n      \"Ra\": invoke_iiiidi,\n      \"Ya\": invoke_iiiidii,\n      \"l\": invoke_iiiii,\n      \"Aa\": invoke_iiiiid,\n      \"xe\": invoke_iiiiidd,\n      \"uc\": invoke_iiiiiddd,\n      \"cc\": invoke_iiiiidddd,\n      \"ye\": invoke_iiiiiddddd,\n      \"yb\": invoke_iiiiidddddd,\n      \"pb\": invoke_iiiiidddddi,\n      \"dc\": invoke_iiiiidddddiidiii,\n      \"Ae\": invoke_iiiiidddiddd,\n      \"bc\": invoke_iiiiiddi,\n      \"U\": invoke_iiiiiddidid,\n      \"Lb\": invoke_iiiiidi,\n      \"m\": invoke_iiiiii,\n      \"bb\": invoke_iiiiiidddd,\n      \"Ne\": invoke_iiiiiiddddii,\n      \"hf\": invoke_iiiiiiddddiiii,\n      \"Je\": invoke_iiiiiiddddiiiidddd,\n      \"Ke\": invoke_iiiiiiddddiiiiii,\n      \"ff\": invoke_iiiiiiddi,\n      \"jf\": invoke_iiiiiidii,\n      \"Ua\": invoke_iiiiiidiii,\n      \"z\": invoke_iiiiiii,\n      \"Ie\": invoke_iiiiiiid,\n      \"bf\": invoke_iiiiiiidddd,\n      \"df\": invoke_iiiiiiidddddd,\n      \"kf\": invoke_iiiiiiiddiii,\n      \"mf\": invoke_iiiiiiiffiii,\n      \"M\": invoke_iiiiiiii,\n      \"ze\": invoke_iiiiiiiiddd,\n      \"Eb\": invoke_iiiiiiiidddii,\n      \"P\": invoke_iiiiiiiii,\n      \"ef\": invoke_iiiiiiiiiddi,\n      \"Qb\": invoke_iiiiiiiiiddiiiiiid,\n      \"_\": invoke_iiiiiiiiii,\n      \"ia\": invoke_iiiiiiiiiii,\n      \"Ha\": invoke_iiiiiiiiiiiddd,\n      \"ma\": invoke_iiiiiiiiiiii,\n      \"wa\": invoke_iiiiiiiiiiiid,\n      \"ha\": invoke_iiiiiiiiiiiii,\n      \"ne\": invoke_iiiiiiiiiiiiid,\n      \"Ka\": invoke_iiiiiiiiiiiiii,\n      \"ke\": invoke_iiiiiiiiiiiiiii,\n      \"Fb\": invoke_iiiiiiiiiiiiiiii,\n      \"Be\": invoke_iiiiiiiiiiiiiiiiiiii,\n      \"Oc\": invoke_iiiiiiiiiiiiiijj,\n      \"id\": invoke_iiiiiiiiiiiiijjii,\n      \"Ed\": invoke_iiiiiiiiiiiiijjji,\n      \"Dd\": invoke_iiiiiiiiiiijji,\n      \"Tc\": invoke_iiiiiiiiiijii,\n      \"$c\": invoke_iiiiiiiijii,\n      \"ed\": invoke_iiiiiiiijiii,\n      \"gd\": invoke_iiiiiiiijjji,\n      \"Sd\": invoke_iiiiiiijii,\n      \"cd\": invoke_iiiiiiijji,\n      \"nd\": invoke_iiiiiij,\n      \"Td\": invoke_iiiiiijii,\n      \"_d\": invoke_iiiiiijjii,\n      \"Bd\": invoke_iiiiij,\n      \"_c\": invoke_iiiiijiiii,\n      \"ld\": invoke_iiiiijiiiii,\n      \"md\": invoke_iiiiijjii,\n      \"ad\": invoke_iiiij,\n      \"qd\": invoke_iiiiji,\n      \"yd\": invoke_iiiijii,\n      \"Uc\": invoke_iiiijiiiii,\n      \"Rd\": invoke_iiiijji,\n      \"Od\": invoke_iiiijjjii,\n      \"Nd\": invoke_iiij,\n      \"Fd\": invoke_iiiji,\n      \"td\": invoke_iiijiiii,\n      \"ud\": invoke_iiijiiiii,\n      \"rd\": invoke_iiijiiiiiii,\n      \"vd\": invoke_iiijiiiji,\n      \"Cd\": invoke_iiijj,\n      \"dd\": invoke_iiijjii,\n      \"Qd\": invoke_iij,\n      \"Zd\": invoke_iiji,\n      \"bd\": invoke_iijii,\n      \"jd\": invoke_iijji,\n      \"Vc\": invoke_iijjjddi,\n      \"Ld\": invoke_ij,\n      \"fd\": invoke_iji,\n      \"Xd\": invoke_j,\n      \"Yd\": invoke_ji,\n      \"Pd\": invoke_jii,\n      \"xd\": invoke_jiii,\n      \"Wc\": invoke_jiiid,\n      \"ae\": invoke_jiiii,\n      \"kd\": invoke_jiiiiiiiiiiiiiiiiiiiiiiiii,\n      \"Jd\": invoke_jiiji,\n      \"Id\": invoke_jiijji,\n      \"Zc\": invoke_jijj,\n      \"Rc\": invoke_jji,\n      \"p\": invoke_v,\n      \"la\": invoke_vd,\n      \"ue\": invoke_vddddii,\n      \"_b\": invoke_vdddi,\n      \"g\": invoke_vi,\n      \"ja\": invoke_vid,\n      \"J\": invoke_vidd,\n      \"ca\": invoke_viddd,\n      \"ra\": invoke_vidddd,\n      \"La\": invoke_vidddddd,\n      \"tb\": invoke_viddddi,\n      \"Me\": invoke_viddddii,\n      \"sb\": invoke_viddddiii,\n      \"ob\": invoke_vidddi,\n      \"Ba\": invoke_viddi,\n      \"V\": invoke_vidi,\n      \"Cb\": invoke_vidii,\n      \"aa\": invoke_vidiii,\n      \"$b\": invoke_vidiiii,\n      \"kb\": invoke_vif,\n      \"h\": invoke_vii,\n      \"I\": invoke_viid,\n      \"N\": invoke_viidd,\n      \"pa\": invoke_viiddd,\n      \"cb\": invoke_viidddddd,\n      \"te\": invoke_viiddid,\n      \"jb\": invoke_viidi,\n      \"L\": invoke_viidii,\n      \"xb\": invoke_viidiii,\n      \"i\": invoke_viii,\n      \"na\": invoke_viiid,\n      \"tc\": invoke_viiiddi,\n      \"se\": invoke_viiidi,\n      \"j\": invoke_viiii,\n      \"Va\": invoke_viiiid,\n      \"wc\": invoke_viiiidddddddd,\n      \"le\": invoke_viiiidddddddi,\n      \"hb\": invoke_viiiidddi,\n      \"Yb\": invoke_viiiiddidid,\n      \"lb\": invoke_viiiidi,\n      \"oc\": invoke_viiiidiiii,\n      \"v\": invoke_viiiii,\n      \"me\": invoke_viiiiidddddddddddddddi,\n      \"Wb\": invoke_viiiiidddddddi,\n      \"Vb\": invoke_viiiiidddddi,\n      \"kc\": invoke_viiiiiddiiiiiii,\n      \"x\": invoke_viiiiii,\n      \"Q\": invoke_viiiiiii,\n      \"ea\": invoke_viiiiiiii,\n      \"X\": invoke_viiiiiiiii,\n      \"Ea\": invoke_viiiiiiiiii,\n      \"cf\": invoke_viiiiiiiiiii,\n      \"Xb\": invoke_viiiiiiiiiiii,\n      \"vb\": invoke_viiiiiiiiiiiii,\n      \"Ub\": invoke_viiiiiiiiiiiiii,\n      \"eb\": invoke_viiiiiiiiiiiiiii,\n      \"Ud\": invoke_viiiiiji,\n      \"Pc\": invoke_viiiij,\n      \"Qc\": invoke_viiij,\n      \"Md\": invoke_viij,\n      \"Sc\": invoke_viiji,\n      \"$d\": invoke_viijii,\n      \"Hd\": invoke_viijj,\n      \"Yc\": invoke_viijji,\n      \"hd\": invoke_viijjji,\n      \"wd\": invoke_vij,\n      \"sd\": invoke_viji,\n      \"od\": invoke_vijid,\n      \"Gd\": invoke_vijii,\n      \"Xc\": invoke_vijiidddi,\n      \"pd\": invoke_vijiii,\n      \"Ad\": invoke_vijjj,\n      \"Wd\": invoke_vj,\n      \"y\": _llvm_eh_typeid_for,\n      \"sa\": _localtime,\n      \"Ye\": _localtime_r,\n      \"memory\": wasmMemory,\n      \"Pa\": _mktime,\n      \"Ob\": _nanosleep,\n      \"zb\": _posix_spawn_file_actions_addclose,\n      \"Ab\": _posix_spawn_file_actions_adddup2,\n      \"gc\": _posix_spawn_file_actions_destroy,\n      \"Bb\": _posix_spawn_file_actions_init,\n      \"hc\": _posix_spawnp,\n      \"he\": _pthread_attr_init,\n      \"ge\": _pthread_attr_setdetachstate,\n      \"pc\": _pthread_create,\n      \"Pb\": _pthread_join,\n      \"Xa\": _pthread_mutexattr_init,\n      \"Wa\": _pthread_mutexattr_settype,\n      \"Sb\": _pthread_spin_destroy,\n      \"Tb\": _pthread_spin_init,\n      \"Rb\": _pthread_spin_lock,\n      \"fe\": _pthread_spin_unlock,\n      \"fa\": _round,\n      \"va\": _roundf,\n      \"Y\": _saveSetjmp,\n      \"t\": _setTempRet0,\n      \"fc\": _signal,\n      \"xa\": _strftime,\n      \"Kc\": _strftime_l,\n      \"Ja\": _sysconf,\n      \"table\": wasmTable,\n      \"w\": _testSetjmp,\n      \"ua\": _time,\n      \"_e\": _usleep,\n      \"Ze\": _utimes,\n      \"Ce\": _waitpid\n    };\n    var asm = createWasm();\n    Module[\"asm\"] = asm;\n\n    var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function () {\n      return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"qf\"]).apply(null, arguments);\n    };\n\n    var _OCTDestroyCoordinateTransformation = Module[\"_OCTDestroyCoordinateTransformation\"] = function () {\n      return (_OCTDestroyCoordinateTransformation = Module[\"_OCTDestroyCoordinateTransformation\"] = Module[\"asm\"][\"rf\"]).apply(null, arguments);\n    };\n\n    var _OCTNewCoordinateTransformation = Module[\"_OCTNewCoordinateTransformation\"] = function () {\n      return (_OCTNewCoordinateTransformation = Module[\"_OCTNewCoordinateTransformation\"] = Module[\"asm\"][\"sf\"]).apply(null, arguments);\n    };\n\n    var _OCTTransform = Module[\"_OCTTransform\"] = function () {\n      return (_OCTTransform = Module[\"_OCTTransform\"] = Module[\"asm\"][\"tf\"]).apply(null, arguments);\n    };\n\n    var _OSRNewSpatialReference = Module[\"_OSRNewSpatialReference\"] = function () {\n      return (_OSRNewSpatialReference = Module[\"_OSRNewSpatialReference\"] = Module[\"asm\"][\"uf\"]).apply(null, arguments);\n    };\n\n    var _OSRDestroySpatialReference = Module[\"_OSRDestroySpatialReference\"] = function () {\n      return (_OSRDestroySpatialReference = Module[\"_OSRDestroySpatialReference\"] = Module[\"asm\"][\"vf\"]).apply(null, arguments);\n    };\n\n    var _OSRImportFromEPSG = Module[\"_OSRImportFromEPSG\"] = function () {\n      return (_OSRImportFromEPSG = Module[\"_OSRImportFromEPSG\"] = Module[\"asm\"][\"wf\"]).apply(null, arguments);\n    };\n\n    var _GDALSuggestedWarpOutput = Module[\"_GDALSuggestedWarpOutput\"] = function () {\n      return (_GDALSuggestedWarpOutput = Module[\"_GDALSuggestedWarpOutput\"] = Module[\"asm\"][\"xf\"]).apply(null, arguments);\n    };\n\n    var _GDALGenImgProjTransform = Module[\"_GDALGenImgProjTransform\"] = function () {\n      return (_GDALGenImgProjTransform = Module[\"_GDALGenImgProjTransform\"] = Module[\"asm\"][\"yf\"]).apply(null, arguments);\n    };\n\n    var _GDALCreateGenImgProjTransformer = Module[\"_GDALCreateGenImgProjTransformer\"] = function () {\n      return (_GDALCreateGenImgProjTransformer = Module[\"_GDALCreateGenImgProjTransformer\"] = Module[\"asm\"][\"zf\"]).apply(null, arguments);\n    };\n\n    var _GDALDestroyGenImgProjTransformer = Module[\"_GDALDestroyGenImgProjTransformer\"] = function () {\n      return (_GDALDestroyGenImgProjTransformer = Module[\"_GDALDestroyGenImgProjTransformer\"] = Module[\"asm\"][\"Af\"]).apply(null, arguments);\n    };\n\n    var _GDALReprojectImage = Module[\"_GDALReprojectImage\"] = function () {\n      return (_GDALReprojectImage = Module[\"_GDALReprojectImage\"] = Module[\"asm\"][\"Bf\"]).apply(null, arguments);\n    };\n\n    var _GDALRasterize = Module[\"_GDALRasterize\"] = function () {\n      return (_GDALRasterize = Module[\"_GDALRasterize\"] = Module[\"asm\"][\"Cf\"]).apply(null, arguments);\n    };\n\n    var _GDALRasterizeOptionsNew = Module[\"_GDALRasterizeOptionsNew\"] = function () {\n      return (_GDALRasterizeOptionsNew = Module[\"_GDALRasterizeOptionsNew\"] = Module[\"asm\"][\"Df\"]).apply(null, arguments);\n    };\n\n    var _GDALRasterizeOptionsFree = Module[\"_GDALRasterizeOptionsFree\"] = function () {\n      return (_GDALRasterizeOptionsFree = Module[\"_GDALRasterizeOptionsFree\"] = Module[\"asm\"][\"Ef\"]).apply(null, arguments);\n    };\n\n    var _GDALTranslate = Module[\"_GDALTranslate\"] = function () {\n      return (_GDALTranslate = Module[\"_GDALTranslate\"] = Module[\"asm\"][\"Ff\"]).apply(null, arguments);\n    };\n\n    var _GDALTranslateOptionsNew = Module[\"_GDALTranslateOptionsNew\"] = function () {\n      return (_GDALTranslateOptionsNew = Module[\"_GDALTranslateOptionsNew\"] = Module[\"asm\"][\"Gf\"]).apply(null, arguments);\n    };\n\n    var _GDALTranslateOptionsFree = Module[\"_GDALTranslateOptionsFree\"] = function () {\n      return (_GDALTranslateOptionsFree = Module[\"_GDALTranslateOptionsFree\"] = Module[\"asm\"][\"Hf\"]).apply(null, arguments);\n    };\n\n    var _GDALBuildVRT = Module[\"_GDALBuildVRT\"] = function () {\n      return (_GDALBuildVRT = Module[\"_GDALBuildVRT\"] = Module[\"asm\"][\"If\"]).apply(null, arguments);\n    };\n\n    var _GDALBuildVRTOptionsFree = Module[\"_GDALBuildVRTOptionsFree\"] = function () {\n      return (_GDALBuildVRTOptionsFree = Module[\"_GDALBuildVRTOptionsFree\"] = Module[\"asm\"][\"Jf\"]).apply(null, arguments);\n    };\n\n    var _GDALBuildVRTOptionsNew = Module[\"_GDALBuildVRTOptionsNew\"] = function () {\n      return (_GDALBuildVRTOptionsNew = Module[\"_GDALBuildVRTOptionsNew\"] = Module[\"asm\"][\"Kf\"]).apply(null, arguments);\n    };\n\n    var _GDALDEMProcessing = Module[\"_GDALDEMProcessing\"] = function () {\n      return (_GDALDEMProcessing = Module[\"_GDALDEMProcessing\"] = Module[\"asm\"][\"Lf\"]).apply(null, arguments);\n    };\n\n    var _GDALDEMProcessingOptionsNew = Module[\"_GDALDEMProcessingOptionsNew\"] = function () {\n      return (_GDALDEMProcessingOptionsNew = Module[\"_GDALDEMProcessingOptionsNew\"] = Module[\"asm\"][\"Mf\"]).apply(null, arguments);\n    };\n\n    var _GDALDEMProcessingOptionsFree = Module[\"_GDALDEMProcessingOptionsFree\"] = function () {\n      return (_GDALDEMProcessingOptionsFree = Module[\"_GDALDEMProcessingOptionsFree\"] = Module[\"asm\"][\"Nf\"]).apply(null, arguments);\n    };\n\n    var _GDALWarp = Module[\"_GDALWarp\"] = function () {\n      return (_GDALWarp = Module[\"_GDALWarp\"] = Module[\"asm\"][\"Of\"]).apply(null, arguments);\n    };\n\n    var _GDALWarpAppOptionsNew = Module[\"_GDALWarpAppOptionsNew\"] = function () {\n      return (_GDALWarpAppOptionsNew = Module[\"_GDALWarpAppOptionsNew\"] = Module[\"asm\"][\"Pf\"]).apply(null, arguments);\n    };\n\n    var _GDALWarpAppOptionsFree = Module[\"_GDALWarpAppOptionsFree\"] = function () {\n      return (_GDALWarpAppOptionsFree = Module[\"_GDALWarpAppOptionsFree\"] = Module[\"asm\"][\"Qf\"]).apply(null, arguments);\n    };\n\n    var _GDALWarpAppOptionsSetProgress = Module[\"_GDALWarpAppOptionsSetProgress\"] = function () {\n      return (_GDALWarpAppOptionsSetProgress = Module[\"_GDALWarpAppOptionsSetProgress\"] = Module[\"asm\"][\"Rf\"]).apply(null, arguments);\n    };\n\n    var _GDALVectorTranslate = Module[\"_GDALVectorTranslate\"] = function () {\n      return (_GDALVectorTranslate = Module[\"_GDALVectorTranslate\"] = Module[\"asm\"][\"Sf\"]).apply(null, arguments);\n    };\n\n    var _GDALVectorTranslateOptionsFree = Module[\"_GDALVectorTranslateOptionsFree\"] = function () {\n      return (_GDALVectorTranslateOptionsFree = Module[\"_GDALVectorTranslateOptionsFree\"] = Module[\"asm\"][\"Tf\"]).apply(null, arguments);\n    };\n\n    var _GDALVectorTranslateOptionsNew = Module[\"_GDALVectorTranslateOptionsNew\"] = function () {\n      return (_GDALVectorTranslateOptionsNew = Module[\"_GDALVectorTranslateOptionsNew\"] = Module[\"asm\"][\"Uf\"]).apply(null, arguments);\n    };\n\n    var _GDALAllRegister = Module[\"_GDALAllRegister\"] = function () {\n      return (_GDALAllRegister = Module[\"_GDALAllRegister\"] = Module[\"asm\"][\"Vf\"]).apply(null, arguments);\n    };\n\n    var _GDALGetRasterXSize = Module[\"_GDALGetRasterXSize\"] = function () {\n      return (_GDALGetRasterXSize = Module[\"_GDALGetRasterXSize\"] = Module[\"asm\"][\"Wf\"]).apply(null, arguments);\n    };\n\n    var _GDALGetRasterYSize = Module[\"_GDALGetRasterYSize\"] = function () {\n      return (_GDALGetRasterYSize = Module[\"_GDALGetRasterYSize\"] = Module[\"asm\"][\"Xf\"]).apply(null, arguments);\n    };\n\n    var _GDALGetRasterBand = Module[\"_GDALGetRasterBand\"] = function () {\n      return (_GDALGetRasterBand = Module[\"_GDALGetRasterBand\"] = Module[\"asm\"][\"Yf\"]).apply(null, arguments);\n    };\n\n    var _GDALGetRasterCount = Module[\"_GDALGetRasterCount\"] = function () {\n      return (_GDALGetRasterCount = Module[\"_GDALGetRasterCount\"] = Module[\"asm\"][\"Zf\"]).apply(null, arguments);\n    };\n\n    var _GDALGetProjectionRef = Module[\"_GDALGetProjectionRef\"] = function () {\n      return (_GDALGetProjectionRef = Module[\"_GDALGetProjectionRef\"] = Module[\"asm\"][\"_f\"]).apply(null, arguments);\n    };\n\n    var _GDALSetProjection = Module[\"_GDALSetProjection\"] = function () {\n      return (_GDALSetProjection = Module[\"_GDALSetProjection\"] = Module[\"asm\"][\"$f\"]).apply(null, arguments);\n    };\n\n    var _GDALGetGeoTransform = Module[\"_GDALGetGeoTransform\"] = function () {\n      return (_GDALGetGeoTransform = Module[\"_GDALGetGeoTransform\"] = Module[\"asm\"][\"ag\"]).apply(null, arguments);\n    };\n\n    var _GDALSetGeoTransform = Module[\"_GDALSetGeoTransform\"] = function () {\n      return (_GDALSetGeoTransform = Module[\"_GDALSetGeoTransform\"] = Module[\"asm\"][\"bg\"]).apply(null, arguments);\n    };\n\n    var _GDALGetDatasetDriver = Module[\"_GDALGetDatasetDriver\"] = function () {\n      return (_GDALGetDatasetDriver = Module[\"_GDALGetDatasetDriver\"] = Module[\"asm\"][\"cg\"]).apply(null, arguments);\n    };\n\n    var _GDALGetFileList = Module[\"_GDALGetFileList\"] = function () {\n      return (_GDALGetFileList = Module[\"_GDALGetFileList\"] = Module[\"asm\"][\"dg\"]).apply(null, arguments);\n    };\n\n    var _GDALOpen = Module[\"_GDALOpen\"] = function () {\n      return (_GDALOpen = Module[\"_GDALOpen\"] = Module[\"asm\"][\"eg\"]).apply(null, arguments);\n    };\n\n    var _GDALOpenEx = Module[\"_GDALOpenEx\"] = function () {\n      return (_GDALOpenEx = Module[\"_GDALOpenEx\"] = Module[\"asm\"][\"fg\"]).apply(null, arguments);\n    };\n\n    var _GDALClose = Module[\"_GDALClose\"] = function () {\n      return (_GDALClose = Module[\"_GDALClose\"] = Module[\"asm\"][\"gg\"]).apply(null, arguments);\n    };\n\n    var _GDALDatasetGetLayerCount = Module[\"_GDALDatasetGetLayerCount\"] = function () {\n      return (_GDALDatasetGetLayerCount = Module[\"_GDALDatasetGetLayerCount\"] = Module[\"asm\"][\"hg\"]).apply(null, arguments);\n    };\n\n    var _GDALDatasetGetLayer = Module[\"_GDALDatasetGetLayer\"] = function () {\n      return (_GDALDatasetGetLayer = Module[\"_GDALDatasetGetLayer\"] = Module[\"asm\"][\"ig\"]).apply(null, arguments);\n    };\n\n    var _GDALCreate = Module[\"_GDALCreate\"] = function () {\n      return (_GDALCreate = Module[\"_GDALCreate\"] = Module[\"asm\"][\"jg\"]).apply(null, arguments);\n    };\n\n    var _GDALCreateCopy = Module[\"_GDALCreateCopy\"] = function () {\n      return (_GDALCreateCopy = Module[\"_GDALCreateCopy\"] = Module[\"asm\"][\"kg\"]).apply(null, arguments);\n    };\n\n    var _GDALGetDriverShortName = Module[\"_GDALGetDriverShortName\"] = function () {\n      return (_GDALGetDriverShortName = Module[\"_GDALGetDriverShortName\"] = Module[\"asm\"][\"lg\"]).apply(null, arguments);\n    };\n\n    var _GDALGetDriverLongName = Module[\"_GDALGetDriverLongName\"] = function () {\n      return (_GDALGetDriverLongName = Module[\"_GDALGetDriverLongName\"] = Module[\"asm\"][\"mg\"]).apply(null, arguments);\n    };\n\n    var _GDALGetDriverCount = Module[\"_GDALGetDriverCount\"] = function () {\n      return (_GDALGetDriverCount = Module[\"_GDALGetDriverCount\"] = Module[\"asm\"][\"ng\"]).apply(null, arguments);\n    };\n\n    var _GDALGetDriver = Module[\"_GDALGetDriver\"] = function () {\n      return (_GDALGetDriver = Module[\"_GDALGetDriver\"] = Module[\"asm\"][\"og\"]).apply(null, arguments);\n    };\n\n    var _GDALGetDriverByName = Module[\"_GDALGetDriverByName\"] = function () {\n      return (_GDALGetDriverByName = Module[\"_GDALGetDriverByName\"] = Module[\"asm\"][\"pg\"]).apply(null, arguments);\n    };\n\n    var _GDALGetDescription = Module[\"_GDALGetDescription\"] = function () {\n      return (_GDALGetDescription = Module[\"_GDALGetDescription\"] = Module[\"asm\"][\"qg\"]).apply(null, arguments);\n    };\n\n    var _GDALGetMetadataItem = Module[\"_GDALGetMetadataItem\"] = function () {\n      return (_GDALGetMetadataItem = Module[\"_GDALGetMetadataItem\"] = Module[\"asm\"][\"rg\"]).apply(null, arguments);\n    };\n\n    var _GDALGetRasterDataType = Module[\"_GDALGetRasterDataType\"] = function () {\n      return (_GDALGetRasterDataType = Module[\"_GDALGetRasterDataType\"] = Module[\"asm\"][\"sg\"]).apply(null, arguments);\n    };\n\n    var _GDALGetRasterNoDataValue = Module[\"_GDALGetRasterNoDataValue\"] = function () {\n      return (_GDALGetRasterNoDataValue = Module[\"_GDALGetRasterNoDataValue\"] = Module[\"asm\"][\"tg\"]).apply(null, arguments);\n    };\n\n    var _GDALGetRasterMaximum = Module[\"_GDALGetRasterMaximum\"] = function () {\n      return (_GDALGetRasterMaximum = Module[\"_GDALGetRasterMaximum\"] = Module[\"asm\"][\"ug\"]).apply(null, arguments);\n    };\n\n    var _GDALGetRasterMinimum = Module[\"_GDALGetRasterMinimum\"] = function () {\n      return (_GDALGetRasterMinimum = Module[\"_GDALGetRasterMinimum\"] = Module[\"asm\"][\"vg\"]).apply(null, arguments);\n    };\n\n    var _GDALGetRasterStatistics = Module[\"_GDALGetRasterStatistics\"] = function () {\n      return (_GDALGetRasterStatistics = Module[\"_GDALGetRasterStatistics\"] = Module[\"asm\"][\"wg\"]).apply(null, arguments);\n    };\n\n    var _GDALSetCacheMax = Module[\"_GDALSetCacheMax\"] = function () {\n      return (_GDALSetCacheMax = Module[\"_GDALSetCacheMax\"] = Module[\"asm\"][\"xg\"]).apply(null, arguments);\n    };\n\n    var _OGR_DS_GetLayerCount = Module[\"_OGR_DS_GetLayerCount\"] = function () {\n      return (_OGR_DS_GetLayerCount = Module[\"_OGR_DS_GetLayerCount\"] = Module[\"asm\"][\"yg\"]).apply(null, arguments);\n    };\n\n    var _OGR_DS_GetLayer = Module[\"_OGR_DS_GetLayer\"] = function () {\n      return (_OGR_DS_GetLayer = Module[\"_OGR_DS_GetLayer\"] = Module[\"asm\"][\"zg\"]).apply(null, arguments);\n    };\n\n    var _OGR_DS_GetName = Module[\"_OGR_DS_GetName\"] = function () {\n      return (_OGR_DS_GetName = Module[\"_OGR_DS_GetName\"] = Module[\"asm\"][\"Ag\"]).apply(null, arguments);\n    };\n\n    var _OGR_DS_GetDriver = Module[\"_OGR_DS_GetDriver\"] = function () {\n      return (_OGR_DS_GetDriver = Module[\"_OGR_DS_GetDriver\"] = Module[\"asm\"][\"Bg\"]).apply(null, arguments);\n    };\n\n    var _OGR_L_GetName = Module[\"_OGR_L_GetName\"] = function () {\n      return (_OGR_L_GetName = Module[\"_OGR_L_GetName\"] = Module[\"asm\"][\"Cg\"]).apply(null, arguments);\n    };\n\n    var _OGR_Dr_GetName = Module[\"_OGR_Dr_GetName\"] = function () {\n      return (_OGR_Dr_GetName = Module[\"_OGR_Dr_GetName\"] = Module[\"asm\"][\"Dg\"]).apply(null, arguments);\n    };\n\n    var _OGRGetDriverCount = Module[\"_OGRGetDriverCount\"] = function () {\n      return (_OGRGetDriverCount = Module[\"_OGRGetDriverCount\"] = Module[\"asm\"][\"Eg\"]).apply(null, arguments);\n    };\n\n    var _OGRGetDriver = Module[\"_OGRGetDriver\"] = function () {\n      return (_OGRGetDriver = Module[\"_OGRGetDriver\"] = Module[\"asm\"][\"Fg\"]).apply(null, arguments);\n    };\n\n    var _CPLError = Module[\"_CPLError\"] = function () {\n      return (_CPLError = Module[\"_CPLError\"] = Module[\"asm\"][\"Gg\"]).apply(null, arguments);\n    };\n\n    var _CPLErrorReset = Module[\"_CPLErrorReset\"] = function () {\n      return (_CPLErrorReset = Module[\"_CPLErrorReset\"] = Module[\"asm\"][\"Hg\"]).apply(null, arguments);\n    };\n\n    var _CPLGetLastErrorNo = Module[\"_CPLGetLastErrorNo\"] = function () {\n      return (_CPLGetLastErrorNo = Module[\"_CPLGetLastErrorNo\"] = Module[\"asm\"][\"Ig\"]).apply(null, arguments);\n    };\n\n    var _CPLGetLastErrorType = Module[\"_CPLGetLastErrorType\"] = function () {\n      return (_CPLGetLastErrorType = Module[\"_CPLGetLastErrorType\"] = Module[\"asm\"][\"Jg\"]).apply(null, arguments);\n    };\n\n    var _CPLGetLastErrorMsg = Module[\"_CPLGetLastErrorMsg\"] = function () {\n      return (_CPLGetLastErrorMsg = Module[\"_CPLGetLastErrorMsg\"] = Module[\"asm\"][\"Kg\"]).apply(null, arguments);\n    };\n\n    var _CPLQuietErrorHandler = Module[\"_CPLQuietErrorHandler\"] = function () {\n      return (_CPLQuietErrorHandler = Module[\"_CPLQuietErrorHandler\"] = Module[\"asm\"][\"Lg\"]).apply(null, arguments);\n    };\n\n    var _CPLSetErrorHandler = Module[\"_CPLSetErrorHandler\"] = function () {\n      return (_CPLSetErrorHandler = Module[\"_CPLSetErrorHandler\"] = Module[\"asm\"][\"Mg\"]).apply(null, arguments);\n    };\n\n    var _CSLCount = Module[\"_CSLCount\"] = function () {\n      return (_CSLCount = Module[\"_CSLCount\"] = Module[\"asm\"][\"Ng\"]).apply(null, arguments);\n    };\n\n    var _ntohs = Module[\"_ntohs\"] = function () {\n      return (_ntohs = Module[\"_ntohs\"] = Module[\"asm\"][\"Og\"]).apply(null, arguments);\n    };\n\n    var _htons = Module[\"_htons\"] = function () {\n      return (_htons = Module[\"_htons\"] = Module[\"asm\"][\"Pg\"]).apply(null, arguments);\n    };\n\n    var ___errno_location = Module[\"___errno_location\"] = function () {\n      return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"Qg\"]).apply(null, arguments);\n    };\n\n    var __get_tzname = Module[\"__get_tzname\"] = function () {\n      return (__get_tzname = Module[\"__get_tzname\"] = Module[\"asm\"][\"Rg\"]).apply(null, arguments);\n    };\n\n    var __get_daylight = Module[\"__get_daylight\"] = function () {\n      return (__get_daylight = Module[\"__get_daylight\"] = Module[\"asm\"][\"Sg\"]).apply(null, arguments);\n    };\n\n    var __get_timezone = Module[\"__get_timezone\"] = function () {\n      return (__get_timezone = Module[\"__get_timezone\"] = Module[\"asm\"][\"Tg\"]).apply(null, arguments);\n    };\n\n    var _setThrew = Module[\"_setThrew\"] = function () {\n      return (_setThrew = Module[\"_setThrew\"] = Module[\"asm\"][\"Ug\"]).apply(null, arguments);\n    };\n\n    var __ZSt18uncaught_exceptionv = Module[\"__ZSt18uncaught_exceptionv\"] = function () {\n      return (__ZSt18uncaught_exceptionv = Module[\"__ZSt18uncaught_exceptionv\"] = Module[\"asm\"][\"Vg\"]).apply(null, arguments);\n    };\n\n    var ___cxa_can_catch = Module[\"___cxa_can_catch\"] = function () {\n      return (___cxa_can_catch = Module[\"___cxa_can_catch\"] = Module[\"asm\"][\"Wg\"]).apply(null, arguments);\n    };\n\n    var ___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = function () {\n      return (___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = Module[\"asm\"][\"Xg\"]).apply(null, arguments);\n    };\n\n    var _malloc = Module[\"_malloc\"] = function () {\n      return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"Yg\"]).apply(null, arguments);\n    };\n\n    var _free = Module[\"_free\"] = function () {\n      return (_free = Module[\"_free\"] = Module[\"asm\"][\"Zg\"]).apply(null, arguments);\n    };\n\n    var _realloc = Module[\"_realloc\"] = function () {\n      return (_realloc = Module[\"_realloc\"] = Module[\"asm\"][\"_g\"]).apply(null, arguments);\n    };\n\n    var _memalign = Module[\"_memalign\"] = function () {\n      return (_memalign = Module[\"_memalign\"] = Module[\"asm\"][\"$g\"]).apply(null, arguments);\n    };\n\n    var _memset = Module[\"_memset\"] = function () {\n      return (_memset = Module[\"_memset\"] = Module[\"asm\"][\"ah\"]).apply(null, arguments);\n    };\n\n    var dynCall_v = Module[\"dynCall_v\"] = function () {\n      return (dynCall_v = Module[\"dynCall_v\"] = Module[\"asm\"][\"bh\"]).apply(null, arguments);\n    };\n\n    var dynCall_vi = Module[\"dynCall_vi\"] = function () {\n      return (dynCall_vi = Module[\"dynCall_vi\"] = Module[\"asm\"][\"ch\"]).apply(null, arguments);\n    };\n\n    var dynCall_vii = Module[\"dynCall_vii\"] = function () {\n      return (dynCall_vii = Module[\"dynCall_vii\"] = Module[\"asm\"][\"dh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viii = Module[\"dynCall_viii\"] = function () {\n      return (dynCall_viii = Module[\"dynCall_viii\"] = Module[\"asm\"][\"eh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiii = Module[\"dynCall_viiii\"] = function () {\n      return (dynCall_viiii = Module[\"dynCall_viiii\"] = Module[\"asm\"][\"fh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiii = Module[\"dynCall_viiiii\"] = function () {\n      return (dynCall_viiiii = Module[\"dynCall_viiiii\"] = Module[\"asm\"][\"gh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = function () {\n      return (dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = Module[\"asm\"][\"hh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = function () {\n      return (dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = Module[\"asm\"][\"ih\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = function () {\n      return (dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = Module[\"asm\"][\"jh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = function () {\n      return (dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = Module[\"asm\"][\"kh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = function () {\n      return (dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = Module[\"asm\"][\"lh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = function () {\n      return (dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = Module[\"asm\"][\"mh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiiiiiiiii = Module[\"dynCall_viiiiiiiiiiii\"] = function () {\n      return (dynCall_viiiiiiiiiiii = Module[\"dynCall_viiiiiiiiiiii\"] = Module[\"asm\"][\"nh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiiiiiiiiii = Module[\"dynCall_viiiiiiiiiiiii\"] = function () {\n      return (dynCall_viiiiiiiiiiiii = Module[\"dynCall_viiiiiiiiiiiii\"] = Module[\"asm\"][\"oh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiiiiiiiiiii = Module[\"dynCall_viiiiiiiiiiiiii\"] = function () {\n      return (dynCall_viiiiiiiiiiiiii = Module[\"dynCall_viiiiiiiiiiiiii\"] = Module[\"asm\"][\"ph\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiiiiiiiiiiii = Module[\"dynCall_viiiiiiiiiiiiiii\"] = function () {\n      return (dynCall_viiiiiiiiiiiiiii = Module[\"dynCall_viiiiiiiiiiiiiii\"] = Module[\"asm\"][\"qh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiiji = Module[\"dynCall_viiiiiji\"] = function () {\n      return (dynCall_viiiiiji = Module[\"dynCall_viiiiiji\"] = Module[\"asm\"][\"rh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiiddiiiiiii = Module[\"dynCall_viiiiiddiiiiiii\"] = function () {\n      return (dynCall_viiiiiddiiiiiii = Module[\"dynCall_viiiiiddiiiiiii\"] = Module[\"asm\"][\"sh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiidddddi = Module[\"dynCall_viiiiidddddi\"] = function () {\n      return (dynCall_viiiiidddddi = Module[\"dynCall_viiiiidddddi\"] = Module[\"asm\"][\"th\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiidddddddi = Module[\"dynCall_viiiiidddddddi\"] = function () {\n      return (dynCall_viiiiidddddddi = Module[\"dynCall_viiiiidddddddi\"] = Module[\"asm\"][\"uh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiidddddddddddddddi = Module[\"dynCall_viiiiidddddddddddddddi\"] = function () {\n      return (dynCall_viiiiidddddddddddddddi = Module[\"dynCall_viiiiidddddddddddddddi\"] = Module[\"asm\"][\"vh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiij = Module[\"dynCall_viiiij\"] = function () {\n      return (dynCall_viiiij = Module[\"dynCall_viiiij\"] = Module[\"asm\"][\"wh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiid = Module[\"dynCall_viiiid\"] = function () {\n      return (dynCall_viiiid = Module[\"dynCall_viiiid\"] = Module[\"asm\"][\"xh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiidi = Module[\"dynCall_viiiidi\"] = function () {\n      return (dynCall_viiiidi = Module[\"dynCall_viiiidi\"] = Module[\"asm\"][\"yh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiidiiii = Module[\"dynCall_viiiidiiii\"] = function () {\n      return (dynCall_viiiidiiii = Module[\"dynCall_viiiidiiii\"] = Module[\"asm\"][\"zh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiiddidid = Module[\"dynCall_viiiiddidid\"] = function () {\n      return (dynCall_viiiiddidid = Module[\"dynCall_viiiiddidid\"] = Module[\"asm\"][\"Ah\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiidddi = Module[\"dynCall_viiiidddi\"] = function () {\n      return (dynCall_viiiidddi = Module[\"dynCall_viiiidddi\"] = Module[\"asm\"][\"Bh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiidddddddi = Module[\"dynCall_viiiidddddddi\"] = function () {\n      return (dynCall_viiiidddddddi = Module[\"dynCall_viiiidddddddi\"] = Module[\"asm\"][\"Ch\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiidddddddd = Module[\"dynCall_viiiidddddddd\"] = function () {\n      return (dynCall_viiiidddddddd = Module[\"dynCall_viiiidddddddd\"] = Module[\"asm\"][\"Dh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiij = Module[\"dynCall_viiij\"] = function () {\n      return (dynCall_viiij = Module[\"dynCall_viiij\"] = Module[\"asm\"][\"Eh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiid = Module[\"dynCall_viiid\"] = function () {\n      return (dynCall_viiid = Module[\"dynCall_viiid\"] = Module[\"asm\"][\"Fh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiidi = Module[\"dynCall_viiidi\"] = function () {\n      return (dynCall_viiidi = Module[\"dynCall_viiidi\"] = Module[\"asm\"][\"Gh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiiddi = Module[\"dynCall_viiiddi\"] = function () {\n      return (dynCall_viiiddi = Module[\"dynCall_viiiddi\"] = Module[\"asm\"][\"Hh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viij = Module[\"dynCall_viij\"] = function () {\n      return (dynCall_viij = Module[\"dynCall_viij\"] = Module[\"asm\"][\"Ih\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiji = Module[\"dynCall_viiji\"] = function () {\n      return (dynCall_viiji = Module[\"dynCall_viiji\"] = Module[\"asm\"][\"Jh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viijii = Module[\"dynCall_viijii\"] = function () {\n      return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"Kh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viijj = Module[\"dynCall_viijj\"] = function () {\n      return (dynCall_viijj = Module[\"dynCall_viijj\"] = Module[\"asm\"][\"Lh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viijji = Module[\"dynCall_viijji\"] = function () {\n      return (dynCall_viijji = Module[\"dynCall_viijji\"] = Module[\"asm\"][\"Mh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viijjji = Module[\"dynCall_viijjji\"] = function () {\n      return (dynCall_viijjji = Module[\"dynCall_viijjji\"] = Module[\"asm\"][\"Nh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viid = Module[\"dynCall_viid\"] = function () {\n      return (dynCall_viid = Module[\"dynCall_viid\"] = Module[\"asm\"][\"Oh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viidi = Module[\"dynCall_viidi\"] = function () {\n      return (dynCall_viidi = Module[\"dynCall_viidi\"] = Module[\"asm\"][\"Ph\"]).apply(null, arguments);\n    };\n\n    var dynCall_viidii = Module[\"dynCall_viidii\"] = function () {\n      return (dynCall_viidii = Module[\"dynCall_viidii\"] = Module[\"asm\"][\"Qh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viidiii = Module[\"dynCall_viidiii\"] = function () {\n      return (dynCall_viidiii = Module[\"dynCall_viidiii\"] = Module[\"asm\"][\"Rh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viidd = Module[\"dynCall_viidd\"] = function () {\n      return (dynCall_viidd = Module[\"dynCall_viidd\"] = Module[\"asm\"][\"Sh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiddid = Module[\"dynCall_viiddid\"] = function () {\n      return (dynCall_viiddid = Module[\"dynCall_viiddid\"] = Module[\"asm\"][\"Th\"]).apply(null, arguments);\n    };\n\n    var dynCall_viiddd = Module[\"dynCall_viiddd\"] = function () {\n      return (dynCall_viiddd = Module[\"dynCall_viiddd\"] = Module[\"asm\"][\"Uh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viidddddd = Module[\"dynCall_viidddddd\"] = function () {\n      return (dynCall_viidddddd = Module[\"dynCall_viidddddd\"] = Module[\"asm\"][\"Vh\"]).apply(null, arguments);\n    };\n\n    var dynCall_vij = Module[\"dynCall_vij\"] = function () {\n      return (dynCall_vij = Module[\"dynCall_vij\"] = Module[\"asm\"][\"Wh\"]).apply(null, arguments);\n    };\n\n    var dynCall_viji = Module[\"dynCall_viji\"] = function () {\n      return (dynCall_viji = Module[\"dynCall_viji\"] = Module[\"asm\"][\"Xh\"]).apply(null, arguments);\n    };\n\n    var dynCall_vijii = Module[\"dynCall_vijii\"] = function () {\n      return (dynCall_vijii = Module[\"dynCall_vijii\"] = Module[\"asm\"][\"Yh\"]).apply(null, arguments);\n    };\n\n    var dynCall_vijiii = Module[\"dynCall_vijiii\"] = function () {\n      return (dynCall_vijiii = Module[\"dynCall_vijiii\"] = Module[\"asm\"][\"Zh\"]).apply(null, arguments);\n    };\n\n    var dynCall_vijiidddi = Module[\"dynCall_vijiidddi\"] = function () {\n      return (dynCall_vijiidddi = Module[\"dynCall_vijiidddi\"] = Module[\"asm\"][\"_h\"]).apply(null, arguments);\n    };\n\n    var dynCall_vijid = Module[\"dynCall_vijid\"] = function () {\n      return (dynCall_vijid = Module[\"dynCall_vijid\"] = Module[\"asm\"][\"$h\"]).apply(null, arguments);\n    };\n\n    var dynCall_vijjj = Module[\"dynCall_vijjj\"] = function () {\n      return (dynCall_vijjj = Module[\"dynCall_vijjj\"] = Module[\"asm\"][\"ai\"]).apply(null, arguments);\n    };\n\n    var dynCall_vif = Module[\"dynCall_vif\"] = function () {\n      return (dynCall_vif = Module[\"dynCall_vif\"] = Module[\"asm\"][\"bi\"]).apply(null, arguments);\n    };\n\n    var dynCall_vid = Module[\"dynCall_vid\"] = function () {\n      return (dynCall_vid = Module[\"dynCall_vid\"] = Module[\"asm\"][\"ci\"]).apply(null, arguments);\n    };\n\n    var dynCall_vidi = Module[\"dynCall_vidi\"] = function () {\n      return (dynCall_vidi = Module[\"dynCall_vidi\"] = Module[\"asm\"][\"di\"]).apply(null, arguments);\n    };\n\n    var dynCall_vidii = Module[\"dynCall_vidii\"] = function () {\n      return (dynCall_vidii = Module[\"dynCall_vidii\"] = Module[\"asm\"][\"ei\"]).apply(null, arguments);\n    };\n\n    var dynCall_vidiii = Module[\"dynCall_vidiii\"] = function () {\n      return (dynCall_vidiii = Module[\"dynCall_vidiii\"] = Module[\"asm\"][\"fi\"]).apply(null, arguments);\n    };\n\n    var dynCall_vidiiii = Module[\"dynCall_vidiiii\"] = function () {\n      return (dynCall_vidiiii = Module[\"dynCall_vidiiii\"] = Module[\"asm\"][\"gi\"]).apply(null, arguments);\n    };\n\n    var dynCall_vidd = Module[\"dynCall_vidd\"] = function () {\n      return (dynCall_vidd = Module[\"dynCall_vidd\"] = Module[\"asm\"][\"hi\"]).apply(null, arguments);\n    };\n\n    var dynCall_viddi = Module[\"dynCall_viddi\"] = function () {\n      return (dynCall_viddi = Module[\"dynCall_viddi\"] = Module[\"asm\"][\"ii\"]).apply(null, arguments);\n    };\n\n    var dynCall_viddd = Module[\"dynCall_viddd\"] = function () {\n      return (dynCall_viddd = Module[\"dynCall_viddd\"] = Module[\"asm\"][\"ji\"]).apply(null, arguments);\n    };\n\n    var dynCall_vidddi = Module[\"dynCall_vidddi\"] = function () {\n      return (dynCall_vidddi = Module[\"dynCall_vidddi\"] = Module[\"asm\"][\"ki\"]).apply(null, arguments);\n    };\n\n    var dynCall_vidddd = Module[\"dynCall_vidddd\"] = function () {\n      return (dynCall_vidddd = Module[\"dynCall_vidddd\"] = Module[\"asm\"][\"li\"]).apply(null, arguments);\n    };\n\n    var dynCall_viddddi = Module[\"dynCall_viddddi\"] = function () {\n      return (dynCall_viddddi = Module[\"dynCall_viddddi\"] = Module[\"asm\"][\"mi\"]).apply(null, arguments);\n    };\n\n    var dynCall_viddddii = Module[\"dynCall_viddddii\"] = function () {\n      return (dynCall_viddddii = Module[\"dynCall_viddddii\"] = Module[\"asm\"][\"ni\"]).apply(null, arguments);\n    };\n\n    var dynCall_viddddiii = Module[\"dynCall_viddddiii\"] = function () {\n      return (dynCall_viddddiii = Module[\"dynCall_viddddiii\"] = Module[\"asm\"][\"oi\"]).apply(null, arguments);\n    };\n\n    var dynCall_vidddddd = Module[\"dynCall_vidddddd\"] = function () {\n      return (dynCall_vidddddd = Module[\"dynCall_vidddddd\"] = Module[\"asm\"][\"pi\"]).apply(null, arguments);\n    };\n\n    var dynCall_vj = Module[\"dynCall_vj\"] = function () {\n      return (dynCall_vj = Module[\"dynCall_vj\"] = Module[\"asm\"][\"qi\"]).apply(null, arguments);\n    };\n\n    var dynCall_vd = Module[\"dynCall_vd\"] = function () {\n      return (dynCall_vd = Module[\"dynCall_vd\"] = Module[\"asm\"][\"ri\"]).apply(null, arguments);\n    };\n\n    var dynCall_vdddi = Module[\"dynCall_vdddi\"] = function () {\n      return (dynCall_vdddi = Module[\"dynCall_vdddi\"] = Module[\"asm\"][\"si\"]).apply(null, arguments);\n    };\n\n    var dynCall_vddddii = Module[\"dynCall_vddddii\"] = function () {\n      return (dynCall_vddddii = Module[\"dynCall_vddddii\"] = Module[\"asm\"][\"ti\"]).apply(null, arguments);\n    };\n\n    var dynCall_i = Module[\"dynCall_i\"] = function () {\n      return (dynCall_i = Module[\"dynCall_i\"] = Module[\"asm\"][\"ui\"]).apply(null, arguments);\n    };\n\n    var dynCall_ii = Module[\"dynCall_ii\"] = function () {\n      return (dynCall_ii = Module[\"dynCall_ii\"] = Module[\"asm\"][\"vi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iii = Module[\"dynCall_iii\"] = function () {\n      return (dynCall_iii = Module[\"dynCall_iii\"] = Module[\"asm\"][\"wi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiii = Module[\"dynCall_iiii\"] = function () {\n      return (dynCall_iiii = Module[\"dynCall_iiii\"] = Module[\"asm\"][\"xi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiii = Module[\"dynCall_iiiii\"] = function () {\n      return (dynCall_iiiii = Module[\"dynCall_iiiii\"] = Module[\"asm\"][\"yi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = function () {\n      return (dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = Module[\"asm\"][\"zi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = function () {\n      return (dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = Module[\"asm\"][\"Ai\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = function () {\n      return (dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = Module[\"asm\"][\"Bi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = function () {\n      return (dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = Module[\"asm\"][\"Ci\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiii = Module[\"dynCall_iiiiiiiiii\"] = function () {\n      return (dynCall_iiiiiiiiii = Module[\"dynCall_iiiiiiiiii\"] = Module[\"asm\"][\"Di\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiii = Module[\"dynCall_iiiiiiiiiii\"] = function () {\n      return (dynCall_iiiiiiiiiii = Module[\"dynCall_iiiiiiiiiii\"] = Module[\"asm\"][\"Ei\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiii\"] = function () {\n      return (dynCall_iiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiii\"] = Module[\"asm\"][\"Fi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiii\"] = function () {\n      return (dynCall_iiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiii\"] = Module[\"asm\"][\"Gi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiiii\"] = function () {\n      return (dynCall_iiiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiiii\"] = Module[\"asm\"][\"Hi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiiiii\"] = function () {\n      return (dynCall_iiiiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiiiii\"] = Module[\"asm\"][\"Ii\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiiiiii\"] = function () {\n      return (dynCall_iiiiiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiiiiii\"] = Module[\"asm\"][\"Ji\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiiiiiiiiii\"] = function () {\n      return (dynCall_iiiiiiiiiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiiiiiiiiii\"] = Module[\"asm\"][\"Ki\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiiiiiijj = Module[\"dynCall_iiiiiiiiiiiiiijj\"] = function () {\n      return (dynCall_iiiiiiiiiiiiiijj = Module[\"dynCall_iiiiiiiiiiiiiijj\"] = Module[\"asm\"][\"Li\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiiiiijjii = Module[\"dynCall_iiiiiiiiiiiiijjii\"] = function () {\n      return (dynCall_iiiiiiiiiiiiijjii = Module[\"dynCall_iiiiiiiiiiiiijjii\"] = Module[\"asm\"][\"Mi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiiiiijjji = Module[\"dynCall_iiiiiiiiiiiiijjji\"] = function () {\n      return (dynCall_iiiiiiiiiiiiijjji = Module[\"dynCall_iiiiiiiiiiiiijjji\"] = Module[\"asm\"][\"Ni\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiiiiid = Module[\"dynCall_iiiiiiiiiiiiid\"] = function () {\n      return (dynCall_iiiiiiiiiiiiid = Module[\"dynCall_iiiiiiiiiiiiid\"] = Module[\"asm\"][\"Oi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiiiid = Module[\"dynCall_iiiiiiiiiiiid\"] = function () {\n      return (dynCall_iiiiiiiiiiiid = Module[\"dynCall_iiiiiiiiiiiid\"] = Module[\"asm\"][\"Pi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiiijji = Module[\"dynCall_iiiiiiiiiiijji\"] = function () {\n      return (dynCall_iiiiiiiiiiijji = Module[\"dynCall_iiiiiiiiiiijji\"] = Module[\"asm\"][\"Qi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiiiddd = Module[\"dynCall_iiiiiiiiiiiddd\"] = function () {\n      return (dynCall_iiiiiiiiiiiddd = Module[\"dynCall_iiiiiiiiiiiddd\"] = Module[\"asm\"][\"Ri\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiijii = Module[\"dynCall_iiiiiiiiiijii\"] = function () {\n      return (dynCall_iiiiiiiiiijii = Module[\"dynCall_iiiiiiiiiijii\"] = Module[\"asm\"][\"Si\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiddi = Module[\"dynCall_iiiiiiiiiddi\"] = function () {\n      return (dynCall_iiiiiiiiiddi = Module[\"dynCall_iiiiiiiiiddi\"] = Module[\"asm\"][\"Ti\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiiddiiiiiid = Module[\"dynCall_iiiiiiiiiddiiiiiid\"] = function () {\n      return (dynCall_iiiiiiiiiddiiiiiid = Module[\"dynCall_iiiiiiiiiddiiiiiid\"] = Module[\"asm\"][\"Ui\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiijii = Module[\"dynCall_iiiiiiiijii\"] = function () {\n      return (dynCall_iiiiiiiijii = Module[\"dynCall_iiiiiiiijii\"] = Module[\"asm\"][\"Vi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiijiii = Module[\"dynCall_iiiiiiiijiii\"] = function () {\n      return (dynCall_iiiiiiiijiii = Module[\"dynCall_iiiiiiiijiii\"] = Module[\"asm\"][\"Wi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiijjji = Module[\"dynCall_iiiiiiiijjji\"] = function () {\n      return (dynCall_iiiiiiiijjji = Module[\"dynCall_iiiiiiiijjji\"] = Module[\"asm\"][\"Xi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiiddd = Module[\"dynCall_iiiiiiiiddd\"] = function () {\n      return (dynCall_iiiiiiiiddd = Module[\"dynCall_iiiiiiiiddd\"] = Module[\"asm\"][\"Yi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiidddii = Module[\"dynCall_iiiiiiiidddii\"] = function () {\n      return (dynCall_iiiiiiiidddii = Module[\"dynCall_iiiiiiiidddii\"] = Module[\"asm\"][\"Zi\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiijii = Module[\"dynCall_iiiiiiijii\"] = function () {\n      return (dynCall_iiiiiiijii = Module[\"dynCall_iiiiiiijii\"] = Module[\"asm\"][\"_i\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiijji = Module[\"dynCall_iiiiiiijji\"] = function () {\n      return (dynCall_iiiiiiijji = Module[\"dynCall_iiiiiiijji\"] = Module[\"asm\"][\"$i\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiffiii = Module[\"dynCall_iiiiiiiffiii\"] = function () {\n      return (dynCall_iiiiiiiffiii = Module[\"dynCall_iiiiiiiffiii\"] = Module[\"asm\"][\"aj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiid = Module[\"dynCall_iiiiiiid\"] = function () {\n      return (dynCall_iiiiiiid = Module[\"dynCall_iiiiiiid\"] = Module[\"asm\"][\"bj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiiddiii = Module[\"dynCall_iiiiiiiddiii\"] = function () {\n      return (dynCall_iiiiiiiddiii = Module[\"dynCall_iiiiiiiddiii\"] = Module[\"asm\"][\"cj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiidddd = Module[\"dynCall_iiiiiiidddd\"] = function () {\n      return (dynCall_iiiiiiidddd = Module[\"dynCall_iiiiiiidddd\"] = Module[\"asm\"][\"dj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiidddddd = Module[\"dynCall_iiiiiiidddddd\"] = function () {\n      return (dynCall_iiiiiiidddddd = Module[\"dynCall_iiiiiiidddddd\"] = Module[\"asm\"][\"ej\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiij = Module[\"dynCall_iiiiiij\"] = function () {\n      return (dynCall_iiiiiij = Module[\"dynCall_iiiiiij\"] = Module[\"asm\"][\"fj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiijii = Module[\"dynCall_iiiiiijii\"] = function () {\n      return (dynCall_iiiiiijii = Module[\"dynCall_iiiiiijii\"] = Module[\"asm\"][\"gj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiijjii = Module[\"dynCall_iiiiiijjii\"] = function () {\n      return (dynCall_iiiiiijjii = Module[\"dynCall_iiiiiijjii\"] = Module[\"asm\"][\"hj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiidii = Module[\"dynCall_iiiiiidii\"] = function () {\n      return (dynCall_iiiiiidii = Module[\"dynCall_iiiiiidii\"] = Module[\"asm\"][\"ij\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiidiii = Module[\"dynCall_iiiiiidiii\"] = function () {\n      return (dynCall_iiiiiidiii = Module[\"dynCall_iiiiiidiii\"] = Module[\"asm\"][\"jj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiddi = Module[\"dynCall_iiiiiiddi\"] = function () {\n      return (dynCall_iiiiiiddi = Module[\"dynCall_iiiiiiddi\"] = Module[\"asm\"][\"kj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiidddd = Module[\"dynCall_iiiiiidddd\"] = function () {\n      return (dynCall_iiiiiidddd = Module[\"dynCall_iiiiiidddd\"] = Module[\"asm\"][\"lj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiddddii = Module[\"dynCall_iiiiiiddddii\"] = function () {\n      return (dynCall_iiiiiiddddii = Module[\"dynCall_iiiiiiddddii\"] = Module[\"asm\"][\"mj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiddddiiii = Module[\"dynCall_iiiiiiddddiiii\"] = function () {\n      return (dynCall_iiiiiiddddiiii = Module[\"dynCall_iiiiiiddddiiii\"] = Module[\"asm\"][\"nj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiddddiiiiii = Module[\"dynCall_iiiiiiddddiiiiii\"] = function () {\n      return (dynCall_iiiiiiddddiiiiii = Module[\"dynCall_iiiiiiddddiiiiii\"] = Module[\"asm\"][\"oj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiiddddiiiidddd = Module[\"dynCall_iiiiiiddddiiiidddd\"] = function () {\n      return (dynCall_iiiiiiddddiiiidddd = Module[\"dynCall_iiiiiiddddiiiidddd\"] = Module[\"asm\"][\"pj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function () {\n      return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"qj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiijiiii = Module[\"dynCall_iiiiijiiii\"] = function () {\n      return (dynCall_iiiiijiiii = Module[\"dynCall_iiiiijiiii\"] = Module[\"asm\"][\"rj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiijiiiii = Module[\"dynCall_iiiiijiiiii\"] = function () {\n      return (dynCall_iiiiijiiiii = Module[\"dynCall_iiiiijiiiii\"] = Module[\"asm\"][\"sj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiijjii = Module[\"dynCall_iiiiijjii\"] = function () {\n      return (dynCall_iiiiijjii = Module[\"dynCall_iiiiijjii\"] = Module[\"asm\"][\"tj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = function () {\n      return (dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = Module[\"asm\"][\"uj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiidi = Module[\"dynCall_iiiiidi\"] = function () {\n      return (dynCall_iiiiidi = Module[\"dynCall_iiiiidi\"] = Module[\"asm\"][\"vj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiidd = Module[\"dynCall_iiiiidd\"] = function () {\n      return (dynCall_iiiiidd = Module[\"dynCall_iiiiidd\"] = Module[\"asm\"][\"wj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiddi = Module[\"dynCall_iiiiiddi\"] = function () {\n      return (dynCall_iiiiiddi = Module[\"dynCall_iiiiiddi\"] = Module[\"asm\"][\"xj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiddidid = Module[\"dynCall_iiiiiddidid\"] = function () {\n      return (dynCall_iiiiiddidid = Module[\"dynCall_iiiiiddidid\"] = Module[\"asm\"][\"yj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiddd = Module[\"dynCall_iiiiiddd\"] = function () {\n      return (dynCall_iiiiiddd = Module[\"dynCall_iiiiiddd\"] = Module[\"asm\"][\"zj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiidddiddd = Module[\"dynCall_iiiiidddiddd\"] = function () {\n      return (dynCall_iiiiidddiddd = Module[\"dynCall_iiiiidddiddd\"] = Module[\"asm\"][\"Aj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiidddd = Module[\"dynCall_iiiiidddd\"] = function () {\n      return (dynCall_iiiiidddd = Module[\"dynCall_iiiiidddd\"] = Module[\"asm\"][\"Bj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiddddd = Module[\"dynCall_iiiiiddddd\"] = function () {\n      return (dynCall_iiiiiddddd = Module[\"dynCall_iiiiiddddd\"] = Module[\"asm\"][\"Cj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiidddddi = Module[\"dynCall_iiiiidddddi\"] = function () {\n      return (dynCall_iiiiidddddi = Module[\"dynCall_iiiiidddddi\"] = Module[\"asm\"][\"Dj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiidddddiidiii = Module[\"dynCall_iiiiidddddiidiii\"] = function () {\n      return (dynCall_iiiiidddddiidiii = Module[\"dynCall_iiiiidddddiidiii\"] = Module[\"asm\"][\"Ej\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiidddddd = Module[\"dynCall_iiiiidddddd\"] = function () {\n      return (dynCall_iiiiidddddd = Module[\"dynCall_iiiiidddddd\"] = Module[\"asm\"][\"Fj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiij = Module[\"dynCall_iiiij\"] = function () {\n      return (dynCall_iiiij = Module[\"dynCall_iiiij\"] = Module[\"asm\"][\"Gj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiji = Module[\"dynCall_iiiiji\"] = function () {\n      return (dynCall_iiiiji = Module[\"dynCall_iiiiji\"] = Module[\"asm\"][\"Hj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiijii = Module[\"dynCall_iiiijii\"] = function () {\n      return (dynCall_iiiijii = Module[\"dynCall_iiiijii\"] = Module[\"asm\"][\"Ij\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiijiiiii = Module[\"dynCall_iiiijiiiii\"] = function () {\n      return (dynCall_iiiijiiiii = Module[\"dynCall_iiiijiiiii\"] = Module[\"asm\"][\"Jj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiijji = Module[\"dynCall_iiiijji\"] = function () {\n      return (dynCall_iiiijji = Module[\"dynCall_iiiijji\"] = Module[\"asm\"][\"Kj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiijjjii = Module[\"dynCall_iiiijjjii\"] = function () {\n      return (dynCall_iiiijjjii = Module[\"dynCall_iiiijjjii\"] = Module[\"asm\"][\"Lj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiid = Module[\"dynCall_iiiid\"] = function () {\n      return (dynCall_iiiid = Module[\"dynCall_iiiid\"] = Module[\"asm\"][\"Mj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiidi = Module[\"dynCall_iiiidi\"] = function () {\n      return (dynCall_iiiidi = Module[\"dynCall_iiiidi\"] = Module[\"asm\"][\"Nj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiidii = Module[\"dynCall_iiiidii\"] = function () {\n      return (dynCall_iiiidii = Module[\"dynCall_iiiidii\"] = Module[\"asm\"][\"Oj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiidd = Module[\"dynCall_iiiidd\"] = function () {\n      return (dynCall_iiiidd = Module[\"dynCall_iiiidd\"] = Module[\"asm\"][\"Pj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiddi = Module[\"dynCall_iiiiddi\"] = function () {\n      return (dynCall_iiiiddi = Module[\"dynCall_iiiiddi\"] = Module[\"asm\"][\"Qj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiddd = Module[\"dynCall_iiiiddd\"] = function () {\n      return (dynCall_iiiiddd = Module[\"dynCall_iiiiddd\"] = Module[\"asm\"][\"Rj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiidddi = Module[\"dynCall_iiiidddi\"] = function () {\n      return (dynCall_iiiidddi = Module[\"dynCall_iiiidddi\"] = Module[\"asm\"][\"Sj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiidddiiii = Module[\"dynCall_iiiidddiiii\"] = function () {\n      return (dynCall_iiiidddiiii = Module[\"dynCall_iiiidddiiii\"] = Module[\"asm\"][\"Tj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiidddiidiiiddiiii = Module[\"dynCall_iiiidddiidiiiddiiii\"] = function () {\n      return (dynCall_iiiidddiidiiiddiiii = Module[\"dynCall_iiiidddiidiiiddiiii\"] = Module[\"asm\"][\"Uj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiddddiiiiiii = Module[\"dynCall_iiiiddddiiiiiii\"] = function () {\n      return (dynCall_iiiiddddiiiiiii = Module[\"dynCall_iiiiddddiiiiiii\"] = Module[\"asm\"][\"Vj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiddddd = Module[\"dynCall_iiiiddddd\"] = function () {\n      return (dynCall_iiiiddddd = Module[\"dynCall_iiiiddddd\"] = Module[\"asm\"][\"Wj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiidddddiiidi = Module[\"dynCall_iiiidddddiiidi\"] = function () {\n      return (dynCall_iiiidddddiiidi = Module[\"dynCall_iiiidddddiiidi\"] = Module[\"asm\"][\"Xj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiij = Module[\"dynCall_iiij\"] = function () {\n      return (dynCall_iiij = Module[\"dynCall_iiij\"] = Module[\"asm\"][\"Yj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiji = Module[\"dynCall_iiiji\"] = function () {\n      return (dynCall_iiiji = Module[\"dynCall_iiiji\"] = Module[\"asm\"][\"Zj\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiijiiii = Module[\"dynCall_iiijiiii\"] = function () {\n      return (dynCall_iiijiiii = Module[\"dynCall_iiijiiii\"] = Module[\"asm\"][\"_j\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiijiiiii = Module[\"dynCall_iiijiiiii\"] = function () {\n      return (dynCall_iiijiiiii = Module[\"dynCall_iiijiiiii\"] = Module[\"asm\"][\"$j\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiijiiiiiii = Module[\"dynCall_iiijiiiiiii\"] = function () {\n      return (dynCall_iiijiiiiiii = Module[\"dynCall_iiijiiiiiii\"] = Module[\"asm\"][\"ak\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiijiiiji = Module[\"dynCall_iiijiiiji\"] = function () {\n      return (dynCall_iiijiiiji = Module[\"dynCall_iiijiiiji\"] = Module[\"asm\"][\"bk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiijj = Module[\"dynCall_iiijj\"] = function () {\n      return (dynCall_iiijj = Module[\"dynCall_iiijj\"] = Module[\"asm\"][\"ck\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiijjii = Module[\"dynCall_iiijjii\"] = function () {\n      return (dynCall_iiijjii = Module[\"dynCall_iiijjii\"] = Module[\"asm\"][\"dk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiid = Module[\"dynCall_iiid\"] = function () {\n      return (dynCall_iiid = Module[\"dynCall_iiid\"] = Module[\"asm\"][\"ek\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiidi = Module[\"dynCall_iiidi\"] = function () {\n      return (dynCall_iiidi = Module[\"dynCall_iiidi\"] = Module[\"asm\"][\"fk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiidii = Module[\"dynCall_iiidii\"] = function () {\n      return (dynCall_iiidii = Module[\"dynCall_iiidii\"] = Module[\"asm\"][\"gk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiidiii = Module[\"dynCall_iiidiii\"] = function () {\n      return (dynCall_iiidiii = Module[\"dynCall_iiidiii\"] = Module[\"asm\"][\"hk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiidiiiiii = Module[\"dynCall_iiidiiiiii\"] = function () {\n      return (dynCall_iiidiiiiii = Module[\"dynCall_iiidiiiiii\"] = Module[\"asm\"][\"ik\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiidiifii = Module[\"dynCall_iiidiifii\"] = function () {\n      return (dynCall_iiidiifii = Module[\"dynCall_iiidiifii\"] = Module[\"asm\"][\"jk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiidd = Module[\"dynCall_iiidd\"] = function () {\n      return (dynCall_iiidd = Module[\"dynCall_iiidd\"] = Module[\"asm\"][\"kk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiddii = Module[\"dynCall_iiiddii\"] = function () {\n      return (dynCall_iiiddii = Module[\"dynCall_iiiddii\"] = Module[\"asm\"][\"lk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiddiii = Module[\"dynCall_iiiddiii\"] = function () {\n      return (dynCall_iiiddiii = Module[\"dynCall_iiiddiii\"] = Module[\"asm\"][\"mk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiddd = Module[\"dynCall_iiiddd\"] = function () {\n      return (dynCall_iiiddd = Module[\"dynCall_iiiddd\"] = Module[\"asm\"][\"nk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiidddiii = Module[\"dynCall_iiidddiii\"] = function () {\n      return (dynCall_iiidddiii = Module[\"dynCall_iiidddiii\"] = Module[\"asm\"][\"ok\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiddddii = Module[\"dynCall_iiiddddii\"] = function () {\n      return (dynCall_iiiddddii = Module[\"dynCall_iiiddddii\"] = Module[\"asm\"][\"pk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiddddiii = Module[\"dynCall_iiiddddiii\"] = function () {\n      return (dynCall_iiiddddiii = Module[\"dynCall_iiiddddiii\"] = Module[\"asm\"][\"qk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiidddddd = Module[\"dynCall_iiidddddd\"] = function () {\n      return (dynCall_iiidddddd = Module[\"dynCall_iiidddddd\"] = Module[\"asm\"][\"rk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiidddddddd = Module[\"dynCall_iiidddddddd\"] = function () {\n      return (dynCall_iiidddddddd = Module[\"dynCall_iiidddddddd\"] = Module[\"asm\"][\"sk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiddddddddid = Module[\"dynCall_iiiddddddddid\"] = function () {\n      return (dynCall_iiiddddddddid = Module[\"dynCall_iiiddddddddid\"] = Module[\"asm\"][\"tk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiidddddddddddi = Module[\"dynCall_iiidddddddddddi\"] = function () {\n      return (dynCall_iiidddddddddddi = Module[\"dynCall_iiidddddddddddi\"] = Module[\"asm\"][\"uk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iij = Module[\"dynCall_iij\"] = function () {\n      return (dynCall_iij = Module[\"dynCall_iij\"] = Module[\"asm\"][\"vk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiji = Module[\"dynCall_iiji\"] = function () {\n      return (dynCall_iiji = Module[\"dynCall_iiji\"] = Module[\"asm\"][\"wk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iijii = Module[\"dynCall_iijii\"] = function () {\n      return (dynCall_iijii = Module[\"dynCall_iijii\"] = Module[\"asm\"][\"xk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iijji = Module[\"dynCall_iijji\"] = function () {\n      return (dynCall_iijji = Module[\"dynCall_iijji\"] = Module[\"asm\"][\"yk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iijjjddi = Module[\"dynCall_iijjjddi\"] = function () {\n      return (dynCall_iijjjddi = Module[\"dynCall_iijjjddi\"] = Module[\"asm\"][\"zk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iifiii = Module[\"dynCall_iifiii\"] = function () {\n      return (dynCall_iifiii = Module[\"dynCall_iifiii\"] = Module[\"asm\"][\"Ak\"]).apply(null, arguments);\n    };\n\n    var dynCall_iid = Module[\"dynCall_iid\"] = function () {\n      return (dynCall_iid = Module[\"dynCall_iid\"] = Module[\"asm\"][\"Bk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iidi = Module[\"dynCall_iidi\"] = function () {\n      return (dynCall_iidi = Module[\"dynCall_iidi\"] = Module[\"asm\"][\"Ck\"]).apply(null, arguments);\n    };\n\n    var dynCall_iidd = Module[\"dynCall_iidd\"] = function () {\n      return (dynCall_iidd = Module[\"dynCall_iidd\"] = Module[\"asm\"][\"Dk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiddi = Module[\"dynCall_iiddi\"] = function () {\n      return (dynCall_iiddi = Module[\"dynCall_iiddi\"] = Module[\"asm\"][\"Ek\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiddii = Module[\"dynCall_iiddii\"] = function () {\n      return (dynCall_iiddii = Module[\"dynCall_iiddii\"] = Module[\"asm\"][\"Fk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiddiii = Module[\"dynCall_iiddiii\"] = function () {\n      return (dynCall_iiddiii = Module[\"dynCall_iiddiii\"] = Module[\"asm\"][\"Gk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiddiiiiii = Module[\"dynCall_iiddiiiiii\"] = function () {\n      return (dynCall_iiddiiiiii = Module[\"dynCall_iiddiiiiii\"] = Module[\"asm\"][\"Hk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiddd = Module[\"dynCall_iiddd\"] = function () {\n      return (dynCall_iiddd = Module[\"dynCall_iiddd\"] = Module[\"asm\"][\"Ik\"]).apply(null, arguments);\n    };\n\n    var dynCall_iidddi = Module[\"dynCall_iidddi\"] = function () {\n      return (dynCall_iidddi = Module[\"dynCall_iidddi\"] = Module[\"asm\"][\"Jk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iidddd = Module[\"dynCall_iidddd\"] = function () {\n      return (dynCall_iidddd = Module[\"dynCall_iidddd\"] = Module[\"asm\"][\"Kk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiddddiiii = Module[\"dynCall_iiddddiiii\"] = function () {\n      return (dynCall_iiddddiiii = Module[\"dynCall_iiddddiiii\"] = Module[\"asm\"][\"Lk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiddddd = Module[\"dynCall_iiddddd\"] = function () {\n      return (dynCall_iiddddd = Module[\"dynCall_iiddddd\"] = Module[\"asm\"][\"Mk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iidddddiiiddddd = Module[\"dynCall_iidddddiiiddddd\"] = function () {\n      return (dynCall_iidddddiiiddddd = Module[\"dynCall_iidddddiiiddddd\"] = Module[\"asm\"][\"Nk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iidddddd = Module[\"dynCall_iidddddd\"] = function () {\n      return (dynCall_iidddddd = Module[\"dynCall_iidddddd\"] = Module[\"asm\"][\"Ok\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiddddddd = Module[\"dynCall_iiddddddd\"] = function () {\n      return (dynCall_iiddddddd = Module[\"dynCall_iiddddddd\"] = Module[\"asm\"][\"Pk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iidddddddd = Module[\"dynCall_iidddddddd\"] = function () {\n      return (dynCall_iidddddddd = Module[\"dynCall_iidddddddd\"] = Module[\"asm\"][\"Qk\"]).apply(null, arguments);\n    };\n\n    var dynCall_ij = Module[\"dynCall_ij\"] = function () {\n      return (dynCall_ij = Module[\"dynCall_ij\"] = Module[\"asm\"][\"Rk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iji = Module[\"dynCall_iji\"] = function () {\n      return (dynCall_iji = Module[\"dynCall_iji\"] = Module[\"asm\"][\"Sk\"]).apply(null, arguments);\n    };\n\n    var dynCall_id = Module[\"dynCall_id\"] = function () {\n      return (dynCall_id = Module[\"dynCall_id\"] = Module[\"asm\"][\"Tk\"]).apply(null, arguments);\n    };\n\n    var dynCall_idi = Module[\"dynCall_idi\"] = function () {\n      return (dynCall_idi = Module[\"dynCall_idi\"] = Module[\"asm\"][\"Uk\"]).apply(null, arguments);\n    };\n\n    var dynCall_idii = Module[\"dynCall_idii\"] = function () {\n      return (dynCall_idii = Module[\"dynCall_idii\"] = Module[\"asm\"][\"Vk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iddii = Module[\"dynCall_iddii\"] = function () {\n      return (dynCall_iddii = Module[\"dynCall_iddii\"] = Module[\"asm\"][\"Wk\"]).apply(null, arguments);\n    };\n\n    var dynCall_iddddii = Module[\"dynCall_iddddii\"] = function () {\n      return (dynCall_iddddii = Module[\"dynCall_iddddii\"] = Module[\"asm\"][\"Xk\"]).apply(null, arguments);\n    };\n\n    var dynCall_idddddddddi = Module[\"dynCall_idddddddddi\"] = function () {\n      return (dynCall_idddddddddi = Module[\"dynCall_idddddddddi\"] = Module[\"asm\"][\"Yk\"]).apply(null, arguments);\n    };\n\n    var dynCall_j = Module[\"dynCall_j\"] = function () {\n      return (dynCall_j = Module[\"dynCall_j\"] = Module[\"asm\"][\"Zk\"]).apply(null, arguments);\n    };\n\n    var dynCall_ji = Module[\"dynCall_ji\"] = function () {\n      return (dynCall_ji = Module[\"dynCall_ji\"] = Module[\"asm\"][\"_k\"]).apply(null, arguments);\n    };\n\n    var dynCall_jii = Module[\"dynCall_jii\"] = function () {\n      return (dynCall_jii = Module[\"dynCall_jii\"] = Module[\"asm\"][\"$k\"]).apply(null, arguments);\n    };\n\n    var dynCall_jiii = Module[\"dynCall_jiii\"] = function () {\n      return (dynCall_jiii = Module[\"dynCall_jiii\"] = Module[\"asm\"][\"al\"]).apply(null, arguments);\n    };\n\n    var dynCall_jiiii = Module[\"dynCall_jiiii\"] = function () {\n      return (dynCall_jiiii = Module[\"dynCall_jiiii\"] = Module[\"asm\"][\"bl\"]).apply(null, arguments);\n    };\n\n    var dynCall_jiiiiiiiiiiiiiiiiiiiiiiiii = Module[\"dynCall_jiiiiiiiiiiiiiiiiiiiiiiiii\"] = function () {\n      return (dynCall_jiiiiiiiiiiiiiiiiiiiiiiiii = Module[\"dynCall_jiiiiiiiiiiiiiiiiiiiiiiiii\"] = Module[\"asm\"][\"cl\"]).apply(null, arguments);\n    };\n\n    var dynCall_jiiid = Module[\"dynCall_jiiid\"] = function () {\n      return (dynCall_jiiid = Module[\"dynCall_jiiid\"] = Module[\"asm\"][\"dl\"]).apply(null, arguments);\n    };\n\n    var dynCall_jiiji = Module[\"dynCall_jiiji\"] = function () {\n      return (dynCall_jiiji = Module[\"dynCall_jiiji\"] = Module[\"asm\"][\"el\"]).apply(null, arguments);\n    };\n\n    var dynCall_jiijji = Module[\"dynCall_jiijji\"] = function () {\n      return (dynCall_jiijji = Module[\"dynCall_jiijji\"] = Module[\"asm\"][\"fl\"]).apply(null, arguments);\n    };\n\n    var dynCall_jijj = Module[\"dynCall_jijj\"] = function () {\n      return (dynCall_jijj = Module[\"dynCall_jijj\"] = Module[\"asm\"][\"gl\"]).apply(null, arguments);\n    };\n\n    var dynCall_jji = Module[\"dynCall_jji\"] = function () {\n      return (dynCall_jji = Module[\"dynCall_jji\"] = Module[\"asm\"][\"hl\"]).apply(null, arguments);\n    };\n\n    var dynCall_fiii = Module[\"dynCall_fiii\"] = function () {\n      return (dynCall_fiii = Module[\"dynCall_fiii\"] = Module[\"asm\"][\"il\"]).apply(null, arguments);\n    };\n\n    var dynCall_fiiifiii = Module[\"dynCall_fiiifiii\"] = function () {\n      return (dynCall_fiiifiii = Module[\"dynCall_fiiifiii\"] = Module[\"asm\"][\"jl\"]).apply(null, arguments);\n    };\n\n    var dynCall_fifi = Module[\"dynCall_fifi\"] = function () {\n      return (dynCall_fifi = Module[\"dynCall_fifi\"] = Module[\"asm\"][\"kl\"]).apply(null, arguments);\n    };\n\n    var dynCall_fifiifiii = Module[\"dynCall_fifiifiii\"] = function () {\n      return (dynCall_fifiifiii = Module[\"dynCall_fifiifiii\"] = Module[\"asm\"][\"ll\"]).apply(null, arguments);\n    };\n\n    var dynCall_di = Module[\"dynCall_di\"] = function () {\n      return (dynCall_di = Module[\"dynCall_di\"] = Module[\"asm\"][\"ml\"]).apply(null, arguments);\n    };\n\n    var dynCall_dii = Module[\"dynCall_dii\"] = function () {\n      return (dynCall_dii = Module[\"dynCall_dii\"] = Module[\"asm\"][\"nl\"]).apply(null, arguments);\n    };\n\n    var dynCall_diii = Module[\"dynCall_diii\"] = function () {\n      return (dynCall_diii = Module[\"dynCall_diii\"] = Module[\"asm\"][\"ol\"]).apply(null, arguments);\n    };\n\n    var dynCall_diiiiii = Module[\"dynCall_diiiiii\"] = function () {\n      return (dynCall_diiiiii = Module[\"dynCall_diiiiii\"] = Module[\"asm\"][\"pl\"]).apply(null, arguments);\n    };\n\n    var dynCall_diid = Module[\"dynCall_diid\"] = function () {\n      return (dynCall_diid = Module[\"dynCall_diid\"] = Module[\"asm\"][\"ql\"]).apply(null, arguments);\n    };\n\n    var dynCall_diidi = Module[\"dynCall_diidi\"] = function () {\n      return (dynCall_diidi = Module[\"dynCall_diidi\"] = Module[\"asm\"][\"rl\"]).apply(null, arguments);\n    };\n\n    var dynCall_did = Module[\"dynCall_did\"] = function () {\n      return (dynCall_did = Module[\"dynCall_did\"] = Module[\"asm\"][\"sl\"]).apply(null, arguments);\n    };\n\n    var dynCall_ddii = Module[\"dynCall_ddii\"] = function () {\n      return (dynCall_ddii = Module[\"dynCall_ddii\"] = Module[\"asm\"][\"tl\"]).apply(null, arguments);\n    };\n\n    var dynCall_ddd = Module[\"dynCall_ddd\"] = function () {\n      return (dynCall_ddd = Module[\"dynCall_ddd\"] = Module[\"asm\"][\"ul\"]).apply(null, arguments);\n    };\n\n    var stackSave = Module[\"stackSave\"] = function () {\n      return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"vl\"]).apply(null, arguments);\n    };\n\n    var stackAlloc = Module[\"stackAlloc\"] = function () {\n      return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"wl\"]).apply(null, arguments);\n    };\n\n    var stackRestore = Module[\"stackRestore\"] = function () {\n      return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"xl\"]).apply(null, arguments);\n    };\n\n    function invoke_ii(index, a1) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_ii(index, a1);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_v(index) {\n      var sp = stackSave();\n\n      try {\n        dynCall_v(index);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iii(index, a1, a2) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iii(index, a1, a2);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_i(index) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_i(index);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vii(index, a1, a2) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vii(index, a1, a2);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vi(index, a1) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vi(index, a1);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiii(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiii(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiii(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiii(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viii(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viii(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiii(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiii(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_fiii(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_fiii(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_diii(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_diii(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiii(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiii(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiii(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiid(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiid(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iidddd(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iidddd(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viddddi(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viddddi(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiidiii(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiidiii(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiii(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiii(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_di(index, a1) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_di(index, a1);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vd(index, a1) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vd(index, a1);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iid(index, a1, a2) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iid(index, a1, a2);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_idii(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_idii(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_dii(index, a1, a2) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_dii(index, a1, a2);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiddiii(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiddiii(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiidi(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiidi(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viddddiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viddddiii(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iidd(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iidd(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viddd(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viddd(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vidd(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vidd(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iddddii(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iddddii(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiddd(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiddd(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iidddi(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iidddi(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiddd(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiddd(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viid(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viid(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiidddddd(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiidddddd(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiddii(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiddii(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iidddddiiiddddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iidddddiiiddddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viidddddd(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viidddddd(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vidiii(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vidiii(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiidiifii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiidiifii(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiidii(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiidii(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiidii(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiidii(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiidi(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiidi(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iidi(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iidi(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vidi(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vidi(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_ddd(index, a1, a2) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_ddd(index, a1, a2);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_diid(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_diid(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiffiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiffiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiddiii(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiddiii(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiddiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiddiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiidii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiidii(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiddddiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiddddiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiidddddddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiidddddddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiidddddddddddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiidddddddddddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iidddddd(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iidddddd(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiddddd(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiddddd(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiid(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiid(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiddidid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiddidid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiddd(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiddd(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iifiii(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iifiii(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiddd(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiddd(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiid(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiid(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_idi(index, a1, a2) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_idi(index, a1, a2);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vid(index, a1, a2) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vid(index, a1, a2);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_diidi(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_diidi(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiid(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiid(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiid(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiid(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiddi(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiddi(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiddddddd(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiddddddd(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iddii(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iddii(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiidiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiidiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiddddiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiddddiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiddi(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiddi(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiddi(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiddi(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiidddddddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiidddddddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_ddii(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_ddii(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiddddddddid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiddddddddid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iidddddddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iidddddddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiidddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiidddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiidddddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiidddddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiddii(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiddii(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_diiiiii(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_diiiiii(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiidddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiidddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_id(index, a1) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_id(index, a1);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_did(index, a1, a2) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_did(index, a1, a2);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiiiid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiiiid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiiiddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiiiddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiddddiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiddddiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vidddd(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vidddd(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiidiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiidiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiidiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiidiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiddddii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiddddii(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viddi(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viddi(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiddddii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiddddii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viddddii(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viddddii(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiddddiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiddddiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiddddiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiddddiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiddddiiiidddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiddddiiiidddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiidddii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiidddii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiidddiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiidddiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vidii(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vidii(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viidd(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viidd(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiid(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiid(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiiddiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiiddiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiidddddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiidddddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiidd(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiidd(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiidi(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiidi(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiidddiddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiidddiddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vidddi(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vidddi(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiddddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiddddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiidd(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiidd(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiidddddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiidddddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiidddi(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiidddi(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiidddiidiiiddiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiidddiidiiiddiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiidddddiiidi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiidddddiiidi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiidddddiidiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiidddddiidiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiddddd(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiddddd(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiidddd(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiidddd(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiddd(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiddd(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiddi(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiddi(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiidddiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiidddiii(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vidddddd(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vidddddd(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiidd(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiidd(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vidiiii(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vidiiii(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vdddi(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vdddi(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiidi(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiidi(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_idddddddddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_idddddddddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vif(index, a1, a2) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vif(index, a1, a2);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vddddii(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vddddii(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiddid(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiddid(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viidiii(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viidiii(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viidi(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viidi(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiidi(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiidi(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiddi(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiddi(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiddiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiddiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiddidid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiddidid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viidii(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viidii(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiiiiid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiiiiid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiidddddddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiidddddddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiidddddddddddddddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiidddddddddddddddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiidddi(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiidddi(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiidddddddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiidddddddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiidddddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiidddddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiddiiiiiid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiddiiiiiid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_fifi(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_fifi(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_fifiifiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_fifiifiii(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_fiiifiii(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_fiiifiii(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_jiiii(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_jiiii(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viijii(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viijii(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiijjii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiijjii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiji(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiji(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_ji(index, a1) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_ji(index, a1);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_j(index) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_j(index);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vj(index, a1, a2) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vj(index, a1, a2);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiiiji(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiiiji(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiijii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiijii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiijii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiijii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiijji(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiijji(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iij(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iij(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_jii(index, a1, a2) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_jii(index, a1, a2);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiijjjii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiijjjii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiij(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiij(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viij(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viij(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_ij(index, a1, a2) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_ij(index, a1, a2);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_jiiji(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_jiiji(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_jiijji(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_jiijji(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viijj(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viijj(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vijii(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vijii(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiji(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiji(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiiiiijjji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiiiiijjji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiiijji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiiijji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiijj(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiijj(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiij(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiij(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vijjj(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vijjj(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiijii(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiijii(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_jiii(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_jiii(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vij(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vij(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiijiiiji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiijiiiji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiijiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiijiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiijiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiijiiii(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viji(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viji(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiijiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiijiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiji(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiji(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vijiii(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vijiii(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vijid(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vijid(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiij(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiij(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiijjii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiijjii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiijiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiijiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_jiiiiiiiiiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_jiiiiiiiiiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iijji(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iijji(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiiiiijjii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiiiiijjii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viijjji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viijjji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiijjji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiijjji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iji(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iji(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiijiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiijiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiijjii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiijjii(index, a1, a2, a3, a4, a5, a6, a7, a8);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiijji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiijji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iijii(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iijii(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiij(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiij(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiijii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiijii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiijiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiijiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_jijj(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_jijj(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viijji(index, a1, a2, a3, a4, a5, a6, a7) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viijji(index, a1, a2, a3, a4, a5, a6, a7);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vijiidddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n      var sp = stackSave();\n\n      try {\n        dynCall_vijiidddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_jiiid(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_jiiid(index, a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iijjjddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iijjjddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiijiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiijiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiijii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiijii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiji(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiji(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_jji(index, a1, a2, a3) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_jji(index, a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiij(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiij(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiiij(index, a1, a2, a3, a4, a5, a6) {\n      var sp = stackSave();\n\n      try {\n        dynCall_viiiij(index, a1, a2, a3, a4, a5, a6);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiiiiiiiiiiijj(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17) {\n      var sp = stackSave();\n\n      try {\n        return dynCall_iiiiiiiiiiiiiijj(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n        _setThrew(1, 0);\n      }\n    }\n\n    Module[\"asm\"] = asm;\n    Module[\"ccall\"] = ccall;\n    Module[\"cwrap\"] = cwrap;\n    Module[\"setValue\"] = setValue;\n    Module[\"getValue\"] = getValue;\n    Module[\"getMemory\"] = getMemory;\n    Module[\"stringToUTF8\"] = stringToUTF8;\n    Module[\"lengthBytesUTF8\"] = lengthBytesUTF8;\n    Module[\"addRunDependency\"] = addRunDependency;\n    Module[\"removeRunDependency\"] = removeRunDependency;\n    Module[\"FS_createFolder\"] = FS.createFolder;\n    Module[\"FS_createPath\"] = FS.createPath;\n    Module[\"FS_createDataFile\"] = FS.createDataFile;\n    Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n    Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n    Module[\"FS_createLink\"] = FS.createLink;\n    Module[\"FS_createDevice\"] = FS.createDevice;\n    Module[\"FS_unlink\"] = FS.unlink;\n    Module[\"addFunction\"] = addFunction;\n    Module[\"ENV\"] = ENV;\n    Module[\"FS\"] = FS;\n    Module[\"MEMFS\"] = MEMFS;\n    Module[\"WORKERFS\"] = WORKERFS;\n    Module[\"NODEFS\"] = NODEFS;\n    var calledRun;\n\n    Module[\"then\"] = function (func) {\n      if (calledRun) {\n        func(Module);\n      } else {\n        var old = Module[\"onRuntimeInitialized\"];\n\n        Module[\"onRuntimeInitialized\"] = function () {\n          if (old) old();\n          func(Module);\n        };\n      }\n\n      return Module;\n    };\n\n    function ExitStatus(status) {\n      this.name = \"ExitStatus\";\n      this.message = \"Program terminated with exit(\" + status + \")\";\n      this.status = status;\n    }\n\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n\n    function run(args) {\n      args = args || arguments_;\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      preRun();\n      if (runDependencies > 0) return;\n\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module[\"calledRun\"] = true;\n        if (ABORT) return;\n        initRuntime();\n        preMain();\n        if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n        postRun();\n      }\n\n      if (Module[\"setStatus\"]) {\n        Module[\"setStatus\"](\"Running...\");\n        setTimeout(function () {\n          setTimeout(function () {\n            Module[\"setStatus\"](\"\");\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    Module[\"run\"] = run;\n\n    function exit(status, implicit) {\n      if (implicit && noExitRuntime && status === 0) {\n        return;\n      }\n\n      if (noExitRuntime) {} else {\n        ABORT = true;\n        EXITSTATUS = status;\n        exitRuntime();\n        if (Module[\"onExit\"]) Module[\"onExit\"](status);\n      }\n\n      quit_(status, new ExitStatus(status));\n    }\n\n    if (Module[\"preInit\"]) {\n      if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n\n      while (Module[\"preInit\"].length > 0) {\n        Module[\"preInit\"].pop()();\n      }\n    }\n\n    noExitRuntime = true;\n    run();\n    return CModule;\n  };\n}();\n\nif ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) === 'object') module.exports = CModule;else if (typeof define === 'function' && define['amd']) define([], function () {\n  return CModule;\n});else if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object') exports[\"CModule\"] = CModule;\n\n//# sourceURL=webpack:///./dist/gdal3WebAssembly.js?");

/***/ }),

/***/ "./node_modules/detect-node/index.esm.js":
/*!***********************************************!*\
  !*** ./node_modules/detect-node/index.esm.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// Only Node.JS has a process variable that is of [[Class]] process\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]');\n\n\n//# sourceURL=webpack:///./node_modules/detect-node/index.esm.js?");

/***/ }),

/***/ "./src/allCFunctions.js":
/*!******************************!*\
  !*** ./src/allCFunctions.js ***!
  \******************************/
/*! exports provided: GDALFunctions, initCFunctions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GDALFunctions\", function() { return GDALFunctions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initCFunctions\", function() { return initCFunctions; });\nvar GDALFunctions = {\n  Module: {}\n};\nfunction initCFunctions() {\n  if (GDALFunctions.GDALOpen) return;\n  var Module = GDALFunctions.Module;\n  Module.ccall('GDALAllRegister', null, [], []);\n  GDALFunctions.GDALOpen = Module.cwrap('GDALOpen', 'number', ['string']);\n  GDALFunctions.GDALOpenEx = Module.cwrap('GDALOpenEx', 'number', ['string']);\n  GDALFunctions.GDALClose = Module.cwrap('GDALClose', null, ['number']);\n  GDALFunctions.CPLErrorReset = Module.cwrap('CPLErrorReset', null, []);\n  GDALFunctions.CPLSetErrorHandler = Module.cwrap('CPLSetErrorHandler', 'number', ['number']);\n  GDALFunctions.CPLQuietErrorHandler = Module.cwrap('CPLQuietErrorHandler', null, ['number', 'number', 'string']);\n  var cplQuietFnPtr = Module.addFunction(GDALFunctions.CPLQuietErrorHandler, 'viii');\n  GDALFunctions.CPLGetLastErrorNo = Module.cwrap('CPLGetLastErrorNo', 'number', []);\n  GDALFunctions.CPLGetLastErrorMsg = Module.cwrap('CPLGetLastErrorMsg', 'string', []);\n  GDALFunctions.CPLGetLastErrorType = Module.cwrap('CPLGetLastErrorType', 'number', []);\n  GDALFunctions.GDALGetRasterCount = Module.cwrap('GDALGetRasterCount', 'number', ['number']);\n  GDALFunctions.GDALGetRasterXSize = Module.cwrap('GDALGetRasterXSize', 'number', ['number']);\n  GDALFunctions.GDALGetRasterYSize = Module.cwrap('GDALGetRasterYSize', 'number', ['number']);\n  GDALFunctions.GDALGetProjectionRef = Module.cwrap('GDALGetProjectionRef', 'string', ['number']);\n  GDALFunctions.GDALGetGeoTransform = Module.cwrap('GDALGetGeoTransform', 'number', ['number', 'number']);\n  GDALFunctions.GDALVectorTranslate = Module.cwrap('GDALVectorTranslate', 'number', ['string', // char * the destination dataset path or NULL.\n  'number', // GDALDatasetH the destination dataset or NULL.\n  'number', // int the number of input datasets (only 1 supported currently)\n  'number', // GDALDatasetH the list of input datasets.\n  'number', // GDALVectorTranslateOptions * options object to use\n  'number' // int * pbUsageError\n  ]);\n  GDALFunctions.GDALVectorTranslateOptionsNew = Module.cwrap('GDALVectorTranslateOptionsNew', 'number', ['number', 'number']);\n  GDALFunctions.GDALVectorTranslateOptionsFree = Module.cwrap('GDALVectorTranslateOptionsFree', 'number', ['number']);\n  GDALFunctions.GDALDatasetGetLayerCount = Module.cwrap('GDALDatasetGetLayerCount', 'number', ['number']);\n  GDALFunctions.GDALDatasetGetLayer = Module.cwrap('GDALDatasetGetLayer', 'number', ['number', 'number']);\n  GDALFunctions.OGR_DS_GetLayerCount = Module.cwrap('OGR_DS_GetLayerCount', 'number', ['number']);\n  GDALFunctions.OGR_DS_GetName = Module.cwrap('OGR_DS_GetName', 'string', ['number']);\n  GDALFunctions.OGR_DS_GetLayer = Module.cwrap('OGR_DS_GetLayer', 'number', ['number', 'number']);\n  GDALFunctions.OGR_L_GetName = Module.cwrap('OGR_L_GetName', 'string', ['number']);\n  GDALFunctions.OGR_DS_GetDriver = Module.cwrap('OGR_DS_GetDriver', 'number', ['number']);\n  GDALFunctions.OGR_Dr_GetName = Module.cwrap('OGR_Dr_GetName', 'string', ['number']);\n  GDALFunctions.GDALGetDatasetDriver = Module.cwrap('GDALGetDatasetDriver', 'number', ['number']);\n  GDALFunctions.GDALGetDriverLongName = Module.cwrap('GDALGetDriverLongName', 'string', ['number']);\n  GDALFunctions.GDALGetDriverShortName = Module.cwrap('GDALGetDriverShortName', 'string', ['number']);\n  GDALFunctions.GDALTranslate = Module.cwrap('GDALTranslate', 'number', ['string', // char * output filename\n  'number', // GDALDatasetH dataset to translate\n  'number', // GDALTranslateOptions * options object to use\n  'number' // int * pbUsageError\n  ]);\n  GDALFunctions.GDALTranslateOptionsNew = Module.cwrap('GDALTranslateOptionsNew', 'number', ['number', 'number']);\n  GDALFunctions.GDALTranslateOptionsFree = Module.cwrap('GDALTranslateOptionsFree', 'number', ['number']);\n  GDALFunctions.GDALRasterize = Module.cwrap('GDALRasterize', 'number', ['string', 'number', 'number', 'number', 'number']);\n  GDALFunctions.GDALRasterizeOptionsNew = Module.cwrap('GDALRasterizeOptionsNew', 'number', ['number', 'number']);\n  GDALFunctions.GDALRasterizeOptionsFree = Module.cwrap('GDALRasterizeOptionsFree', 'number', ['number']);\n  GDALFunctions.GDALWarp = Module.cwrap('GDALWarp', 'number', ['string', // Destination dataset path or NULL\n  'number', // GDALDatasetH destination dataset or NULL\n  'number', // Number of input datasets\n  'number', // GDALDatasetH * list of source datasets\n  'number', // GDALWarpAppOptions *\n  'number' // int * to store errors in if they occur\n  ]);\n  GDALFunctions.GDALWarpAppOptionsNew = Module.cwrap('GDALWarpAppOptionsNew', 'number', ['number', // char ** null-terminated array of option strings as to gdalwarp executable\n  'number' // pointer to struct that should usually be null\n  ]);\n  GDALFunctions.GDALWarpAppOptionsSetProgress = Module.cwrap('GDALWarpAppOptionsSetProgress', 'number', ['number', // GDALWarpAppOptions *\n  'number', // GDALProgressFunc\n  'number' // void * progress function data\n  ]);\n  GDALFunctions.GDALWarpAppOptionsFree = Module.cwrap('GDALWarpAppOptionsFree', 'number', ['number' // GDALWarpAppOptions *\n  ]);\n  GDALFunctions.OSRNewSpatialReference = Module.cwrap('OSRNewSpatialReference', 'number', ['string']);\n  GDALFunctions.OSRDestroySpatialReference = Module.cwrap('OSRDestroySpatialReference', 'number', ['number' // SpatialReferenceH\n  ]);\n  GDALFunctions.OCTNewCoordinateTransformation = Module.cwrap('OCTNewCoordinateTransformation', 'number', ['number', 'number']);\n  GDALFunctions.OCTDestroyCoordinateTransformation = Module.cwrap('OCTDestroyCoordinateTransformation', 'number', ['number' // CoordinateTransformationH\n  ]);\n  GDALFunctions.OCTTransform = Module.cwrap('OCTTransform', 'number', ['number', 'number', 'number', 'number', 'number']);\n  GDALFunctions.GDALGetDriverCount = Module.cwrap('GDALGetDriverCount', 'number', []);\n  GDALFunctions.OGRGetDriverCount = Module.cwrap('OGRGetDriverCount', 'number', []);\n  GDALFunctions.GDALGetDriver = Module.cwrap('GDALGetDriver', 'number', ['number']);\n  GDALFunctions.OGRGetDriver = Module.cwrap('OGRGetDriver', 'number', ['number']);\n  GDALFunctions.GDALGetMetadataItem = Module.cwrap('GDALGetMetadataItem', 'string', ['number', 'string', 'string']);\n  GDALFunctions.GDALGetDescription = Module.cwrap('GDALGetDescription', 'string', ['number']);\n  GDALFunctions.CPLSetErrorHandler(cplQuietFnPtr);\n}\n\n//# sourceURL=webpack:///./src/allCFunctions.js?");

/***/ }),

/***/ "./src/allJsFunctions.js":
/*!*******************************!*\
  !*** ./src/allJsFunctions.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _allJsFunctions_program_ogr2ogr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./allJsFunctions/program/ogr2ogr */ \"./src/allJsFunctions/program/ogr2ogr.js\");\n/* harmony import */ var _allJsFunctions_program_gdal_translate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./allJsFunctions/program/gdal_translate */ \"./src/allJsFunctions/program/gdal_translate.js\");\n/* harmony import */ var _allJsFunctions_program_gdal_rasterize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./allJsFunctions/program/gdal_rasterize */ \"./src/allJsFunctions/program/gdal_rasterize.js\");\n/* harmony import */ var _allJsFunctions_program_gdalwarp__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./allJsFunctions/program/gdalwarp */ \"./src/allJsFunctions/program/gdalwarp.js\");\n/* harmony import */ var _allJsFunctions_program_gdaltransform__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./allJsFunctions/program/gdaltransform */ \"./src/allJsFunctions/program/gdaltransform.js\");\n/* harmony import */ var _allJsFunctions_function_open__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./allJsFunctions/function/open */ \"./src/allJsFunctions/function/open.js\");\n/* harmony import */ var _allJsFunctions_function_close__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./allJsFunctions/function/close */ \"./src/allJsFunctions/function/close.js\");\n/* harmony import */ var _allJsFunctions_function_getInfo__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./allJsFunctions/function/getInfo */ \"./src/allJsFunctions/function/getInfo.js\");\n/* harmony import */ var _allJsFunctions_function_getOutputFiles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./allJsFunctions/function/getOutputFiles */ \"./src/allJsFunctions/function/getOutputFiles.js\");\n/* harmony import */ var _allJsFunctions_function_getFileBytes__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./allJsFunctions/function/getFileBytes */ \"./src/allJsFunctions/function/getFileBytes.js\");\n/* harmony import */ var _allJsFunctions_helper_drivers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./allJsFunctions/helper/drivers */ \"./src/allJsFunctions/helper/drivers.js\");\n/* eslint-disable camelcase */\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  ogr2ogr: _allJsFunctions_program_ogr2ogr__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  gdal_translate: _allJsFunctions_program_gdal_translate__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  gdal_rasterize: _allJsFunctions_program_gdal_rasterize__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  gdalwarp: _allJsFunctions_program_gdalwarp__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  gdaltransform: _allJsFunctions_program_gdaltransform__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n  open: _allJsFunctions_function_open__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n  close: _allJsFunctions_function_close__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n  getInfo: _allJsFunctions_function_getInfo__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n  getOutputFiles: _allJsFunctions_function_getOutputFiles__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n  getFileBytes: _allJsFunctions_function_getFileBytes__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n  drivers: _allJsFunctions_helper_drivers__WEBPACK_IMPORTED_MODULE_10__[\"drivers\"]\n});\n\n//# sourceURL=webpack:///./src/allJsFunctions.js?");

/***/ }),

/***/ "./src/allJsFunctions/function/close.js":
/*!**********************************************!*\
  !*** ./src/allJsFunctions/function/close.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return close; });\n/* harmony import */ var _allCFunctions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../allCFunctions */ \"./src/allCFunctions.js\");\n\n/*\n    Close the dataset. The memory associated to the dataset will be freed.\n\n    Datasets **must** be closed when you're finished with them, or the\n    memory consumption will grow forever.\n\n    @param  {object} Dataset to be closed.\n    @return {Promise -> void}\n*/\n\nfunction close(dataset) {\n  return new Promise(function (resolve) {\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALClose(dataset.pointer);\n    resolve();\n  });\n}\n\n//# sourceURL=webpack:///./src/allJsFunctions/function/close.js?");

/***/ }),

/***/ "./src/allJsFunctions/function/getFileBytes.js":
/*!*****************************************************!*\
  !*** ./src/allJsFunctions/function/getFileBytes.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return getFileBytes; });\n/* harmony import */ var _allCFunctions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../allCFunctions */ \"./src/allCFunctions.js\");\n\n/*\n    @param  {string} The path of the file to be downloaded.\n    @return {Promise -> Uint8Array} \"Promise\" returns an array of bytes of the file.\n*/\n\nfunction getFileBytes(path) {\n  return new Promise(function (resolve) {\n    var bytes = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module.FS.readFile(path, {\n      encoding: 'binary'\n    });\n    resolve(bytes);\n  });\n}\n\n//# sourceURL=webpack:///./src/allJsFunctions/function/getFileBytes.js?");

/***/ }),

/***/ "./src/allJsFunctions/function/getInfo.js":
/*!************************************************!*\
  !*** ./src/allJsFunctions/function/getInfo.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return getInfo; });\n/* harmony import */ var _allCFunctions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../allCFunctions */ \"./src/allCFunctions.js\");\n/* eslint-disable no-underscore-dangle */\n\n/*\n    @param  {object} Dataset\n    @return {Promise -> Object} \"Promise\" returns an object containing file information.\n*/\n\nfunction getInfo(dataset) {\n  return new Promise(function (resolve) {\n    var bandCount = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetRasterCount(dataset.pointer);\n\n    if (bandCount > 0) {\n      // Raster\n      var maxX = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetRasterXSize(dataset.pointer);\n      var maxY = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetRasterYSize(dataset.pointer);\n      var wktStr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetProjectionRef(dataset.pointer);\n\n      var byteOffset = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module._malloc(6 * Float64Array.BYTES_PER_ELEMENT);\n\n      _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetGeoTransform(dataset.pointer, byteOffset);\n      var geoTransform = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module.HEAPF64.subarray(byteOffset / Float64Array.BYTES_PER_ELEMENT, byteOffset / Float64Array.BYTES_PER_ELEMENT + 6);\n      var corners = [[0, 0], [maxX, 0], [maxX, maxY], [0, maxY]];\n      var geoCorners = corners.map(function (coords) {\n        var x = coords[0];\n        var y = coords[1];\n        return [geoTransform[0] + geoTransform[1] * x + geoTransform[2] * y, geoTransform[3] + geoTransform[4] * x + geoTransform[5] * y];\n      });\n      var driverPtr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetDatasetDriver(dataset.pointer);\n      var driverName = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetDriverLongName(driverPtr);\n      var dsName = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].OGR_DS_GetName(dataset.pointer);\n      resolve({\n        type: 'raster',\n        bandCount: bandCount,\n        width: maxX,\n        height: maxY,\n        projectionWkt: wktStr,\n        coordinateTransform: geoTransform,\n        corners: geoCorners,\n        driverName: driverName,\n        dsName: dsName\n      });\n    } else {\n      // Vector\n      var layerCount = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALDatasetGetLayerCount(dataset.pointer);\n      var layerCount2 = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].OGR_DS_GetLayerCount(dataset.pointer);\n\n      var _dsName = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].OGR_DS_GetName(dataset.pointer);\n\n      var layerPtr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].OGR_DS_GetLayer(dataset.pointer, 0);\n      var layerName = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].OGR_L_GetName(layerPtr);\n\n      var _driverPtr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetDatasetDriver(dataset.pointer);\n\n      var _driverName = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetDriverLongName(_driverPtr);\n\n      resolve({\n        type: 'vector',\n        layerCount: layerCount,\n        layerCount2: layerCount2,\n        dsName: _dsName,\n        layerName: layerName,\n        driverName: _driverName\n      });\n    }\n  });\n}\n\n//# sourceURL=webpack:///./src/allJsFunctions/function/getInfo.js?");

/***/ }),

/***/ "./src/allJsFunctions/function/getOutputFiles.js":
/*!*******************************************************!*\
  !*** ./src/allJsFunctions/function/getOutputFiles.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return getOutputFiles; });\n/* harmony import */ var _helper_getFileList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helper/getFileList */ \"./src/allJsFunctions/helper/getFileList.js\");\n\n/*\n    Get paths of created files.\n\n    @return {Promise -> Array} \"Promise\" returns path and size of created files.\n*/\n\nfunction getOutputFiles() {\n  return new Promise(function (resolve) {\n    var files = Object(_helper_getFileList__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n    resolve(files);\n  });\n}\n\n//# sourceURL=webpack:///./src/allJsFunctions/function/getOutputFiles.js?");

/***/ }),

/***/ "./src/allJsFunctions/function/open.js":
/*!*********************************************!*\
  !*** ./src/allJsFunctions/function/open.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return open; });\n/* harmony import */ var _allCFunctions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../allCFunctions */ \"./src/allCFunctions.js\");\n/* harmony import */ var _helper_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helper/error */ \"./src/allJsFunctions/helper/error.js\");\n/* harmony import */ var _helper_const__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helper/const */ \"./src/allJsFunctions/helper/const.js\");\n/* harmony import */ var _helper_filesystem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helper/filesystem */ \"./src/allJsFunctions/helper/filesystem.js\");\n/* eslint-disable no-continue */\n\n\n\n\n/*\n    Opens files selected with HTML <input> element.\n\n    @param {FileList} Returned by the files property of the HTML <input> element.\n    @return {Promise -> { datasets, errors }} \"Promise\" returns dataset list and error list.\n*/\n\nfunction open(fileOrFiles) {\n  var files = fileOrFiles;\n\n  if (!(Array.isArray(files) || files instanceof FileList)) {\n    files = [files];\n  }\n\n  return new Promise(function (resolve, reject) {\n    Object(_helper_filesystem__WEBPACK_IMPORTED_MODULE_3__[\"mount\"])(files).then(function (mountedFiles) {\n      var errors = [];\n      _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].CPLErrorReset();\n      var inputResults = {};\n\n      for (var i = 0; i < mountedFiles.length; i += 1) {\n        var path = mountedFiles[i].name;\n        var name = path.split('.', 1)[0];\n        if (!inputResults[name]) inputResults[name] = {};\n        if (inputResults[name].pointer) continue;\n        inputResults[name].path = path;\n        var datasetPtr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALOpenEx(\"\".concat(_helper_const__WEBPACK_IMPORTED_MODULE_2__[\"INPUTPATH\"], \"/\").concat(path));\n\n        if (_allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].CPLGetLastErrorNo() !== 0) {\n          var error = Object(_helper_error__WEBPACK_IMPORTED_MODULE_1__[\"getGdalError\"])();\n          errors.push(error);\n          delete inputResults[name];\n          continue;\n        }\n\n        if (datasetPtr === 0) {\n          var _error = Object(_helper_error__WEBPACK_IMPORTED_MODULE_1__[\"getSystemError\"])('unknown dataset');\n\n          errors.push(_error);\n          delete inputResults[name];\n          continue;\n        }\n\n        inputResults[name].pointer = datasetPtr;\n        var bandCount = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetRasterCount(datasetPtr);\n        if (bandCount > 0) inputResults[name].type = 'raster';else inputResults[name].type = 'vector';\n      }\n\n      var datasets = Object.values(inputResults);\n      Object(_helper_filesystem__WEBPACK_IMPORTED_MODULE_3__[\"unmount\"])();\n\n      if (datasets.length > 0 || errors.length === 0) {\n        resolve({\n          datasets: datasets,\n          errors: errors\n        });\n      } else {\n        reject(errors);\n      }\n    });\n  });\n}\n\n//# sourceURL=webpack:///./src/allJsFunctions/function/open.js?");

/***/ }),

/***/ "./src/allJsFunctions/helper/const.js":
/*!********************************************!*\
  !*** ./src/allJsFunctions/helper/const.js ***!
  \********************************************/
/*! exports provided: INPUTPATH, OUTPUTPATH */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"INPUTPATH\", function() { return INPUTPATH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OUTPUTPATH\", function() { return OUTPUTPATH; });\nvar INPUTPATH = '/input';\nvar OUTPUTPATH = '/output';\n\n//# sourceURL=webpack:///./src/allJsFunctions/helper/const.js?");

/***/ }),

/***/ "./src/allJsFunctions/helper/drivers.js":
/*!**********************************************!*\
  !*** ./src/allJsFunctions/helper/drivers.js ***!
  \**********************************************/
/*! exports provided: drivers, setDrivers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drivers\", function() { return drivers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setDrivers\", function() { return setDrivers; });\n/* harmony import */ var _allCFunctions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../allCFunctions */ \"./src/allCFunctions.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar drivers = {\n  raster: {},\n  vector: {}\n};\n\nfunction getDriverData(driverPtr) {\n  var extensions = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetMetadataItem(driverPtr, 'DMD_EXTENSIONS', null);\n  var extension = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetMetadataItem(driverPtr, 'DMD_EXTENSION', null);\n\n  if (extension === '' && extensions !== '') {\n    extension = extensions.split(' ')[0];\n  }\n\n  if (extension !== '') {\n    extension = extension.replace('.', '').replace('/', '');\n  }\n\n  var shortName = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetDescription(driverPtr);\n  if (shortName === 'GeoJSON') extension = 'geojson';\n  var longName = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetMetadataItem(driverPtr, 'DMD_LONGNAME', null);\n  var isReadable = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetMetadataItem(driverPtr, 'DCAP_OPEN', null) === 'YES';\n  var isWritable = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetMetadataItem(driverPtr, 'DCAP_CREATE', null) === 'YES' || _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetMetadataItem(driverPtr, 'DCAP_CREATECOPY', null) === 'YES';\n  var isRaster = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetMetadataItem(driverPtr, 'DCAP_RASTER', null) === 'YES';\n  var isVector = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetMetadataItem(driverPtr, 'DCAP_VECTOR', null) === 'YES'; // eslint-disable-next-line object-curly-newline\n\n  return {\n    extension: extension,\n    extensions: extensions,\n    shortName: shortName,\n    longName: longName,\n    isReadable: isReadable,\n    isWritable: isWritable,\n    isRaster: isRaster,\n    isVector: isVector\n  };\n}\n\nfunction setDrivers() {\n  var driverCount = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetDriverCount();\n\n  for (var i = 0; i < driverCount; i += 1) {\n    var driverPtr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALGetDriver(i);\n    var info = getDriverData(driverPtr);\n    if (info.isRaster) drivers.raster[info.shortName] = _objectSpread(_objectSpread({\n      index: i\n    }, info), {}, {\n      type: 'raster'\n    });\n    if (info.isVector) drivers.vector[info.shortName] = _objectSpread(_objectSpread({\n      index: i\n    }, info), {}, {\n      type: 'vector'\n    });\n  }\n}\n\n//# sourceURL=webpack:///./src/allJsFunctions/helper/drivers.js?");

/***/ }),

/***/ "./src/allJsFunctions/helper/error.js":
/*!********************************************!*\
  !*** ./src/allJsFunctions/helper/error.js ***!
  \********************************************/
/*! exports provided: getGdalError, getSystemError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getGdalError\", function() { return getGdalError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSystemError\", function() { return getSystemError; });\n/* harmony import */ var _allCFunctions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../allCFunctions */ \"./src/allCFunctions.js\");\n\nfunction getGdalError() {\n  var message = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].CPLGetLastErrorMsg();\n  var no = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].CPLGetLastErrorNo();\n  _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].CPLErrorReset();\n  return {\n    no: no,\n    message: message\n  };\n}\nfunction getSystemError(message) {\n  return {\n    no: -1,\n    message: message\n  };\n}\n\n//# sourceURL=webpack:///./src/allJsFunctions/helper/error.js?");

/***/ }),

/***/ "./src/allJsFunctions/helper/filesystem.js":
/*!*************************************************!*\
  !*** ./src/allJsFunctions/helper/filesystem.js ***!
  \*************************************************/
/*! exports provided: mountDest, mount, unmount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mountDest\", function() { return mountDest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mount\", function() { return mount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unmount\", function() { return unmount; });\n/* harmony import */ var detect_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! detect-node */ \"./node_modules/detect-node/index.esm.js\");\n/* harmony import */ var _allCFunctions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../allCFunctions */ \"./src/allCFunctions.js\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./const */ \"./src/allJsFunctions/helper/const.js\");\n\n\n\nfunction mountDest(path) {\n  if (detect_node__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_1__[\"GDALFunctions\"].Module.FS.mount(_allCFunctions__WEBPACK_IMPORTED_MODULE_1__[\"GDALFunctions\"].Module.NODEFS, {\n      root: path\n    }, _const__WEBPACK_IMPORTED_MODULE_2__[\"OUTPUTPATH\"]);\n  }\n}\nfunction mount(files) {\n  return new Promise(function (resolve) {\n    if (detect_node__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n      var output = [];\n      files.forEach(function (file) {\n        var temp = file.split('/');\n        var name = temp.pop();\n        var path = temp.join('/');\n        _allCFunctions__WEBPACK_IMPORTED_MODULE_1__[\"GDALFunctions\"].Module.FS.mount(_allCFunctions__WEBPACK_IMPORTED_MODULE_1__[\"GDALFunctions\"].Module.NODEFS, {\n          root: path\n        }, _const__WEBPACK_IMPORTED_MODULE_2__[\"INPUTPATH\"]);\n        output.push({\n          name: name\n        });\n      });\n      resolve(output);\n    } else if (typeof importScripts === 'function') {\n      _allCFunctions__WEBPACK_IMPORTED_MODULE_1__[\"GDALFunctions\"].Module.FS.mount(_allCFunctions__WEBPACK_IMPORTED_MODULE_1__[\"GDALFunctions\"].Module.WORKERFS, {\n        files: files\n      }, _const__WEBPACK_IMPORTED_MODULE_2__[\"INPUTPATH\"]);\n      resolve(files);\n    } else {\n      var promises = [];\n      files.forEach(function (file) {\n        promises.push(file.arrayBuffer());\n      });\n      Promise.all(promises).then(function (buffers) {\n        buffers.forEach(function (buffer, i) {\n          var ss = new Uint8Array(buffer);\n          _allCFunctions__WEBPACK_IMPORTED_MODULE_1__[\"GDALFunctions\"].Module.FS.writeFile(\"\".concat(_const__WEBPACK_IMPORTED_MODULE_2__[\"INPUTPATH\"], \"/\").concat(files[i].name), ss);\n        });\n        resolve(files);\n      });\n    }\n  });\n}\nfunction unmount() {\n  if (detect_node__WEBPACK_IMPORTED_MODULE_0__[\"default\"] || typeof importScripts === 'function') {\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_1__[\"GDALFunctions\"].Module.FS.unmount(_const__WEBPACK_IMPORTED_MODULE_2__[\"INPUTPATH\"]);\n  }\n}\n\n//# sourceURL=webpack:///./src/allJsFunctions/helper/filesystem.js?");

/***/ }),

/***/ "./src/allJsFunctions/helper/getFileList.js":
/*!**************************************************!*\
  !*** ./src/allJsFunctions/helper/getFileList.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return getFileList; });\n/* harmony import */ var _allCFunctions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../allCFunctions */ \"./src/allCFunctions.js\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./const */ \"./src/allJsFunctions/helper/const.js\");\n\n\nfunction getFileList() {\n  var contents = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module.FS.root.contents.output.contents;\n  return Object.keys(contents).map(function (fn) {\n    return {\n      path: \"\".concat(_const__WEBPACK_IMPORTED_MODULE_1__[\"OUTPUTPATH\"], \"/\").concat(fn),\n      size: contents[fn].usedBytes\n    };\n  });\n}\n\n//# sourceURL=webpack:///./src/allJsFunctions/helper/getFileList.js?");

/***/ }),

/***/ "./src/allJsFunctions/helper/options.js":
/*!**********************************************!*\
  !*** ./src/allJsFunctions/helper/options.js ***!
  \**********************************************/
/*! exports provided: getOptions, clearOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getOptions\", function() { return getOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearOptions\", function() { return clearOptions; });\n/* harmony import */ var _allCFunctions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../allCFunctions */ \"./src/allCFunctions.js\");\n/* eslint-disable no-underscore-dangle */\n\nfunction getOptions(options) {\n  var ptrsArray = options.map(function (str) {\n    return _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module._malloc(_allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module.lengthBytesUTF8(str) + 1);\n  });\n  ptrsArray.push(0);\n  var strPtrs = Uint32Array.from(ptrsArray);\n  options.forEach(function (str, i) {\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module.stringToUTF8(str, strPtrs[i], _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module.lengthBytesUTF8(str) + 1);\n  });\n\n  var ptrOffset = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module._malloc(strPtrs.length * strPtrs.BYTES_PER_ELEMENT);\n\n  _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module.HEAPU32.set(strPtrs, ptrOffset / strPtrs.BYTES_PER_ELEMENT);\n  return {\n    ptr: ptrOffset,\n    ptrArray: ptrsArray\n  };\n}\nfunction clearOptions(i) {\n  _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module._free(i.ptr);\n\n  i.ptrArray.forEach(function (ptr) {\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module._free(ptr);\n  });\n}\n\n//# sourceURL=webpack:///./src/allJsFunctions/helper/options.js?");

/***/ }),

/***/ "./src/allJsFunctions/program/gdal_rasterize.js":
/*!******************************************************!*\
  !*** ./src/allJsFunctions/program/gdal_rasterize.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return gdal_rasterize; });\n/* harmony import */ var _allCFunctions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../allCFunctions */ \"./src/allCFunctions.js\");\n/* harmony import */ var _helper_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helper/error */ \"./src/allJsFunctions/helper/error.js\");\n/* harmony import */ var _helper_drivers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helper/drivers */ \"./src/allJsFunctions/helper/drivers.js\");\n/* harmony import */ var _helper_getFileList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helper/getFileList */ \"./src/allJsFunctions/helper/getFileList.js\");\n/* harmony import */ var _helper_options__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helper/options */ \"./src/allJsFunctions/helper/options.js\");\n/* harmony import */ var _helper_const__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helper/const */ \"./src/allJsFunctions/helper/const.js\");\n/* eslint-disable camelcase */\n\n\n\n\n\n\n/*\n    gdal_rasterize function burns vector geometries (points, lines, and polygons)\n    into the raster band(s) of a raster image. Vectors are read from OGR supported vector formats.\n\n    @param  {object} Dataset to be converted.\n    @param  {Array} Options (https://gdal.org/programs/gdal_rasterize.html)\n    @return {Promise -> Array} \"Promise\" returns paths of created files.\n*/\n\nfunction gdal_rasterize(dataset) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return new Promise(function (resolve, reject) {\n    var optStr = Object(_helper_options__WEBPACK_IMPORTED_MODULE_4__[\"getOptions\"])(options);\n    var optionsPtr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALRasterizeOptionsNew(optStr.ptr, null);\n    var driverIndex = options.indexOf('-of') + 1;\n    var ext = 'tif';\n\n    if (driverIndex !== 0) {\n      var driverName = options[driverIndex];\n      var driver = _helper_drivers__WEBPACK_IMPORTED_MODULE_2__[\"drivers\"].raster[driverName];\n      if (driver) ext = driver.extension;\n    }\n\n    var outputName = dataset.path.split('.', 1)[0];\n    var filePath = \"\".concat(_helper_const__WEBPACK_IMPORTED_MODULE_5__[\"OUTPUTPATH\"], \"/\").concat(outputName, \".\").concat(ext);\n    var datasetPtr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALRasterize(filePath, null, dataset.pointer, optionsPtr, null);\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALRasterizeOptionsFree(optionsPtr);\n    Object(_helper_options__WEBPACK_IMPORTED_MODULE_4__[\"clearOptions\"])(optStr);\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALClose(datasetPtr);\n\n    if (_allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].CPLGetLastErrorNo() !== 0) {\n      var error = Object(_helper_error__WEBPACK_IMPORTED_MODULE_1__[\"getGdalError\"])();\n      reject(error);\n    } else {\n      resolve(Object(_helper_getFileList__WEBPACK_IMPORTED_MODULE_3__[\"default\"])());\n    }\n\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALClose(datasetPtr);\n  });\n}\n\n//# sourceURL=webpack:///./src/allJsFunctions/program/gdal_rasterize.js?");

/***/ }),

/***/ "./src/allJsFunctions/program/gdal_translate.js":
/*!******************************************************!*\
  !*** ./src/allJsFunctions/program/gdal_translate.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return gdal_translate; });\n/* harmony import */ var _allCFunctions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../allCFunctions */ \"./src/allCFunctions.js\");\n/* harmony import */ var _helper_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helper/error */ \"./src/allJsFunctions/helper/error.js\");\n/* harmony import */ var _helper_drivers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helper/drivers */ \"./src/allJsFunctions/helper/drivers.js\");\n/* harmony import */ var _helper_getFileList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helper/getFileList */ \"./src/allJsFunctions/helper/getFileList.js\");\n/* harmony import */ var _helper_options__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helper/options */ \"./src/allJsFunctions/helper/options.js\");\n/* harmony import */ var _helper_const__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helper/const */ \"./src/allJsFunctions/helper/const.js\");\n/* eslint-disable camelcase */\n\n\n\n\n\n\n/*\n    gdal_translate function can be used to convert raster data between different formats,\n    potentially performing some operations like subsettings, resampling,\n    and rescaling pixels in the process.\n\n    @param  {object} Dataset to be converted.\n    @param  {Array} Options (https://gdal.org/programs/gdal_translate.html)\n    @return {Promise -> Array} \"Promise\" returns paths of created files.\n*/\n\nfunction gdal_translate(dataset) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return new Promise(function (resolve, reject) {\n    var optStr = Object(_helper_options__WEBPACK_IMPORTED_MODULE_4__[\"getOptions\"])(options);\n    var translateOptionsPtr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALTranslateOptionsNew(optStr.ptr, null);\n    var driverIndex = options.indexOf('-of') + 1;\n    var ext = 'unknown';\n\n    if (driverIndex !== 0) {\n      var driverName = options[driverIndex];\n      var driver = _helper_drivers__WEBPACK_IMPORTED_MODULE_2__[\"drivers\"].raster[driverName];\n      if (driver) ext = driver.extension;\n    }\n\n    var outputName = dataset.path.split('.', 1)[0];\n    var filePath = \"\".concat(_helper_const__WEBPACK_IMPORTED_MODULE_5__[\"OUTPUTPATH\"], \"/\").concat(outputName, \".\").concat(ext);\n    var datasetPtr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALTranslate(filePath, dataset.pointer, translateOptionsPtr, null);\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALTranslateOptionsFree(translateOptionsPtr);\n    Object(_helper_options__WEBPACK_IMPORTED_MODULE_4__[\"clearOptions\"])(optStr);\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALClose(datasetPtr);\n\n    if (_allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].CPLGetLastErrorNo() !== 0) {\n      var error = Object(_helper_error__WEBPACK_IMPORTED_MODULE_1__[\"getGdalError\"])();\n      reject(error);\n    } else {\n      resolve(Object(_helper_getFileList__WEBPACK_IMPORTED_MODULE_3__[\"default\"])());\n    }\n\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALClose(datasetPtr);\n  });\n}\n\n//# sourceURL=webpack:///./src/allJsFunctions/program/gdal_translate.js?");

/***/ }),

/***/ "./src/allJsFunctions/program/gdaltransform.js":
/*!*****************************************************!*\
  !*** ./src/allJsFunctions/program/gdaltransform.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return gdaltransform; });\n/* harmony import */ var _allCFunctions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../allCFunctions */ \"./src/allCFunctions.js\");\n/* eslint-disable no-underscore-dangle */\n\nfunction gdaltransform(srcSRS, destSRS) {\n  var coords = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  return new Promise(function (resolve) {\n    var srcSRSPtr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].OSRNewSpatialReference(srcSRS);\n    var destSRSPtr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].OSRNewSpatialReference(destSRS);\n    var coordTransform = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].OCTNewCoordinateTransformation(srcSRSPtr, destSRSPtr);\n    var xCoords = new Float64Array(coords.map(function (c) {\n      return c[0];\n    }));\n    var yCoords = new Float64Array(coords.map(function (c) {\n      return c[1];\n    }));\n\n    var xCoordOffset = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module._malloc(xCoords.length * xCoords.BYTES_PER_ELEMENT);\n\n    var yCoordOffset = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module._malloc(yCoords.length * yCoords.BYTES_PER_ELEMENT);\n\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module.HEAPF64.set(xCoords, xCoordOffset / xCoords.BYTES_PER_ELEMENT);\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module.HEAPF64.set(yCoords, yCoordOffset / yCoords.BYTES_PER_ELEMENT); // const res = GDALFunctions.OCTTransform(coordTransform, xCoords.length, xCoordOffset, yCoordOffset, null);\n\n    var lngLatCoords = [_allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module.HEAPF64.subarray(xCoordOffset / xCoords.BYTES_PER_ELEMENT, xCoordOffset / xCoords.BYTES_PER_ELEMENT + xCoords.length), _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module.HEAPF64.subarray(yCoordOffset / yCoords.BYTES_PER_ELEMENT, yCoordOffset / yCoords.BYTES_PER_ELEMENT + yCoords.length)];\n    var result = [Array.from(lngLatCoords[0]), Array.from(lngLatCoords[1])];\n\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module._free(xCoordOffset);\n\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module._free(yCoordOffset);\n\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].OCTDestroyCoordinateTransformation(coordTransform);\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].OSRDestroySpatialReference(srcSRSPtr);\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].OSRDestroySpatialReference(destSRSPtr);\n    var coords2 = [];\n\n    if (result && result.length > 0 && result[0].length > 0) {\n      for (var i = 0; i < result[0].length; i += 1) {\n        coords2.push([result[0][i], result[1][i]]);\n      }\n    }\n\n    resolve(coords2);\n  });\n}\n\n//# sourceURL=webpack:///./src/allJsFunctions/program/gdaltransform.js?");

/***/ }),

/***/ "./src/allJsFunctions/program/gdalwarp.js":
/*!************************************************!*\
  !*** ./src/allJsFunctions/program/gdalwarp.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return gdalwarp; });\n/* harmony import */ var _allCFunctions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../allCFunctions */ \"./src/allCFunctions.js\");\n/* harmony import */ var _helper_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helper/error */ \"./src/allJsFunctions/helper/error.js\");\n/* harmony import */ var _helper_getFileList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helper/getFileList */ \"./src/allJsFunctions/helper/getFileList.js\");\n/* harmony import */ var _helper_options__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helper/options */ \"./src/allJsFunctions/helper/options.js\");\n/* harmony import */ var _helper_const__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helper/const */ \"./src/allJsFunctions/helper/const.js\");\n/* harmony import */ var _helper_drivers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helper/drivers */ \"./src/allJsFunctions/helper/drivers.js\");\n/* eslint-disable no-underscore-dangle */\n\n\n\n\n\n\n/*\n    gdalwarp function is an image mosaicing, reprojection and warping utility.\n    The function can reproject to any supported projection,\n    and can also apply GCPs stored with the image if the image is “raw” with control information.\n\n    @param  {object} Dataset to be converted.\n    @param  {Array} Options (https://gdal.org/programs/gdalwarp.html)\n    @return {Promise -> Array} \"Promise\" returns paths of created files.\n*/\n\nfunction gdalwarp(dataset) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return new Promise(function (resolve, reject) {\n    var optStr = Object(_helper_options__WEBPACK_IMPORTED_MODULE_3__[\"getOptions\"])(options);\n    var translateOptionsPtr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALWarpAppOptionsNew(optStr.ptr, null);\n\n    var datasetList = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module._malloc(4); // Uint32 pointer\n\n\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module.setValue(datasetList, dataset.pointer, '*');\n    var driverIndex = options.indexOf('-of') + 1;\n    var ext = 'unknown';\n\n    if (driverIndex !== 0) {\n      var driverName = options[driverIndex];\n      var driver = _helper_drivers__WEBPACK_IMPORTED_MODULE_5__[\"drivers\"].raster[driverName];\n      if (driver) ext = driver.extension;\n    }\n\n    var outputName = dataset.path.split('.', 1)[0];\n    var filePath = \"\".concat(_helper_const__WEBPACK_IMPORTED_MODULE_4__[\"OUTPUTPATH\"], \"/\").concat(outputName, \".\").concat(ext);\n    var datasetPtr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALWarp(filePath, null, 1, datasetList, translateOptionsPtr, null);\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALWarpAppOptionsFree(translateOptionsPtr);\n    Object(_helper_options__WEBPACK_IMPORTED_MODULE_3__[\"clearOptions\"])(optStr);\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALClose(datasetPtr);\n\n    if (_allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].CPLGetLastErrorNo() !== 0) {\n      var error = Object(_helper_error__WEBPACK_IMPORTED_MODULE_1__[\"getGdalError\"])();\n      reject(error);\n    } else {\n      resolve(Object(_helper_getFileList__WEBPACK_IMPORTED_MODULE_2__[\"default\"])());\n    }\n\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALClose(datasetPtr);\n  });\n}\n\n//# sourceURL=webpack:///./src/allJsFunctions/program/gdalwarp.js?");

/***/ }),

/***/ "./src/allJsFunctions/program/ogr2ogr.js":
/*!***********************************************!*\
  !*** ./src/allJsFunctions/program/ogr2ogr.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ogr2ogr; });\n/* harmony import */ var _allCFunctions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../allCFunctions */ \"./src/allCFunctions.js\");\n/* harmony import */ var _helper_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helper/error */ \"./src/allJsFunctions/helper/error.js\");\n/* harmony import */ var _helper_getFileList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helper/getFileList */ \"./src/allJsFunctions/helper/getFileList.js\");\n/* harmony import */ var _helper_options__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helper/options */ \"./src/allJsFunctions/helper/options.js\");\n/* harmony import */ var _helper_const__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helper/const */ \"./src/allJsFunctions/helper/const.js\");\n/* harmony import */ var _helper_drivers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helper/drivers */ \"./src/allJsFunctions/helper/drivers.js\");\n/* eslint-disable no-underscore-dangle */\n\n/* eslint-disable camelcase */\n\n\n\n\n\n\n/*\n    ogr2ogr function can be used to convert simple features data between file formats.\n    It can also perform various operations during the process,\n    such as spatial or attribute selection, reducing the set of attributes,\n    setting the output coordinate system or even reprojecting the features during translation.\n\n    @param  {object} Dataset to be converted.\n    @param  {Array} Options (https://gdal.org/programs/ogr2ogr.html)\n    @return {Promise -> Array} \"Promise\" returns paths of created files.\n*/\n\nfunction ogr2ogr(dataset) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return new Promise(function (resolve, reject) {\n    var optStr = Object(_helper_options__WEBPACK_IMPORTED_MODULE_3__[\"getOptions\"])(options);\n    var translateOptionsPtr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALVectorTranslateOptionsNew(optStr.ptr, null);\n\n    var datasetList = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module._malloc(4);\n\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].Module.setValue(datasetList, dataset.pointer, '*');\n    var driverIndex = options.indexOf('-f') + 1;\n    var ext = 'unknown';\n\n    if (driverIndex !== 0) {\n      var driverName = options[driverIndex];\n      var driver = _helper_drivers__WEBPACK_IMPORTED_MODULE_5__[\"drivers\"].vector[driverName];\n\n      if (driver) {\n        if (driverName === 'MapInfo File' && options.indexOf('FORMAT=MIF') !== -1) ext = 'mif';else ext = driver.extension;\n      }\n    }\n\n    var outputName = dataset.path.split('.', 1)[0];\n    var filePath = \"\".concat(_helper_const__WEBPACK_IMPORTED_MODULE_4__[\"OUTPUTPATH\"], \"/\").concat(outputName, \".\").concat(ext);\n    var datasetPtr = _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALVectorTranslate(filePath, null, 1, datasetList, translateOptionsPtr, null);\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALVectorTranslateOptionsFree(translateOptionsPtr);\n    Object(_helper_options__WEBPACK_IMPORTED_MODULE_3__[\"clearOptions\"])(optStr);\n\n    if (_allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].CPLGetLastErrorNo() !== 0) {\n      var error = Object(_helper_error__WEBPACK_IMPORTED_MODULE_1__[\"getGdalError\"])();\n      reject(error);\n    } else {\n      resolve(Object(_helper_getFileList__WEBPACK_IMPORTED_MODULE_2__[\"default\"])());\n    }\n\n    _allCFunctions__WEBPACK_IMPORTED_MODULE_0__[\"GDALFunctions\"].GDALClose(datasetPtr);\n  });\n}\n\n//# sourceURL=webpack:///./src/allJsFunctions/program/ogr2ogr.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Gdal3; });\n/* harmony import */ var detect_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! detect-node */ \"./node_modules/detect-node/index.esm.js\");\n/* harmony import */ var _dist_gdal3WebAssembly_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dist/gdal3WebAssembly.js */ \"./dist/gdal3WebAssembly.js\");\n/* harmony import */ var _dist_gdal3WebAssembly_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_dist_gdal3WebAssembly_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _allCFunctions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./allCFunctions */ \"./src/allCFunctions.js\");\n/* harmony import */ var _allJsFunctions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./allJsFunctions */ \"./src/allJsFunctions.js\");\n/* harmony import */ var _allJsFunctions_helper_drivers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./allJsFunctions/helper/drivers */ \"./src/allJsFunctions/helper/drivers.js\");\n/* harmony import */ var _allJsFunctions_helper_filesystem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./allJsFunctions/helper/filesystem */ \"./src/allJsFunctions/helper/filesystem.js\");\n/* harmony import */ var _allJsFunctions_helper_const__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./allJsFunctions/helper/const */ \"./src/allJsFunctions/helper/const.js\");\n/* harmony import */ var _workerSupport__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./workerSupport */ \"./src/workerSupport.js\");\n // eslint-disable-next-line import/extensions\n\n\n\n\n\n\n\n\nfunction Gdal3() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return new Promise(function (resolve, reject) {\n    var Module = _allCFunctions__WEBPACK_IMPORTED_MODULE_2__[\"GDALFunctions\"].Module;\n    var originalOnAbortFunction = Module.onAbort;\n\n    Module.onAbort = function onAbort(errorThatCausedAbort) {\n      reject(new Error(errorThatCausedAbort));\n\n      if (originalOnAbortFunction) {\n        originalOnAbortFunction(errorThatCausedAbort);\n      }\n    };\n\n    Module.print = function p(text) {\n      console.error(\"stdout: \".concat(text));\n    };\n\n    Module.printErr = function p(text) {\n      console.error(\"stdout: \".concat(text));\n    };\n\n    Module.preRun = [function (_ref) {\n      var ENV = _ref.ENV;\n      ENV.PROJ_LIB = '/usr/share/proj';\n      ENV.GDAL_DATA = '/usr/share/gdal';\n      ENV.DXF_FEATURE_LIMIT_PER_BLOCK = '-1';\n    }];\n\n    Module.onRuntimeInitialized = function onRuntimeInitialized() {\n      Object(_allCFunctions__WEBPACK_IMPORTED_MODULE_2__[\"initCFunctions\"])();\n      Module.FS.mkdir(_allJsFunctions_helper_const__WEBPACK_IMPORTED_MODULE_6__[\"INPUTPATH\"]);\n      Module.FS.mkdir(_allJsFunctions_helper_const__WEBPACK_IMPORTED_MODULE_6__[\"OUTPUTPATH\"]);\n\n      if (config.dest) {\n        Object(_allJsFunctions_helper_filesystem__WEBPACK_IMPORTED_MODULE_5__[\"mountDest\"])(config.dest);\n      }\n\n      Object(_allJsFunctions_helper_drivers__WEBPACK_IMPORTED_MODULE_4__[\"setDrivers\"])();\n    };\n\n    Module.locateFile = function locateFile(path) {\n      var prefix = '';\n\n      if (config.path) {\n        prefix = config.path;\n        if (prefix.slice(-1) !== '/') prefix += '/';\n      } else if (detect_node__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n        prefix = 'node_modules/gdal3.js/dist/';\n      }\n\n      return prefix + path;\n    };\n\n    if (detect_node__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n      Module.getPreloadedPackage = function getPreloadedPackage(packageName) {\n        // eslint-disable-next-line global-require\n        return __webpack_require__(/*! fs */ \"fs\").readFileSync(\"./\".concat(packageName), {\n          flag: 'r'\n        }).buffer;\n      };\n    }\n\n    _dist_gdal3WebAssembly_js__WEBPACK_IMPORTED_MODULE_1___default()(_allCFunctions__WEBPACK_IMPORTED_MODULE_2__[\"GDALFunctions\"].Module).then(function () {\n      resolve(_allJsFunctions__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n    });\n  });\n}\n\nif (detect_node__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n  global.location = {\n    pathname: './'\n  };\n}\n\nif (typeof window !== 'undefined') {\n  window.Gdal3 = Gdal3;\n}\n\nif (typeof importScripts === 'function') {\n  Object(_workerSupport__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(Gdal3);\n}\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/workerSupport.js":
/*!******************************!*\
  !*** ./src/workerSupport.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return workerSupport; });\n/* harmony import */ var _allJsFunctions_helper_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./allJsFunctions/helper/error */ \"./src/allJsFunctions/helper/error.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\nfunction onModuleReady(Gdal) {\n  var _this = this;\n\n  if (this.data && this.data.func && Gdal[this.data.func]) {\n    Gdal[this.data.func].apply(Gdal, _toConsumableArray(this.data.params)).then(function (result) {\n      postMessage({\n        success: true,\n        id: _this.data.id,\n        data: result\n      });\n    })[\"catch\"](function (error) {\n      postMessage({\n        success: false,\n        id: _this.data.id,\n        data: error\n      });\n    });\n  } else {\n    console.error('undefined function', this.data);\n  }\n}\n\nfunction onError(err) {\n  postMessage({\n    success: false,\n    id: this.id,\n    data: Object(_allJsFunctions_helper_error__WEBPACK_IMPORTED_MODULE_0__[\"getSystemError\"])(err.message)\n  });\n}\n\nfunction workerSupport(Gdal3) {\n  var moduleReady = Gdal3();\n  moduleReady.then(function (_ref) {\n    var drivers = _ref.drivers;\n    return postMessage({\n      success: true,\n      id: 'onload',\n      data: drivers\n    });\n  })[\"catch\"](function (e) {\n    return postMessage({\n      success: false,\n      id: 'onload',\n      data: e\n    });\n  });\n\n  onmessage = function onmessage(event) {\n    return moduleReady.then(onModuleReady.bind(event))[\"catch\"](onError.bind(event));\n  };\n}\n\n//# sourceURL=webpack:///./src/workerSupport.js?");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"fs\");\n\n//# sourceURL=webpack:///external_%22fs%22?");

/***/ })

/******/ })["default"];
});